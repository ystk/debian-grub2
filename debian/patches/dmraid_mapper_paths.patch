Description: Fix DM-RAID probing with recent device-mapper udev rules
Author: Colin Watson <cjwatson@debian.org>
Origin: upstream, http://bazaar.launchpad.net/~vcs-imports/grub/grub2-bzr/revision/2780
Forwarded: yes
Last-Update: 2010-09-17

Index: b/kern/emu/hostdisk.c
===================================================================
--- a/kern/emu/hostdisk.c
+++ b/kern/emu/hostdisk.c
@@ -968,13 +968,16 @@
 #ifdef __linux__
       /* On Linux, the devfs uses symbolic links horribly, and that
 	 confuses the interface very much, so use realpath to expand
-	 symbolic links.  */
-      map[drive].device = xmalloc (PATH_MAX);
-      if (! realpath (p, map[drive].device))
-	grub_util_error ("cannot get the real path of `%s'", p);
-#else
-      map[drive].device = xstrdup (p);
+	 symbolic links.  Leave /dev/mapper/ alone, though.  */
+      if (strncmp (p, "/dev/mapper/", 12) != 0)
+	{
+	  map[drive].device = xmalloc (PATH_MAX);
+	  if (! realpath (p, map[drive].device))
+	    grub_util_error ("cannot get the real path of `%s'", p);
+	}
+      else
 #endif
+      map[drive].device = xstrdup (p);
     }
 
   fclose (fp);
@@ -1156,8 +1159,10 @@
 	}
 
 #ifdef HAVE_DEVICE_MAPPER
-      /* If this is a DM-RAID device.  */
-      if ((strncmp ("mapper/", p, 7) == 0))
+      /* If this is a DM-RAID device.
+         Compare os_dev rather than path here, since nodes under
+         /dev/mapper/ are often symlinks.  */
+      if ((strncmp ("/dev/mapper/", os_dev, 12) == 0))
 	{
 	  static struct dm_tree *tree = NULL;
 	  uint32_t maj, min;
