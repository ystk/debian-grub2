# -*- makefile -*-
# Generated by genmk.rb, please don't edit!

# Scripts.
sbin_SCRIPTS = grub-install

# For grub-install.
grub_install_SOURCES = util/i386/efi/grub-install.in
CLEANFILES += grub-install

grub-install: util/i386/efi/grub-install.in $(util/i386/efi/grub-install.in_DEPENDENCIES) config.status
	./config.status --file=-:util/i386/efi/grub-install.in | sed -e 's,@pkglib_DATA@,$(pkglib_DATA),g' > $@
	chmod +x $@


bin_SCRIPTS += grub-mkrescue
grub_mkrescue_SOURCES = util/grub-mkrescue.in
CLEANFILES += grub-mkrescue

grub-mkrescue: util/grub-mkrescue.in $(util/grub-mkrescue.in_DEPENDENCIES) config.status
	./config.status --file=-:util/grub-mkrescue.in | sed -e 's,@pkglib_DATA@,$(pkglib_DATA),g' > $@
	chmod +x $@


# Modules.
pkglib_PROGRAMS = kernel.img
pkglib_MODULES = chain.mod appleldr.mod \
	linux.mod halt.mod  \
	datetime.mod loadbios.mod \
	fixvideo.mod mmap.mod acpi.mod

# For kernel.img.
kernel_img_RELOCATABLE = yes
kernel_img_SOURCES = kern/$(target_cpu)/efi/startup.S kern/main.c kern/device.c \
	kern/disk.c kern/dl.c kern/file.c kern/fs.c kern/err.c \
	kern/misc.c kern/mm.c kern/term.c \
	kern/rescue_parser.c kern/rescue_reader.c \
	kern/$(target_cpu)/dl.c kern/i386/efi/init.c kern/parser.c kern/partition.c \
	kern/env.c symlist.c kern/efi/efi.c kern/efi/init.c kern/efi/mm.c \
	term/efi/console.c disk/efi/efidisk.c \
	kern/time.c kern/list.c  kern/command.c kern/corecmd.c \
	kern/i386/tsc.c kern/i386/pit.c \
	kern/generic/rtc_get_time_ms.c \
	kern/generic/millisleep.c
MOSTLYCLEANFILES += kernel_img-kern___target_cpu__efi_startup.d kernel_img-kern_main.d kernel_img-kern_device.d kernel_img-kern_disk.d kernel_img-kern_dl.d kernel_img-kern_file.d kernel_img-kern_fs.d kernel_img-kern_err.d kernel_img-kern_misc.d kernel_img-kern_mm.d kernel_img-kern_term.d kernel_img-kern_rescue_parser.d kernel_img-kern_rescue_reader.d kernel_img-kern___target_cpu__dl.d kernel_img-kern_i386_efi_init.d kernel_img-kern_parser.d kernel_img-kern_partition.d kernel_img-kern_env.d kernel_img-symlist.d kernel_img-kern_efi_efi.d kernel_img-kern_efi_init.d kernel_img-kern_efi_mm.d kernel_img-term_efi_console.d kernel_img-disk_efi_efidisk.d kernel_img-kern_time.d kernel_img-kern_list.d kernel_img-kern_command.d kernel_img-kern_corecmd.d kernel_img-kern_i386_tsc.d kernel_img-kern_i386_pit.d kernel_img-kern_generic_rtc_get_time_ms.d kernel_img-kern_generic_millisleep.d

kernel_img-kern___target_cpu__efi_startup.o: kern/$(target_cpu)/efi/startup.S $(kern/$(target_cpu)/efi/startup.S_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu)/efi -I$(srcdir)/kern/$(target_cpu)/efi $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(kernel_img_ASFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/efi/startup.S\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu__efi_startup.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu__efi_startup.o
kernel_img-kern_main.o: kern/main.c $(kern/main.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/main.c\" -MD -c -o $@ $<

-include kernel_img-kern_main.d

kernel_img_OBJECTS += kernel_img-kern_main.o
kernel_img-kern_device.o: kern/device.c $(kern/device.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/device.c\" -MD -c -o $@ $<

-include kernel_img-kern_device.d

kernel_img_OBJECTS += kernel_img-kern_device.o
kernel_img-kern_disk.o: kern/disk.c $(kern/disk.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/disk.c\" -MD -c -o $@ $<

-include kernel_img-kern_disk.d

kernel_img_OBJECTS += kernel_img-kern_disk.o
kernel_img-kern_dl.o: kern/dl.c $(kern/dl.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/dl.c\" -MD -c -o $@ $<

-include kernel_img-kern_dl.d

kernel_img_OBJECTS += kernel_img-kern_dl.o
kernel_img-kern_file.o: kern/file.c $(kern/file.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/file.c\" -MD -c -o $@ $<

-include kernel_img-kern_file.d

kernel_img_OBJECTS += kernel_img-kern_file.o
kernel_img-kern_fs.o: kern/fs.c $(kern/fs.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/fs.c\" -MD -c -o $@ $<

-include kernel_img-kern_fs.d

kernel_img_OBJECTS += kernel_img-kern_fs.o
kernel_img-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<

-include kernel_img-kern_err.d

kernel_img_OBJECTS += kernel_img-kern_err.o
kernel_img-kern_misc.o: kern/misc.c $(kern/misc.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/misc.c\" -MD -c -o $@ $<

-include kernel_img-kern_misc.d

kernel_img_OBJECTS += kernel_img-kern_misc.o
kernel_img-kern_mm.o: kern/mm.c $(kern/mm.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/mm.c\" -MD -c -o $@ $<

-include kernel_img-kern_mm.d

kernel_img_OBJECTS += kernel_img-kern_mm.o
kernel_img-kern_term.o: kern/term.c $(kern/term.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/term.c\" -MD -c -o $@ $<

-include kernel_img-kern_term.d

kernel_img_OBJECTS += kernel_img-kern_term.o
kernel_img-kern_rescue_parser.o: kern/rescue_parser.c $(kern/rescue_parser.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/rescue_parser.c\" -MD -c -o $@ $<

-include kernel_img-kern_rescue_parser.d

kernel_img_OBJECTS += kernel_img-kern_rescue_parser.o
kernel_img-kern_rescue_reader.o: kern/rescue_reader.c $(kern/rescue_reader.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/rescue_reader.c\" -MD -c -o $@ $<

-include kernel_img-kern_rescue_reader.d

kernel_img_OBJECTS += kernel_img-kern_rescue_reader.o
kernel_img-kern___target_cpu__dl.o: kern/$(target_cpu)/dl.c $(kern/$(target_cpu)/dl.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu) -I$(srcdir)/kern/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/dl.c\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu__dl.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu__dl.o
kernel_img-kern_i386_efi_init.o: kern/i386/efi/init.c $(kern/i386/efi/init.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386/efi -I$(srcdir)/kern/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/i386/efi/init.c\" -MD -c -o $@ $<

-include kernel_img-kern_i386_efi_init.d

kernel_img_OBJECTS += kernel_img-kern_i386_efi_init.o
kernel_img-kern_parser.o: kern/parser.c $(kern/parser.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/parser.c\" -MD -c -o $@ $<

-include kernel_img-kern_parser.d

kernel_img_OBJECTS += kernel_img-kern_parser.o
kernel_img-kern_partition.o: kern/partition.c $(kern/partition.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/partition.c\" -MD -c -o $@ $<

-include kernel_img-kern_partition.d

kernel_img_OBJECTS += kernel_img-kern_partition.o
kernel_img-kern_env.o: kern/env.c $(kern/env.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/env.c\" -MD -c -o $@ $<

-include kernel_img-kern_env.d

kernel_img_OBJECTS += kernel_img-kern_env.o
kernel_img-symlist.o: symlist.c $(symlist.c_DEPENDENCIES)
	$(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"symlist.c\" -MD -c -o $@ $<

-include kernel_img-symlist.d

kernel_img_OBJECTS += kernel_img-symlist.o
kernel_img-kern_efi_efi.o: kern/efi/efi.c $(kern/efi/efi.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/efi -I$(srcdir)/kern/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/efi/efi.c\" -MD -c -o $@ $<

-include kernel_img-kern_efi_efi.d

kernel_img_OBJECTS += kernel_img-kern_efi_efi.o
kernel_img-kern_efi_init.o: kern/efi/init.c $(kern/efi/init.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/efi -I$(srcdir)/kern/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/efi/init.c\" -MD -c -o $@ $<

-include kernel_img-kern_efi_init.d

kernel_img_OBJECTS += kernel_img-kern_efi_init.o
kernel_img-kern_efi_mm.o: kern/efi/mm.c $(kern/efi/mm.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/efi -I$(srcdir)/kern/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/efi/mm.c\" -MD -c -o $@ $<

-include kernel_img-kern_efi_mm.d

kernel_img_OBJECTS += kernel_img-kern_efi_mm.o
kernel_img-term_efi_console.o: term/efi/console.c $(term/efi/console.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm/efi -I$(srcdir)/term/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"term/efi/console.c\" -MD -c -o $@ $<

-include kernel_img-term_efi_console.d

kernel_img_OBJECTS += kernel_img-term_efi_console.o
kernel_img-disk_efi_efidisk.o: disk/efi/efidisk.c $(disk/efi/efidisk.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk/efi -I$(srcdir)/disk/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"disk/efi/efidisk.c\" -MD -c -o $@ $<

-include kernel_img-disk_efi_efidisk.d

kernel_img_OBJECTS += kernel_img-disk_efi_efidisk.o
kernel_img-kern_time.o: kern/time.c $(kern/time.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/time.c\" -MD -c -o $@ $<

-include kernel_img-kern_time.d

kernel_img_OBJECTS += kernel_img-kern_time.o
kernel_img-kern_list.o: kern/list.c $(kern/list.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/list.c\" -MD -c -o $@ $<

-include kernel_img-kern_list.d

kernel_img_OBJECTS += kernel_img-kern_list.o
kernel_img-kern_command.o: kern/command.c $(kern/command.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/command.c\" -MD -c -o $@ $<

-include kernel_img-kern_command.d

kernel_img_OBJECTS += kernel_img-kern_command.o
kernel_img-kern_corecmd.o: kern/corecmd.c $(kern/corecmd.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/corecmd.c\" -MD -c -o $@ $<

-include kernel_img-kern_corecmd.d

kernel_img_OBJECTS += kernel_img-kern_corecmd.o
kernel_img-kern_i386_tsc.o: kern/i386/tsc.c $(kern/i386/tsc.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386 -I$(srcdir)/kern/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/i386/tsc.c\" -MD -c -o $@ $<

-include kernel_img-kern_i386_tsc.d

kernel_img_OBJECTS += kernel_img-kern_i386_tsc.o
kernel_img-kern_i386_pit.o: kern/i386/pit.c $(kern/i386/pit.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386 -I$(srcdir)/kern/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/i386/pit.c\" -MD -c -o $@ $<

-include kernel_img-kern_i386_pit.d

kernel_img_OBJECTS += kernel_img-kern_i386_pit.o
kernel_img-kern_generic_rtc_get_time_ms.o: kern/generic/rtc_get_time_ms.c $(kern/generic/rtc_get_time_ms.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/generic -I$(srcdir)/kern/generic $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/generic/rtc_get_time_ms.c\" -MD -c -o $@ $<

-include kernel_img-kern_generic_rtc_get_time_ms.d

kernel_img_OBJECTS += kernel_img-kern_generic_rtc_get_time_ms.o
kernel_img-kern_generic_millisleep.o: kern/generic/millisleep.c $(kern/generic/millisleep.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/generic -I$(srcdir)/kern/generic $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/generic/millisleep.c\" -MD -c -o $@ $<

-include kernel_img-kern_generic_millisleep.d

kernel_img_OBJECTS += kernel_img-kern_generic_millisleep.o
ifeq ($(target_cpu),x86_64)
kernel_img_SOURCES += kern/x86_64/efi/callwrap.S
MOSTLYCLEANFILES += kernel_img-kern_x86_64_efi_callwrap.d

kernel_img-kern_x86_64_efi_callwrap.o: kern/x86_64/efi/callwrap.S $(kern/x86_64/efi/callwrap.S_DEPENDENCIES)
	$(TARGET_CC) -Ikern/x86_64/efi -I$(srcdir)/kern/x86_64/efi $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(kernel_img_ASFLAGS) -DGRUB_FILE=\"kern/x86_64/efi/callwrap.S\" -MD -c -o $@ $<

-include kernel_img-kern_x86_64_efi_callwrap.d

kernel_img_OBJECTS += kernel_img-kern_x86_64_efi_callwrap.o
endif
kernel_img_HEADERS += efi/efi.h efi/time.h efi/disk.h i386/pit.h
kernel_img_CFLAGS = $(COMMON_CFLAGS)
kernel_img_ASFLAGS = $(COMMON_ASFLAGS)
kernel_img_LDFLAGS += $(COMMON_LDFLAGS)

# For acpi.mod.
acpi_mod_SOURCES = commands/acpi.c commands/efi/acpi.c

clean-module-acpi.mod.1:
	rm -f acpi.mod mod-acpi.o mod-acpi.c pre-acpi.o acpi_mod-commands_acpi.o acpi_mod-commands_efi_acpi.o und-acpi.lst

CLEAN_MODULE_TARGETS += clean-module-acpi.mod.1

clean-module-acpi.mod-symbol.1:
	rm -f def-acpi.lst

CLEAN_MODULE_TARGETS += clean-module-acpi.mod-symbol.1
DEFSYMFILES += def-acpi.lst
mostlyclean-module-acpi.mod.1:
	rm -f acpi_mod-commands_acpi.d acpi_mod-commands_efi_acpi.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-acpi.mod.1
UNDSYMFILES += und-acpi.lst

ifeq ($(TARGET_NO_MODULES), yes)
acpi.mod: pre-acpi.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(acpi_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-acpi.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
acpi.mod: pre-acpi.o mod-acpi.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(acpi_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-acpi.o mod-acpi.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
acpi.mod: pre-acpi.o mod-acpi.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(acpi_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-acpi.o mod-acpi.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-acpi.o: $(acpi_mod_DEPENDENCIES) acpi_mod-commands_acpi.o acpi_mod-commands_efi_acpi.o
	-rm -f $@
	$(TARGET_CC) $(acpi_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ acpi_mod-commands_acpi.o acpi_mod-commands_efi_acpi.o

mod-acpi.o: mod-acpi.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -DGRUB_FILE=\"mod-acpi.c\" -c -o $@ $<

mod-acpi.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'acpi' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-acpi.lst: pre-acpi.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 acpi/' > $@
else
def-acpi.lst: pre-acpi.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 acpi/' > $@
endif

und-acpi.lst: pre-acpi.o
	echo 'acpi' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

acpi_mod-commands_acpi.o: commands/acpi.c $(commands/acpi.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -DGRUB_FILE=\"commands/acpi.c\" -MD -c -o $@ $<
-include acpi_mod-commands_acpi.d

clean-module-acpi_mod-commands_acpi-extra.1:
	rm -f cmd-acpi_mod-commands_acpi.lst fs-acpi_mod-commands_acpi.lst partmap-acpi_mod-commands_acpi.lst handler-acpi_mod-commands_acpi.lst parttool-acpi_mod-commands_acpi.lst video-acpi_mod-commands_acpi.lst terminal-acpi_mod-commands_acpi.lst

CLEAN_MODULE_TARGETS += clean-module-acpi_mod-commands_acpi-extra.1

COMMANDFILES += cmd-acpi_mod-commands_acpi.lst
FSFILES += fs-acpi_mod-commands_acpi.lst
PARTTOOLFILES += parttool-acpi_mod-commands_acpi.lst
PARTMAPFILES += partmap-acpi_mod-commands_acpi.lst
HANDLERFILES += handler-acpi_mod-commands_acpi.lst
TERMINALFILES += terminal-acpi_mod-commands_acpi.lst
VIDEOFILES += video-acpi_mod-commands_acpi.lst

cmd-acpi_mod-commands_acpi.lst: commands/acpi.c $(commands/acpi.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh acpi > $@ || (rm -f $@; exit 1)

fs-acpi_mod-commands_acpi.lst: commands/acpi.c $(commands/acpi.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh acpi > $@ || (rm -f $@; exit 1)

parttool-acpi_mod-commands_acpi.lst: commands/acpi.c $(commands/acpi.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh acpi > $@ || (rm -f $@; exit 1)

partmap-acpi_mod-commands_acpi.lst: commands/acpi.c $(commands/acpi.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh acpi > $@ || (rm -f $@; exit 1)

handler-acpi_mod-commands_acpi.lst: commands/acpi.c $(commands/acpi.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh acpi > $@ || (rm -f $@; exit 1)

terminal-acpi_mod-commands_acpi.lst: commands/acpi.c $(commands/acpi.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh acpi > $@ || (rm -f $@; exit 1)

video-acpi_mod-commands_acpi.lst: commands/acpi.c $(commands/acpi.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh acpi > $@ || (rm -f $@; exit 1)

acpi_mod-commands_efi_acpi.o: commands/efi/acpi.c $(commands/efi/acpi.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -DGRUB_FILE=\"commands/efi/acpi.c\" -MD -c -o $@ $<
-include acpi_mod-commands_efi_acpi.d

clean-module-acpi_mod-commands_efi_acpi-extra.1:
	rm -f cmd-acpi_mod-commands_efi_acpi.lst fs-acpi_mod-commands_efi_acpi.lst partmap-acpi_mod-commands_efi_acpi.lst handler-acpi_mod-commands_efi_acpi.lst parttool-acpi_mod-commands_efi_acpi.lst video-acpi_mod-commands_efi_acpi.lst terminal-acpi_mod-commands_efi_acpi.lst

CLEAN_MODULE_TARGETS += clean-module-acpi_mod-commands_efi_acpi-extra.1

COMMANDFILES += cmd-acpi_mod-commands_efi_acpi.lst
FSFILES += fs-acpi_mod-commands_efi_acpi.lst
PARTTOOLFILES += parttool-acpi_mod-commands_efi_acpi.lst
PARTMAPFILES += partmap-acpi_mod-commands_efi_acpi.lst
HANDLERFILES += handler-acpi_mod-commands_efi_acpi.lst
TERMINALFILES += terminal-acpi_mod-commands_efi_acpi.lst
VIDEOFILES += video-acpi_mod-commands_efi_acpi.lst

cmd-acpi_mod-commands_efi_acpi.lst: commands/efi/acpi.c $(commands/efi/acpi.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh acpi > $@ || (rm -f $@; exit 1)

fs-acpi_mod-commands_efi_acpi.lst: commands/efi/acpi.c $(commands/efi/acpi.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh acpi > $@ || (rm -f $@; exit 1)

parttool-acpi_mod-commands_efi_acpi.lst: commands/efi/acpi.c $(commands/efi/acpi.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh acpi > $@ || (rm -f $@; exit 1)

partmap-acpi_mod-commands_efi_acpi.lst: commands/efi/acpi.c $(commands/efi/acpi.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh acpi > $@ || (rm -f $@; exit 1)

handler-acpi_mod-commands_efi_acpi.lst: commands/efi/acpi.c $(commands/efi/acpi.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh acpi > $@ || (rm -f $@; exit 1)

terminal-acpi_mod-commands_efi_acpi.lst: commands/efi/acpi.c $(commands/efi/acpi.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh acpi > $@ || (rm -f $@; exit 1)

video-acpi_mod-commands_efi_acpi.lst: commands/efi/acpi.c $(commands/efi/acpi.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(acpi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh acpi > $@ || (rm -f $@; exit 1)

acpi_mod_CFLAGS = $(COMMON_CFLAGS)
acpi_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For mmap.mod.
mmap_mod_SOURCES = mmap/mmap.c mmap/i386/uppermem.c mmap/i386/mmap.c \
		   mmap/efi/mmap.c

clean-module-mmap.mod.1:
	rm -f mmap.mod mod-mmap.o mod-mmap.c pre-mmap.o mmap_mod-mmap_mmap.o mmap_mod-mmap_i386_uppermem.o mmap_mod-mmap_i386_mmap.o mmap_mod-mmap_efi_mmap.o und-mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap.mod.1

clean-module-mmap.mod-symbol.1:
	rm -f def-mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap.mod-symbol.1
DEFSYMFILES += def-mmap.lst
mostlyclean-module-mmap.mod.1:
	rm -f mmap_mod-mmap_mmap.d mmap_mod-mmap_i386_uppermem.d mmap_mod-mmap_i386_mmap.d mmap_mod-mmap_efi_mmap.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-mmap.mod.1
UNDSYMFILES += und-mmap.lst

ifeq ($(TARGET_NO_MODULES), yes)
mmap.mod: pre-mmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-mmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
mmap.mod: pre-mmap.o mod-mmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-mmap.o mod-mmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
mmap.mod: pre-mmap.o mod-mmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-mmap.o mod-mmap.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-mmap.o: $(mmap_mod_DEPENDENCIES) mmap_mod-mmap_mmap.o mmap_mod-mmap_i386_uppermem.o mmap_mod-mmap_i386_mmap.o mmap_mod-mmap_efi_mmap.o
	-rm -f $@
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ mmap_mod-mmap_mmap.o mmap_mod-mmap_i386_uppermem.o mmap_mod-mmap_i386_mmap.o mmap_mod-mmap_efi_mmap.o

mod-mmap.o: mod-mmap.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mod-mmap.c\" -c -o $@ $<

mod-mmap.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'mmap' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-mmap.lst: pre-mmap.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 mmap/' > $@
else
def-mmap.lst: pre-mmap.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 mmap/' > $@
endif

und-mmap.lst: pre-mmap.o
	echo 'mmap' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

mmap_mod-mmap_mmap.o: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES)
	$(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mmap/mmap.c\" -MD -c -o $@ $<
-include mmap_mod-mmap_mmap.d

clean-module-mmap_mod-mmap_mmap-extra.1:
	rm -f cmd-mmap_mod-mmap_mmap.lst fs-mmap_mod-mmap_mmap.lst partmap-mmap_mod-mmap_mmap.lst handler-mmap_mod-mmap_mmap.lst parttool-mmap_mod-mmap_mmap.lst video-mmap_mod-mmap_mmap.lst terminal-mmap_mod-mmap_mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap_mod-mmap_mmap-extra.1

COMMANDFILES += cmd-mmap_mod-mmap_mmap.lst
FSFILES += fs-mmap_mod-mmap_mmap.lst
PARTTOOLFILES += parttool-mmap_mod-mmap_mmap.lst
PARTMAPFILES += partmap-mmap_mod-mmap_mmap.lst
HANDLERFILES += handler-mmap_mod-mmap_mmap.lst
TERMINALFILES += terminal-mmap_mod-mmap_mmap.lst
VIDEOFILES += video-mmap_mod-mmap_mmap.lst

cmd-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mmap > $@ || (rm -f $@; exit 1)

fs-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mmap > $@ || (rm -f $@; exit 1)

parttool-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mmap > $@ || (rm -f $@; exit 1)

partmap-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mmap > $@ || (rm -f $@; exit 1)

handler-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mmap > $@ || (rm -f $@; exit 1)

terminal-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mmap > $@ || (rm -f $@; exit 1)

video-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mmap > $@ || (rm -f $@; exit 1)

mmap_mod-mmap_i386_uppermem.o: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES)
	$(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mmap/i386/uppermem.c\" -MD -c -o $@ $<
-include mmap_mod-mmap_i386_uppermem.d

clean-module-mmap_mod-mmap_i386_uppermem-extra.1:
	rm -f cmd-mmap_mod-mmap_i386_uppermem.lst fs-mmap_mod-mmap_i386_uppermem.lst partmap-mmap_mod-mmap_i386_uppermem.lst handler-mmap_mod-mmap_i386_uppermem.lst parttool-mmap_mod-mmap_i386_uppermem.lst video-mmap_mod-mmap_i386_uppermem.lst terminal-mmap_mod-mmap_i386_uppermem.lst

CLEAN_MODULE_TARGETS += clean-module-mmap_mod-mmap_i386_uppermem-extra.1

COMMANDFILES += cmd-mmap_mod-mmap_i386_uppermem.lst
FSFILES += fs-mmap_mod-mmap_i386_uppermem.lst
PARTTOOLFILES += parttool-mmap_mod-mmap_i386_uppermem.lst
PARTMAPFILES += partmap-mmap_mod-mmap_i386_uppermem.lst
HANDLERFILES += handler-mmap_mod-mmap_i386_uppermem.lst
TERMINALFILES += terminal-mmap_mod-mmap_i386_uppermem.lst
VIDEOFILES += video-mmap_mod-mmap_i386_uppermem.lst

cmd-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mmap > $@ || (rm -f $@; exit 1)

fs-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mmap > $@ || (rm -f $@; exit 1)

parttool-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mmap > $@ || (rm -f $@; exit 1)

partmap-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mmap > $@ || (rm -f $@; exit 1)

handler-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mmap > $@ || (rm -f $@; exit 1)

terminal-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mmap > $@ || (rm -f $@; exit 1)

video-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mmap > $@ || (rm -f $@; exit 1)

mmap_mod-mmap_i386_mmap.o: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES)
	$(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mmap/i386/mmap.c\" -MD -c -o $@ $<
-include mmap_mod-mmap_i386_mmap.d

clean-module-mmap_mod-mmap_i386_mmap-extra.1:
	rm -f cmd-mmap_mod-mmap_i386_mmap.lst fs-mmap_mod-mmap_i386_mmap.lst partmap-mmap_mod-mmap_i386_mmap.lst handler-mmap_mod-mmap_i386_mmap.lst parttool-mmap_mod-mmap_i386_mmap.lst video-mmap_mod-mmap_i386_mmap.lst terminal-mmap_mod-mmap_i386_mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap_mod-mmap_i386_mmap-extra.1

COMMANDFILES += cmd-mmap_mod-mmap_i386_mmap.lst
FSFILES += fs-mmap_mod-mmap_i386_mmap.lst
PARTTOOLFILES += parttool-mmap_mod-mmap_i386_mmap.lst
PARTMAPFILES += partmap-mmap_mod-mmap_i386_mmap.lst
HANDLERFILES += handler-mmap_mod-mmap_i386_mmap.lst
TERMINALFILES += terminal-mmap_mod-mmap_i386_mmap.lst
VIDEOFILES += video-mmap_mod-mmap_i386_mmap.lst

cmd-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mmap > $@ || (rm -f $@; exit 1)

fs-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mmap > $@ || (rm -f $@; exit 1)

parttool-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mmap > $@ || (rm -f $@; exit 1)

partmap-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mmap > $@ || (rm -f $@; exit 1)

handler-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mmap > $@ || (rm -f $@; exit 1)

terminal-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mmap > $@ || (rm -f $@; exit 1)

video-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mmap > $@ || (rm -f $@; exit 1)

mmap_mod-mmap_efi_mmap.o: mmap/efi/mmap.c $(mmap/efi/mmap.c_DEPENDENCIES)
	$(TARGET_CC) -Immap/efi -I$(srcdir)/mmap/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mmap/efi/mmap.c\" -MD -c -o $@ $<
-include mmap_mod-mmap_efi_mmap.d

clean-module-mmap_mod-mmap_efi_mmap-extra.1:
	rm -f cmd-mmap_mod-mmap_efi_mmap.lst fs-mmap_mod-mmap_efi_mmap.lst partmap-mmap_mod-mmap_efi_mmap.lst handler-mmap_mod-mmap_efi_mmap.lst parttool-mmap_mod-mmap_efi_mmap.lst video-mmap_mod-mmap_efi_mmap.lst terminal-mmap_mod-mmap_efi_mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap_mod-mmap_efi_mmap-extra.1

COMMANDFILES += cmd-mmap_mod-mmap_efi_mmap.lst
FSFILES += fs-mmap_mod-mmap_efi_mmap.lst
PARTTOOLFILES += parttool-mmap_mod-mmap_efi_mmap.lst
PARTMAPFILES += partmap-mmap_mod-mmap_efi_mmap.lst
HANDLERFILES += handler-mmap_mod-mmap_efi_mmap.lst
TERMINALFILES += terminal-mmap_mod-mmap_efi_mmap.lst
VIDEOFILES += video-mmap_mod-mmap_efi_mmap.lst

cmd-mmap_mod-mmap_efi_mmap.lst: mmap/efi/mmap.c $(mmap/efi/mmap.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Immap/efi -I$(srcdir)/mmap/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mmap > $@ || (rm -f $@; exit 1)

fs-mmap_mod-mmap_efi_mmap.lst: mmap/efi/mmap.c $(mmap/efi/mmap.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Immap/efi -I$(srcdir)/mmap/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mmap > $@ || (rm -f $@; exit 1)

parttool-mmap_mod-mmap_efi_mmap.lst: mmap/efi/mmap.c $(mmap/efi/mmap.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Immap/efi -I$(srcdir)/mmap/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mmap > $@ || (rm -f $@; exit 1)

partmap-mmap_mod-mmap_efi_mmap.lst: mmap/efi/mmap.c $(mmap/efi/mmap.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Immap/efi -I$(srcdir)/mmap/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mmap > $@ || (rm -f $@; exit 1)

handler-mmap_mod-mmap_efi_mmap.lst: mmap/efi/mmap.c $(mmap/efi/mmap.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Immap/efi -I$(srcdir)/mmap/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mmap > $@ || (rm -f $@; exit 1)

terminal-mmap_mod-mmap_efi_mmap.lst: mmap/efi/mmap.c $(mmap/efi/mmap.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Immap/efi -I$(srcdir)/mmap/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mmap > $@ || (rm -f $@; exit 1)

video-mmap_mod-mmap_efi_mmap.lst: mmap/efi/mmap.c $(mmap/efi/mmap.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Immap/efi -I$(srcdir)/mmap/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mmap > $@ || (rm -f $@; exit 1)

mmap_mod_CFLAGS = $(COMMON_CFLAGS)
mmap_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For chain.mod.
chain_mod_SOURCES = loader/efi/chainloader.c

clean-module-chain.mod.1:
	rm -f chain.mod mod-chain.o mod-chain.c pre-chain.o chain_mod-loader_efi_chainloader.o und-chain.lst

CLEAN_MODULE_TARGETS += clean-module-chain.mod.1

clean-module-chain.mod-symbol.1:
	rm -f def-chain.lst

CLEAN_MODULE_TARGETS += clean-module-chain.mod-symbol.1
DEFSYMFILES += def-chain.lst
mostlyclean-module-chain.mod.1:
	rm -f chain_mod-loader_efi_chainloader.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-chain.mod.1
UNDSYMFILES += und-chain.lst

ifeq ($(TARGET_NO_MODULES), yes)
chain.mod: pre-chain.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(chain_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-chain.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
chain.mod: pre-chain.o mod-chain.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(chain_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-chain.o mod-chain.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
chain.mod: pre-chain.o mod-chain.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(chain_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-chain.o mod-chain.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-chain.o: $(chain_mod_DEPENDENCIES) chain_mod-loader_efi_chainloader.o
	-rm -f $@
	$(TARGET_CC) $(chain_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ chain_mod-loader_efi_chainloader.o

mod-chain.o: mod-chain.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(chain_mod_CFLAGS) -DGRUB_FILE=\"mod-chain.c\" -c -o $@ $<

mod-chain.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'chain' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-chain.lst: pre-chain.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 chain/' > $@
else
def-chain.lst: pre-chain.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 chain/' > $@
endif

und-chain.lst: pre-chain.o
	echo 'chain' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

chain_mod-loader_efi_chainloader.o: loader/efi/chainloader.c $(loader/efi/chainloader.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(chain_mod_CFLAGS) -DGRUB_FILE=\"loader/efi/chainloader.c\" -MD -c -o $@ $<
-include chain_mod-loader_efi_chainloader.d

clean-module-chain_mod-loader_efi_chainloader-extra.1:
	rm -f cmd-chain_mod-loader_efi_chainloader.lst fs-chain_mod-loader_efi_chainloader.lst partmap-chain_mod-loader_efi_chainloader.lst handler-chain_mod-loader_efi_chainloader.lst parttool-chain_mod-loader_efi_chainloader.lst video-chain_mod-loader_efi_chainloader.lst terminal-chain_mod-loader_efi_chainloader.lst

CLEAN_MODULE_TARGETS += clean-module-chain_mod-loader_efi_chainloader-extra.1

COMMANDFILES += cmd-chain_mod-loader_efi_chainloader.lst
FSFILES += fs-chain_mod-loader_efi_chainloader.lst
PARTTOOLFILES += parttool-chain_mod-loader_efi_chainloader.lst
PARTMAPFILES += partmap-chain_mod-loader_efi_chainloader.lst
HANDLERFILES += handler-chain_mod-loader_efi_chainloader.lst
TERMINALFILES += terminal-chain_mod-loader_efi_chainloader.lst
VIDEOFILES += video-chain_mod-loader_efi_chainloader.lst

cmd-chain_mod-loader_efi_chainloader.lst: loader/efi/chainloader.c $(loader/efi/chainloader.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(chain_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh chain > $@ || (rm -f $@; exit 1)

fs-chain_mod-loader_efi_chainloader.lst: loader/efi/chainloader.c $(loader/efi/chainloader.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(chain_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh chain > $@ || (rm -f $@; exit 1)

parttool-chain_mod-loader_efi_chainloader.lst: loader/efi/chainloader.c $(loader/efi/chainloader.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(chain_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh chain > $@ || (rm -f $@; exit 1)

partmap-chain_mod-loader_efi_chainloader.lst: loader/efi/chainloader.c $(loader/efi/chainloader.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(chain_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh chain > $@ || (rm -f $@; exit 1)

handler-chain_mod-loader_efi_chainloader.lst: loader/efi/chainloader.c $(loader/efi/chainloader.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(chain_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh chain > $@ || (rm -f $@; exit 1)

terminal-chain_mod-loader_efi_chainloader.lst: loader/efi/chainloader.c $(loader/efi/chainloader.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(chain_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh chain > $@ || (rm -f $@; exit 1)

video-chain_mod-loader_efi_chainloader.lst: loader/efi/chainloader.c $(loader/efi/chainloader.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(chain_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh chain > $@ || (rm -f $@; exit 1)

chain_mod_CFLAGS = $(COMMON_CFLAGS)
chain_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For appleldr.mod.
appleldr_mod_SOURCES = loader/efi/appleloader.c

clean-module-appleldr.mod.1:
	rm -f appleldr.mod mod-appleldr.o mod-appleldr.c pre-appleldr.o appleldr_mod-loader_efi_appleloader.o und-appleldr.lst

CLEAN_MODULE_TARGETS += clean-module-appleldr.mod.1

clean-module-appleldr.mod-symbol.1:
	rm -f def-appleldr.lst

CLEAN_MODULE_TARGETS += clean-module-appleldr.mod-symbol.1
DEFSYMFILES += def-appleldr.lst
mostlyclean-module-appleldr.mod.1:
	rm -f appleldr_mod-loader_efi_appleloader.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-appleldr.mod.1
UNDSYMFILES += und-appleldr.lst

ifeq ($(TARGET_NO_MODULES), yes)
appleldr.mod: pre-appleldr.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(appleldr_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-appleldr.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
appleldr.mod: pre-appleldr.o mod-appleldr.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(appleldr_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-appleldr.o mod-appleldr.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
appleldr.mod: pre-appleldr.o mod-appleldr.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(appleldr_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-appleldr.o mod-appleldr.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-appleldr.o: $(appleldr_mod_DEPENDENCIES) appleldr_mod-loader_efi_appleloader.o
	-rm -f $@
	$(TARGET_CC) $(appleldr_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ appleldr_mod-loader_efi_appleloader.o

mod-appleldr.o: mod-appleldr.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(appleldr_mod_CFLAGS) -DGRUB_FILE=\"mod-appleldr.c\" -c -o $@ $<

mod-appleldr.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'appleldr' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-appleldr.lst: pre-appleldr.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 appleldr/' > $@
else
def-appleldr.lst: pre-appleldr.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 appleldr/' > $@
endif

und-appleldr.lst: pre-appleldr.o
	echo 'appleldr' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

appleldr_mod-loader_efi_appleloader.o: loader/efi/appleloader.c $(loader/efi/appleloader.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(appleldr_mod_CFLAGS) -DGRUB_FILE=\"loader/efi/appleloader.c\" -MD -c -o $@ $<
-include appleldr_mod-loader_efi_appleloader.d

clean-module-appleldr_mod-loader_efi_appleloader-extra.1:
	rm -f cmd-appleldr_mod-loader_efi_appleloader.lst fs-appleldr_mod-loader_efi_appleloader.lst partmap-appleldr_mod-loader_efi_appleloader.lst handler-appleldr_mod-loader_efi_appleloader.lst parttool-appleldr_mod-loader_efi_appleloader.lst video-appleldr_mod-loader_efi_appleloader.lst terminal-appleldr_mod-loader_efi_appleloader.lst

CLEAN_MODULE_TARGETS += clean-module-appleldr_mod-loader_efi_appleloader-extra.1

COMMANDFILES += cmd-appleldr_mod-loader_efi_appleloader.lst
FSFILES += fs-appleldr_mod-loader_efi_appleloader.lst
PARTTOOLFILES += parttool-appleldr_mod-loader_efi_appleloader.lst
PARTMAPFILES += partmap-appleldr_mod-loader_efi_appleloader.lst
HANDLERFILES += handler-appleldr_mod-loader_efi_appleloader.lst
TERMINALFILES += terminal-appleldr_mod-loader_efi_appleloader.lst
VIDEOFILES += video-appleldr_mod-loader_efi_appleloader.lst

cmd-appleldr_mod-loader_efi_appleloader.lst: loader/efi/appleloader.c $(loader/efi/appleloader.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(appleldr_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh appleldr > $@ || (rm -f $@; exit 1)

fs-appleldr_mod-loader_efi_appleloader.lst: loader/efi/appleloader.c $(loader/efi/appleloader.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(appleldr_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh appleldr > $@ || (rm -f $@; exit 1)

parttool-appleldr_mod-loader_efi_appleloader.lst: loader/efi/appleloader.c $(loader/efi/appleloader.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(appleldr_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh appleldr > $@ || (rm -f $@; exit 1)

partmap-appleldr_mod-loader_efi_appleloader.lst: loader/efi/appleloader.c $(loader/efi/appleloader.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(appleldr_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh appleldr > $@ || (rm -f $@; exit 1)

handler-appleldr_mod-loader_efi_appleloader.lst: loader/efi/appleloader.c $(loader/efi/appleloader.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(appleldr_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh appleldr > $@ || (rm -f $@; exit 1)

terminal-appleldr_mod-loader_efi_appleloader.lst: loader/efi/appleloader.c $(loader/efi/appleloader.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(appleldr_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh appleldr > $@ || (rm -f $@; exit 1)

video-appleldr_mod-loader_efi_appleloader.lst: loader/efi/appleloader.c $(loader/efi/appleloader.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/efi -I$(srcdir)/loader/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(appleldr_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh appleldr > $@ || (rm -f $@; exit 1)

appleldr_mod_CFLAGS = $(COMMON_CFLAGS)
appleldr_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For linux.mod.
ifeq ($(target_cpu), x86_64)
linux_mod_SOURCES = loader/i386/efi/linux.c loader/i386/linux_trampoline.S

clean-module-linux.mod.1:
	rm -f linux.mod mod-linux.o mod-linux.c pre-linux.o linux_mod-loader_i386_efi_linux.o linux_mod-loader_i386_linux_trampoline.o und-linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux.mod.1

clean-module-linux.mod-symbol.1:
	rm -f def-linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux.mod-symbol.1
DEFSYMFILES += def-linux.lst
mostlyclean-module-linux.mod.1:
	rm -f linux_mod-loader_i386_efi_linux.d linux_mod-loader_i386_linux_trampoline.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-linux.mod.1
UNDSYMFILES += und-linux.lst

ifeq ($(TARGET_NO_MODULES), yes)
linux.mod: pre-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-linux.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
linux.mod: pre-linux.o mod-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-linux.o mod-linux.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
linux.mod: pre-linux.o mod-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-linux.o mod-linux.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-linux.o: $(linux_mod_DEPENDENCIES) linux_mod-loader_i386_efi_linux.o linux_mod-loader_i386_linux_trampoline.o
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ linux_mod-loader_i386_efi_linux.o linux_mod-loader_i386_linux_trampoline.o

mod-linux.o: mod-linux.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -DGRUB_FILE=\"mod-linux.c\" -c -o $@ $<

mod-linux.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'linux' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-linux.lst: pre-linux.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 linux/' > $@
else
def-linux.lst: pre-linux.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 linux/' > $@
endif

und-linux.lst: pre-linux.o
	echo 'linux' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

linux_mod-loader_i386_efi_linux.o: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -DGRUB_FILE=\"loader/i386/efi/linux.c\" -MD -c -o $@ $<
-include linux_mod-loader_i386_efi_linux.d

clean-module-linux_mod-loader_i386_efi_linux-extra.1:
	rm -f cmd-linux_mod-loader_i386_efi_linux.lst fs-linux_mod-loader_i386_efi_linux.lst partmap-linux_mod-loader_i386_efi_linux.lst handler-linux_mod-loader_i386_efi_linux.lst parttool-linux_mod-loader_i386_efi_linux.lst video-linux_mod-loader_i386_efi_linux.lst terminal-linux_mod-loader_i386_efi_linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux_mod-loader_i386_efi_linux-extra.1

COMMANDFILES += cmd-linux_mod-loader_i386_efi_linux.lst
FSFILES += fs-linux_mod-loader_i386_efi_linux.lst
PARTTOOLFILES += parttool-linux_mod-loader_i386_efi_linux.lst
PARTMAPFILES += partmap-linux_mod-loader_i386_efi_linux.lst
HANDLERFILES += handler-linux_mod-loader_i386_efi_linux.lst
TERMINALFILES += terminal-linux_mod-loader_i386_efi_linux.lst
VIDEOFILES += video-linux_mod-loader_i386_efi_linux.lst

cmd-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh linux > $@ || (rm -f $@; exit 1)

fs-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh linux > $@ || (rm -f $@; exit 1)

parttool-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh linux > $@ || (rm -f $@; exit 1)

partmap-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh linux > $@ || (rm -f $@; exit 1)

handler-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh linux > $@ || (rm -f $@; exit 1)

terminal-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh linux > $@ || (rm -f $@; exit 1)

video-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh linux > $@ || (rm -f $@; exit 1)

linux_mod-loader_i386_linux_trampoline.o: loader/i386/linux_trampoline.S $(loader/i386/linux_trampoline.S_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(linux_mod_ASFLAGS) -DGRUB_FILE=\"loader/i386/linux_trampoline.S\" -MD -c -o $@ $<
-include linux_mod-loader_i386_linux_trampoline.d

clean-module-linux_mod-loader_i386_linux_trampoline-extra.1:
	rm -f cmd-linux_mod-loader_i386_linux_trampoline.lst fs-linux_mod-loader_i386_linux_trampoline.lst partmap-linux_mod-loader_i386_linux_trampoline.lst handler-linux_mod-loader_i386_linux_trampoline.lst parttool-linux_mod-loader_i386_linux_trampoline.lst video-linux_mod-loader_i386_linux_trampoline.lst terminal-linux_mod-loader_i386_linux_trampoline.lst

CLEAN_MODULE_TARGETS += clean-module-linux_mod-loader_i386_linux_trampoline-extra.1

COMMANDFILES += cmd-linux_mod-loader_i386_linux_trampoline.lst
FSFILES += fs-linux_mod-loader_i386_linux_trampoline.lst
PARTTOOLFILES += parttool-linux_mod-loader_i386_linux_trampoline.lst
PARTMAPFILES += partmap-linux_mod-loader_i386_linux_trampoline.lst
HANDLERFILES += handler-linux_mod-loader_i386_linux_trampoline.lst
TERMINALFILES += terminal-linux_mod-loader_i386_linux_trampoline.lst
VIDEOFILES += video-linux_mod-loader_i386_linux_trampoline.lst

cmd-linux_mod-loader_i386_linux_trampoline.lst: loader/i386/linux_trampoline.S $(loader/i386/linux_trampoline.S_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(linux_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh linux > $@ || (rm -f $@; exit 1)

fs-linux_mod-loader_i386_linux_trampoline.lst: loader/i386/linux_trampoline.S $(loader/i386/linux_trampoline.S_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(linux_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh linux > $@ || (rm -f $@; exit 1)

parttool-linux_mod-loader_i386_linux_trampoline.lst: loader/i386/linux_trampoline.S $(loader/i386/linux_trampoline.S_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(linux_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh linux > $@ || (rm -f $@; exit 1)

partmap-linux_mod-loader_i386_linux_trampoline.lst: loader/i386/linux_trampoline.S $(loader/i386/linux_trampoline.S_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(linux_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh linux > $@ || (rm -f $@; exit 1)

handler-linux_mod-loader_i386_linux_trampoline.lst: loader/i386/linux_trampoline.S $(loader/i386/linux_trampoline.S_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(linux_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh linux > $@ || (rm -f $@; exit 1)

terminal-linux_mod-loader_i386_linux_trampoline.lst: loader/i386/linux_trampoline.S $(loader/i386/linux_trampoline.S_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(linux_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh linux > $@ || (rm -f $@; exit 1)

video-linux_mod-loader_i386_linux_trampoline.lst: loader/i386/linux_trampoline.S $(loader/i386/linux_trampoline.S_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(linux_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh linux > $@ || (rm -f $@; exit 1)

linux_mod_CFLAGS = $(COMMON_CFLAGS)
linux_mod_ASFLAGS = $(COMMON_ASFLAGS)
linux_mod_LDFLAGS = $(COMMON_LDFLAGS)
else
linux_mod_SOURCES = loader/i386/efi/linux.c

clean-module-linux.mod.2:
	rm -f linux.mod mod-linux.o mod-linux.c pre-linux.o linux_mod-loader_i386_efi_linux.o und-linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux.mod.2

clean-module-linux.mod-symbol.2:
	rm -f def-linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux.mod-symbol.2
DEFSYMFILES += def-linux.lst
mostlyclean-module-linux.mod.2:
	rm -f linux_mod-loader_i386_efi_linux.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-linux.mod.2
UNDSYMFILES += und-linux.lst

ifeq ($(TARGET_NO_MODULES), yes)
linux.mod: pre-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-linux.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
linux.mod: pre-linux.o mod-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-linux.o mod-linux.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
linux.mod: pre-linux.o mod-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-linux.o mod-linux.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-linux.o: $(linux_mod_DEPENDENCIES) linux_mod-loader_i386_efi_linux.o
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ linux_mod-loader_i386_efi_linux.o

mod-linux.o: mod-linux.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -DGRUB_FILE=\"mod-linux.c\" -c -o $@ $<

mod-linux.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'linux' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-linux.lst: pre-linux.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 linux/' > $@
else
def-linux.lst: pre-linux.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 linux/' > $@
endif

und-linux.lst: pre-linux.o
	echo 'linux' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

linux_mod-loader_i386_efi_linux.o: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -DGRUB_FILE=\"loader/i386/efi/linux.c\" -MD -c -o $@ $<
-include linux_mod-loader_i386_efi_linux.d

clean-module-linux_mod-loader_i386_efi_linux-extra.2:
	rm -f cmd-linux_mod-loader_i386_efi_linux.lst fs-linux_mod-loader_i386_efi_linux.lst partmap-linux_mod-loader_i386_efi_linux.lst handler-linux_mod-loader_i386_efi_linux.lst parttool-linux_mod-loader_i386_efi_linux.lst video-linux_mod-loader_i386_efi_linux.lst terminal-linux_mod-loader_i386_efi_linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux_mod-loader_i386_efi_linux-extra.2

COMMANDFILES += cmd-linux_mod-loader_i386_efi_linux.lst
FSFILES += fs-linux_mod-loader_i386_efi_linux.lst
PARTTOOLFILES += parttool-linux_mod-loader_i386_efi_linux.lst
PARTMAPFILES += partmap-linux_mod-loader_i386_efi_linux.lst
HANDLERFILES += handler-linux_mod-loader_i386_efi_linux.lst
TERMINALFILES += terminal-linux_mod-loader_i386_efi_linux.lst
VIDEOFILES += video-linux_mod-loader_i386_efi_linux.lst

cmd-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh linux > $@ || (rm -f $@; exit 1)

fs-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh linux > $@ || (rm -f $@; exit 1)

parttool-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh linux > $@ || (rm -f $@; exit 1)

partmap-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh linux > $@ || (rm -f $@; exit 1)

handler-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh linux > $@ || (rm -f $@; exit 1)

terminal-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh linux > $@ || (rm -f $@; exit 1)

video-linux_mod-loader_i386_efi_linux.lst: loader/i386/efi/linux.c $(loader/i386/efi/linux.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386/efi -I$(srcdir)/loader/i386/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh linux > $@ || (rm -f $@; exit 1)

linux_mod_CFLAGS = $(COMMON_CFLAGS)
linux_mod_ASFLAGS = $(COMMON_ASFLAGS)
linux_mod_LDFLAGS = $(COMMON_LDFLAGS)
endif

# For halt.mod.
halt_mod_SOURCES = commands/halt.c

clean-module-halt.mod.1:
	rm -f halt.mod mod-halt.o mod-halt.c pre-halt.o halt_mod-commands_halt.o und-halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt.mod.1

clean-module-halt.mod-symbol.1:
	rm -f def-halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt.mod-symbol.1
DEFSYMFILES += def-halt.lst
mostlyclean-module-halt.mod.1:
	rm -f halt_mod-commands_halt.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-halt.mod.1
UNDSYMFILES += und-halt.lst

ifeq ($(TARGET_NO_MODULES), yes)
halt.mod: pre-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-halt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
halt.mod: pre-halt.o mod-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-halt.o mod-halt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
halt.mod: pre-halt.o mod-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-halt.o mod-halt.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-halt.o: $(halt_mod_DEPENDENCIES) halt_mod-commands_halt.o
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ halt_mod-commands_halt.o

mod-halt.o: mod-halt.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -DGRUB_FILE=\"mod-halt.c\" -c -o $@ $<

mod-halt.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'halt' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-halt.lst: pre-halt.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 halt/' > $@
else
def-halt.lst: pre-halt.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 halt/' > $@
endif

und-halt.lst: pre-halt.o
	echo 'halt' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

halt_mod-commands_halt.o: commands/halt.c $(commands/halt.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -DGRUB_FILE=\"commands/halt.c\" -MD -c -o $@ $<
-include halt_mod-commands_halt.d

clean-module-halt_mod-commands_halt-extra.1:
	rm -f cmd-halt_mod-commands_halt.lst fs-halt_mod-commands_halt.lst partmap-halt_mod-commands_halt.lst handler-halt_mod-commands_halt.lst parttool-halt_mod-commands_halt.lst video-halt_mod-commands_halt.lst terminal-halt_mod-commands_halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt_mod-commands_halt-extra.1

COMMANDFILES += cmd-halt_mod-commands_halt.lst
FSFILES += fs-halt_mod-commands_halt.lst
PARTTOOLFILES += parttool-halt_mod-commands_halt.lst
PARTMAPFILES += partmap-halt_mod-commands_halt.lst
HANDLERFILES += handler-halt_mod-commands_halt.lst
TERMINALFILES += terminal-halt_mod-commands_halt.lst
VIDEOFILES += video-halt_mod-commands_halt.lst

cmd-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh halt > $@ || (rm -f $@; exit 1)

fs-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh halt > $@ || (rm -f $@; exit 1)

parttool-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh halt > $@ || (rm -f $@; exit 1)

partmap-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh halt > $@ || (rm -f $@; exit 1)

handler-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh halt > $@ || (rm -f $@; exit 1)

terminal-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh halt > $@ || (rm -f $@; exit 1)

video-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh halt > $@ || (rm -f $@; exit 1)

halt_mod_CFLAGS = $(COMMON_CFLAGS)
halt_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For datetime.mod
datetime_mod_SOURCES = lib/efi/datetime.c

clean-module-datetime.mod.1:
	rm -f datetime.mod mod-datetime.o mod-datetime.c pre-datetime.o datetime_mod-lib_efi_datetime.o und-datetime.lst

CLEAN_MODULE_TARGETS += clean-module-datetime.mod.1

clean-module-datetime.mod-symbol.1:
	rm -f def-datetime.lst

CLEAN_MODULE_TARGETS += clean-module-datetime.mod-symbol.1
DEFSYMFILES += def-datetime.lst
mostlyclean-module-datetime.mod.1:
	rm -f datetime_mod-lib_efi_datetime.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-datetime.mod.1
UNDSYMFILES += und-datetime.lst

ifeq ($(TARGET_NO_MODULES), yes)
datetime.mod: pre-datetime.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-datetime.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
datetime.mod: pre-datetime.o mod-datetime.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-datetime.o mod-datetime.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
datetime.mod: pre-datetime.o mod-datetime.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-datetime.o mod-datetime.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-datetime.o: $(datetime_mod_DEPENDENCIES) datetime_mod-lib_efi_datetime.o
	-rm -f $@
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ datetime_mod-lib_efi_datetime.o

mod-datetime.o: mod-datetime.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -DGRUB_FILE=\"mod-datetime.c\" -c -o $@ $<

mod-datetime.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'datetime' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-datetime.lst: pre-datetime.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 datetime/' > $@
else
def-datetime.lst: pre-datetime.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 datetime/' > $@
endif

und-datetime.lst: pre-datetime.o
	echo 'datetime' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

datetime_mod-lib_efi_datetime.o: lib/efi/datetime.c $(lib/efi/datetime.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib/efi -I$(srcdir)/lib/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -DGRUB_FILE=\"lib/efi/datetime.c\" -MD -c -o $@ $<
-include datetime_mod-lib_efi_datetime.d

clean-module-datetime_mod-lib_efi_datetime-extra.1:
	rm -f cmd-datetime_mod-lib_efi_datetime.lst fs-datetime_mod-lib_efi_datetime.lst partmap-datetime_mod-lib_efi_datetime.lst handler-datetime_mod-lib_efi_datetime.lst parttool-datetime_mod-lib_efi_datetime.lst video-datetime_mod-lib_efi_datetime.lst terminal-datetime_mod-lib_efi_datetime.lst

CLEAN_MODULE_TARGETS += clean-module-datetime_mod-lib_efi_datetime-extra.1

COMMANDFILES += cmd-datetime_mod-lib_efi_datetime.lst
FSFILES += fs-datetime_mod-lib_efi_datetime.lst
PARTTOOLFILES += parttool-datetime_mod-lib_efi_datetime.lst
PARTMAPFILES += partmap-datetime_mod-lib_efi_datetime.lst
HANDLERFILES += handler-datetime_mod-lib_efi_datetime.lst
TERMINALFILES += terminal-datetime_mod-lib_efi_datetime.lst
VIDEOFILES += video-datetime_mod-lib_efi_datetime.lst

cmd-datetime_mod-lib_efi_datetime.lst: lib/efi/datetime.c $(lib/efi/datetime.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib/efi -I$(srcdir)/lib/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh datetime > $@ || (rm -f $@; exit 1)

fs-datetime_mod-lib_efi_datetime.lst: lib/efi/datetime.c $(lib/efi/datetime.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib/efi -I$(srcdir)/lib/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh datetime > $@ || (rm -f $@; exit 1)

parttool-datetime_mod-lib_efi_datetime.lst: lib/efi/datetime.c $(lib/efi/datetime.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib/efi -I$(srcdir)/lib/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh datetime > $@ || (rm -f $@; exit 1)

partmap-datetime_mod-lib_efi_datetime.lst: lib/efi/datetime.c $(lib/efi/datetime.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib/efi -I$(srcdir)/lib/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh datetime > $@ || (rm -f $@; exit 1)

handler-datetime_mod-lib_efi_datetime.lst: lib/efi/datetime.c $(lib/efi/datetime.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib/efi -I$(srcdir)/lib/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh datetime > $@ || (rm -f $@; exit 1)

terminal-datetime_mod-lib_efi_datetime.lst: lib/efi/datetime.c $(lib/efi/datetime.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib/efi -I$(srcdir)/lib/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh datetime > $@ || (rm -f $@; exit 1)

video-datetime_mod-lib_efi_datetime.lst: lib/efi/datetime.c $(lib/efi/datetime.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib/efi -I$(srcdir)/lib/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh datetime > $@ || (rm -f $@; exit 1)

datetime_mod_CFLAGS = $(COMMON_CFLAGS)
datetime_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For loadbios.mod
loadbios_mod_SOURCES = commands/efi/loadbios.c

clean-module-loadbios.mod.1:
	rm -f loadbios.mod mod-loadbios.o mod-loadbios.c pre-loadbios.o loadbios_mod-commands_efi_loadbios.o und-loadbios.lst

CLEAN_MODULE_TARGETS += clean-module-loadbios.mod.1

clean-module-loadbios.mod-symbol.1:
	rm -f def-loadbios.lst

CLEAN_MODULE_TARGETS += clean-module-loadbios.mod-symbol.1
DEFSYMFILES += def-loadbios.lst
mostlyclean-module-loadbios.mod.1:
	rm -f loadbios_mod-commands_efi_loadbios.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-loadbios.mod.1
UNDSYMFILES += und-loadbios.lst

ifeq ($(TARGET_NO_MODULES), yes)
loadbios.mod: pre-loadbios.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(loadbios_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-loadbios.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
loadbios.mod: pre-loadbios.o mod-loadbios.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(loadbios_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-loadbios.o mod-loadbios.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
loadbios.mod: pre-loadbios.o mod-loadbios.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(loadbios_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-loadbios.o mod-loadbios.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-loadbios.o: $(loadbios_mod_DEPENDENCIES) loadbios_mod-commands_efi_loadbios.o
	-rm -f $@
	$(TARGET_CC) $(loadbios_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ loadbios_mod-commands_efi_loadbios.o

mod-loadbios.o: mod-loadbios.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(loadbios_mod_CFLAGS) -DGRUB_FILE=\"mod-loadbios.c\" -c -o $@ $<

mod-loadbios.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'loadbios' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-loadbios.lst: pre-loadbios.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 loadbios/' > $@
else
def-loadbios.lst: pre-loadbios.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 loadbios/' > $@
endif

und-loadbios.lst: pre-loadbios.o
	echo 'loadbios' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

loadbios_mod-commands_efi_loadbios.o: commands/efi/loadbios.c $(commands/efi/loadbios.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadbios_mod_CFLAGS) -DGRUB_FILE=\"commands/efi/loadbios.c\" -MD -c -o $@ $<
-include loadbios_mod-commands_efi_loadbios.d

clean-module-loadbios_mod-commands_efi_loadbios-extra.1:
	rm -f cmd-loadbios_mod-commands_efi_loadbios.lst fs-loadbios_mod-commands_efi_loadbios.lst partmap-loadbios_mod-commands_efi_loadbios.lst handler-loadbios_mod-commands_efi_loadbios.lst parttool-loadbios_mod-commands_efi_loadbios.lst video-loadbios_mod-commands_efi_loadbios.lst terminal-loadbios_mod-commands_efi_loadbios.lst

CLEAN_MODULE_TARGETS += clean-module-loadbios_mod-commands_efi_loadbios-extra.1

COMMANDFILES += cmd-loadbios_mod-commands_efi_loadbios.lst
FSFILES += fs-loadbios_mod-commands_efi_loadbios.lst
PARTTOOLFILES += parttool-loadbios_mod-commands_efi_loadbios.lst
PARTMAPFILES += partmap-loadbios_mod-commands_efi_loadbios.lst
HANDLERFILES += handler-loadbios_mod-commands_efi_loadbios.lst
TERMINALFILES += terminal-loadbios_mod-commands_efi_loadbios.lst
VIDEOFILES += video-loadbios_mod-commands_efi_loadbios.lst

cmd-loadbios_mod-commands_efi_loadbios.lst: commands/efi/loadbios.c $(commands/efi/loadbios.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadbios_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh loadbios > $@ || (rm -f $@; exit 1)

fs-loadbios_mod-commands_efi_loadbios.lst: commands/efi/loadbios.c $(commands/efi/loadbios.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loadbios_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh loadbios > $@ || (rm -f $@; exit 1)

parttool-loadbios_mod-commands_efi_loadbios.lst: commands/efi/loadbios.c $(commands/efi/loadbios.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadbios_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh loadbios > $@ || (rm -f $@; exit 1)

partmap-loadbios_mod-commands_efi_loadbios.lst: commands/efi/loadbios.c $(commands/efi/loadbios.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loadbios_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh loadbios > $@ || (rm -f $@; exit 1)

handler-loadbios_mod-commands_efi_loadbios.lst: commands/efi/loadbios.c $(commands/efi/loadbios.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadbios_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh loadbios > $@ || (rm -f $@; exit 1)

terminal-loadbios_mod-commands_efi_loadbios.lst: commands/efi/loadbios.c $(commands/efi/loadbios.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadbios_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh loadbios > $@ || (rm -f $@; exit 1)

video-loadbios_mod-commands_efi_loadbios.lst: commands/efi/loadbios.c $(commands/efi/loadbios.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loadbios_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh loadbios > $@ || (rm -f $@; exit 1)

loadbios_mod_CFLAGS = $(COMMON_CFLAGS)
loadbios_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For fixvideo.mod
fixvideo_mod_SOURCES = commands/efi/fixvideo.c

clean-module-fixvideo.mod.1:
	rm -f fixvideo.mod mod-fixvideo.o mod-fixvideo.c pre-fixvideo.o fixvideo_mod-commands_efi_fixvideo.o und-fixvideo.lst

CLEAN_MODULE_TARGETS += clean-module-fixvideo.mod.1

clean-module-fixvideo.mod-symbol.1:
	rm -f def-fixvideo.lst

CLEAN_MODULE_TARGETS += clean-module-fixvideo.mod-symbol.1
DEFSYMFILES += def-fixvideo.lst
mostlyclean-module-fixvideo.mod.1:
	rm -f fixvideo_mod-commands_efi_fixvideo.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-fixvideo.mod.1
UNDSYMFILES += und-fixvideo.lst

ifeq ($(TARGET_NO_MODULES), yes)
fixvideo.mod: pre-fixvideo.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(fixvideo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-fixvideo.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
fixvideo.mod: pre-fixvideo.o mod-fixvideo.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(fixvideo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-fixvideo.o mod-fixvideo.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
fixvideo.mod: pre-fixvideo.o mod-fixvideo.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(fixvideo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-fixvideo.o mod-fixvideo.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-fixvideo.o: $(fixvideo_mod_DEPENDENCIES) fixvideo_mod-commands_efi_fixvideo.o
	-rm -f $@
	$(TARGET_CC) $(fixvideo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ fixvideo_mod-commands_efi_fixvideo.o

mod-fixvideo.o: mod-fixvideo.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(fixvideo_mod_CFLAGS) -DGRUB_FILE=\"mod-fixvideo.c\" -c -o $@ $<

mod-fixvideo.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'fixvideo' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-fixvideo.lst: pre-fixvideo.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 fixvideo/' > $@
else
def-fixvideo.lst: pre-fixvideo.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 fixvideo/' > $@
endif

und-fixvideo.lst: pre-fixvideo.o
	echo 'fixvideo' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

fixvideo_mod-commands_efi_fixvideo.o: commands/efi/fixvideo.c $(commands/efi/fixvideo.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fixvideo_mod_CFLAGS) -DGRUB_FILE=\"commands/efi/fixvideo.c\" -MD -c -o $@ $<
-include fixvideo_mod-commands_efi_fixvideo.d

clean-module-fixvideo_mod-commands_efi_fixvideo-extra.1:
	rm -f cmd-fixvideo_mod-commands_efi_fixvideo.lst fs-fixvideo_mod-commands_efi_fixvideo.lst partmap-fixvideo_mod-commands_efi_fixvideo.lst handler-fixvideo_mod-commands_efi_fixvideo.lst parttool-fixvideo_mod-commands_efi_fixvideo.lst video-fixvideo_mod-commands_efi_fixvideo.lst terminal-fixvideo_mod-commands_efi_fixvideo.lst

CLEAN_MODULE_TARGETS += clean-module-fixvideo_mod-commands_efi_fixvideo-extra.1

COMMANDFILES += cmd-fixvideo_mod-commands_efi_fixvideo.lst
FSFILES += fs-fixvideo_mod-commands_efi_fixvideo.lst
PARTTOOLFILES += parttool-fixvideo_mod-commands_efi_fixvideo.lst
PARTMAPFILES += partmap-fixvideo_mod-commands_efi_fixvideo.lst
HANDLERFILES += handler-fixvideo_mod-commands_efi_fixvideo.lst
TERMINALFILES += terminal-fixvideo_mod-commands_efi_fixvideo.lst
VIDEOFILES += video-fixvideo_mod-commands_efi_fixvideo.lst

cmd-fixvideo_mod-commands_efi_fixvideo.lst: commands/efi/fixvideo.c $(commands/efi/fixvideo.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fixvideo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh fixvideo > $@ || (rm -f $@; exit 1)

fs-fixvideo_mod-commands_efi_fixvideo.lst: commands/efi/fixvideo.c $(commands/efi/fixvideo.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(fixvideo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh fixvideo > $@ || (rm -f $@; exit 1)

parttool-fixvideo_mod-commands_efi_fixvideo.lst: commands/efi/fixvideo.c $(commands/efi/fixvideo.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fixvideo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh fixvideo > $@ || (rm -f $@; exit 1)

partmap-fixvideo_mod-commands_efi_fixvideo.lst: commands/efi/fixvideo.c $(commands/efi/fixvideo.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(fixvideo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh fixvideo > $@ || (rm -f $@; exit 1)

handler-fixvideo_mod-commands_efi_fixvideo.lst: commands/efi/fixvideo.c $(commands/efi/fixvideo.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fixvideo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh fixvideo > $@ || (rm -f $@; exit 1)

terminal-fixvideo_mod-commands_efi_fixvideo.lst: commands/efi/fixvideo.c $(commands/efi/fixvideo.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fixvideo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh fixvideo > $@ || (rm -f $@; exit 1)

video-fixvideo_mod-commands_efi_fixvideo.lst: commands/efi/fixvideo.c $(commands/efi/fixvideo.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands/efi -I$(srcdir)/commands/efi $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(fixvideo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh fixvideo > $@ || (rm -f $@; exit 1)

fixvideo_mod_CFLAGS = $(COMMON_CFLAGS)
fixvideo_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += efi_uga.mod
efi_uga_mod_SOURCES = video/efi_uga.c

clean-module-efi_uga.mod.1:
	rm -f efi_uga.mod mod-efi_uga.o mod-efi_uga.c pre-efi_uga.o efi_uga_mod-video_efi_uga.o und-efi_uga.lst

CLEAN_MODULE_TARGETS += clean-module-efi_uga.mod.1

clean-module-efi_uga.mod-symbol.1:
	rm -f def-efi_uga.lst

CLEAN_MODULE_TARGETS += clean-module-efi_uga.mod-symbol.1
DEFSYMFILES += def-efi_uga.lst
mostlyclean-module-efi_uga.mod.1:
	rm -f efi_uga_mod-video_efi_uga.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-efi_uga.mod.1
UNDSYMFILES += und-efi_uga.lst

ifeq ($(TARGET_NO_MODULES), yes)
efi_uga.mod: pre-efi_uga.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(efi_uga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-efi_uga.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
efi_uga.mod: pre-efi_uga.o mod-efi_uga.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(efi_uga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-efi_uga.o mod-efi_uga.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
efi_uga.mod: pre-efi_uga.o mod-efi_uga.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(efi_uga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-efi_uga.o mod-efi_uga.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-efi_uga.o: $(efi_uga_mod_DEPENDENCIES) efi_uga_mod-video_efi_uga.o
	-rm -f $@
	$(TARGET_CC) $(efi_uga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ efi_uga_mod-video_efi_uga.o

mod-efi_uga.o: mod-efi_uga.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(efi_uga_mod_CFLAGS) -DGRUB_FILE=\"mod-efi_uga.c\" -c -o $@ $<

mod-efi_uga.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'efi_uga' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-efi_uga.lst: pre-efi_uga.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 efi_uga/' > $@
else
def-efi_uga.lst: pre-efi_uga.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 efi_uga/' > $@
endif

und-efi_uga.lst: pre-efi_uga.o
	echo 'efi_uga' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

efi_uga_mod-video_efi_uga.o: video/efi_uga.c $(video/efi_uga.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_uga_mod_CFLAGS) -DGRUB_FILE=\"video/efi_uga.c\" -MD -c -o $@ $<
-include efi_uga_mod-video_efi_uga.d

clean-module-efi_uga_mod-video_efi_uga-extra.1:
	rm -f cmd-efi_uga_mod-video_efi_uga.lst fs-efi_uga_mod-video_efi_uga.lst partmap-efi_uga_mod-video_efi_uga.lst handler-efi_uga_mod-video_efi_uga.lst parttool-efi_uga_mod-video_efi_uga.lst video-efi_uga_mod-video_efi_uga.lst terminal-efi_uga_mod-video_efi_uga.lst

CLEAN_MODULE_TARGETS += clean-module-efi_uga_mod-video_efi_uga-extra.1

COMMANDFILES += cmd-efi_uga_mod-video_efi_uga.lst
FSFILES += fs-efi_uga_mod-video_efi_uga.lst
PARTTOOLFILES += parttool-efi_uga_mod-video_efi_uga.lst
PARTMAPFILES += partmap-efi_uga_mod-video_efi_uga.lst
HANDLERFILES += handler-efi_uga_mod-video_efi_uga.lst
TERMINALFILES += terminal-efi_uga_mod-video_efi_uga.lst
VIDEOFILES += video-efi_uga_mod-video_efi_uga.lst

cmd-efi_uga_mod-video_efi_uga.lst: video/efi_uga.c $(video/efi_uga.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_uga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh efi_uga > $@ || (rm -f $@; exit 1)

fs-efi_uga_mod-video_efi_uga.lst: video/efi_uga.c $(video/efi_uga.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(efi_uga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh efi_uga > $@ || (rm -f $@; exit 1)

parttool-efi_uga_mod-video_efi_uga.lst: video/efi_uga.c $(video/efi_uga.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_uga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh efi_uga > $@ || (rm -f $@; exit 1)

partmap-efi_uga_mod-video_efi_uga.lst: video/efi_uga.c $(video/efi_uga.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(efi_uga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh efi_uga > $@ || (rm -f $@; exit 1)

handler-efi_uga_mod-video_efi_uga.lst: video/efi_uga.c $(video/efi_uga.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_uga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh efi_uga > $@ || (rm -f $@; exit 1)

terminal-efi_uga_mod-video_efi_uga.lst: video/efi_uga.c $(video/efi_uga.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_uga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh efi_uga > $@ || (rm -f $@; exit 1)

video-efi_uga_mod-video_efi_uga.lst: video/efi_uga.c $(video/efi_uga.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(efi_uga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh efi_uga > $@ || (rm -f $@; exit 1)

efi_uga_mod_CFLAGS = $(COMMON_CFLAGS)
efi_uga_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += efi_gop.mod
efi_gop_mod_SOURCES = video/efi_gop.c

clean-module-efi_gop.mod.1:
	rm -f efi_gop.mod mod-efi_gop.o mod-efi_gop.c pre-efi_gop.o efi_gop_mod-video_efi_gop.o und-efi_gop.lst

CLEAN_MODULE_TARGETS += clean-module-efi_gop.mod.1

clean-module-efi_gop.mod-symbol.1:
	rm -f def-efi_gop.lst

CLEAN_MODULE_TARGETS += clean-module-efi_gop.mod-symbol.1
DEFSYMFILES += def-efi_gop.lst
mostlyclean-module-efi_gop.mod.1:
	rm -f efi_gop_mod-video_efi_gop.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-efi_gop.mod.1
UNDSYMFILES += und-efi_gop.lst

ifeq ($(TARGET_NO_MODULES), yes)
efi_gop.mod: pre-efi_gop.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(efi_gop_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-efi_gop.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
efi_gop.mod: pre-efi_gop.o mod-efi_gop.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(efi_gop_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-efi_gop.o mod-efi_gop.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
efi_gop.mod: pre-efi_gop.o mod-efi_gop.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(efi_gop_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-efi_gop.o mod-efi_gop.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-efi_gop.o: $(efi_gop_mod_DEPENDENCIES) efi_gop_mod-video_efi_gop.o
	-rm -f $@
	$(TARGET_CC) $(efi_gop_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ efi_gop_mod-video_efi_gop.o

mod-efi_gop.o: mod-efi_gop.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(efi_gop_mod_CFLAGS) -DGRUB_FILE=\"mod-efi_gop.c\" -c -o $@ $<

mod-efi_gop.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'efi_gop' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-efi_gop.lst: pre-efi_gop.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 efi_gop/' > $@
else
def-efi_gop.lst: pre-efi_gop.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 efi_gop/' > $@
endif

und-efi_gop.lst: pre-efi_gop.o
	echo 'efi_gop' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

efi_gop_mod-video_efi_gop.o: video/efi_gop.c $(video/efi_gop.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_gop_mod_CFLAGS) -DGRUB_FILE=\"video/efi_gop.c\" -MD -c -o $@ $<
-include efi_gop_mod-video_efi_gop.d

clean-module-efi_gop_mod-video_efi_gop-extra.1:
	rm -f cmd-efi_gop_mod-video_efi_gop.lst fs-efi_gop_mod-video_efi_gop.lst partmap-efi_gop_mod-video_efi_gop.lst handler-efi_gop_mod-video_efi_gop.lst parttool-efi_gop_mod-video_efi_gop.lst video-efi_gop_mod-video_efi_gop.lst terminal-efi_gop_mod-video_efi_gop.lst

CLEAN_MODULE_TARGETS += clean-module-efi_gop_mod-video_efi_gop-extra.1

COMMANDFILES += cmd-efi_gop_mod-video_efi_gop.lst
FSFILES += fs-efi_gop_mod-video_efi_gop.lst
PARTTOOLFILES += parttool-efi_gop_mod-video_efi_gop.lst
PARTMAPFILES += partmap-efi_gop_mod-video_efi_gop.lst
HANDLERFILES += handler-efi_gop_mod-video_efi_gop.lst
TERMINALFILES += terminal-efi_gop_mod-video_efi_gop.lst
VIDEOFILES += video-efi_gop_mod-video_efi_gop.lst

cmd-efi_gop_mod-video_efi_gop.lst: video/efi_gop.c $(video/efi_gop.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_gop_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh efi_gop > $@ || (rm -f $@; exit 1)

fs-efi_gop_mod-video_efi_gop.lst: video/efi_gop.c $(video/efi_gop.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(efi_gop_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh efi_gop > $@ || (rm -f $@; exit 1)

parttool-efi_gop_mod-video_efi_gop.lst: video/efi_gop.c $(video/efi_gop.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_gop_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh efi_gop > $@ || (rm -f $@; exit 1)

partmap-efi_gop_mod-video_efi_gop.lst: video/efi_gop.c $(video/efi_gop.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(efi_gop_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh efi_gop > $@ || (rm -f $@; exit 1)

handler-efi_gop_mod-video_efi_gop.lst: video/efi_gop.c $(video/efi_gop.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_gop_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh efi_gop > $@ || (rm -f $@; exit 1)

terminal-efi_gop_mod-video_efi_gop.lst: video/efi_gop.c $(video/efi_gop.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(efi_gop_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh efi_gop > $@ || (rm -f $@; exit 1)

video-efi_gop_mod-video_efi_gop.lst: video/efi_gop.c $(video/efi_gop.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(efi_gop_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh efi_gop > $@ || (rm -f $@; exit 1)

efi_gop_mod_CFLAGS = $(COMMON_CFLAGS)
efi_gop_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += xnu.mod
xnu_mod_SOURCES = loader/xnu_resume.c loader/i386/xnu.c \
	loader/macho32.c loader/macho64.c loader/macho.c loader/xnu.c

clean-module-xnu.mod.1:
	rm -f xnu.mod mod-xnu.o mod-xnu.c pre-xnu.o xnu_mod-loader_xnu_resume.o xnu_mod-loader_i386_xnu.o xnu_mod-loader_macho32.o xnu_mod-loader_macho64.o xnu_mod-loader_macho.o xnu_mod-loader_xnu.o und-xnu.lst

CLEAN_MODULE_TARGETS += clean-module-xnu.mod.1

clean-module-xnu.mod-symbol.1:
	rm -f def-xnu.lst

CLEAN_MODULE_TARGETS += clean-module-xnu.mod-symbol.1
DEFSYMFILES += def-xnu.lst
mostlyclean-module-xnu.mod.1:
	rm -f xnu_mod-loader_xnu_resume.d xnu_mod-loader_i386_xnu.d xnu_mod-loader_macho32.d xnu_mod-loader_macho64.d xnu_mod-loader_macho.d xnu_mod-loader_xnu.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-xnu.mod.1
UNDSYMFILES += und-xnu.lst

ifeq ($(TARGET_NO_MODULES), yes)
xnu.mod: pre-xnu.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(xnu_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-xnu.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
xnu.mod: pre-xnu.o mod-xnu.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(xnu_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-xnu.o mod-xnu.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
xnu.mod: pre-xnu.o mod-xnu.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(xnu_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-xnu.o mod-xnu.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-xnu.o: $(xnu_mod_DEPENDENCIES) xnu_mod-loader_xnu_resume.o xnu_mod-loader_i386_xnu.o xnu_mod-loader_macho32.o xnu_mod-loader_macho64.o xnu_mod-loader_macho.o xnu_mod-loader_xnu.o
	-rm -f $@
	$(TARGET_CC) $(xnu_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ xnu_mod-loader_xnu_resume.o xnu_mod-loader_i386_xnu.o xnu_mod-loader_macho32.o xnu_mod-loader_macho64.o xnu_mod-loader_macho.o xnu_mod-loader_xnu.o

mod-xnu.o: mod-xnu.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -DGRUB_FILE=\"mod-xnu.c\" -c -o $@ $<

mod-xnu.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'xnu' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-xnu.lst: pre-xnu.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 xnu/' > $@
else
def-xnu.lst: pre-xnu.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 xnu/' > $@
endif

und-xnu.lst: pre-xnu.o
	echo 'xnu' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

xnu_mod-loader_xnu_resume.o: loader/xnu_resume.c $(loader/xnu_resume.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -DGRUB_FILE=\"loader/xnu_resume.c\" -MD -c -o $@ $<
-include xnu_mod-loader_xnu_resume.d

clean-module-xnu_mod-loader_xnu_resume-extra.1:
	rm -f cmd-xnu_mod-loader_xnu_resume.lst fs-xnu_mod-loader_xnu_resume.lst partmap-xnu_mod-loader_xnu_resume.lst handler-xnu_mod-loader_xnu_resume.lst parttool-xnu_mod-loader_xnu_resume.lst video-xnu_mod-loader_xnu_resume.lst terminal-xnu_mod-loader_xnu_resume.lst

CLEAN_MODULE_TARGETS += clean-module-xnu_mod-loader_xnu_resume-extra.1

COMMANDFILES += cmd-xnu_mod-loader_xnu_resume.lst
FSFILES += fs-xnu_mod-loader_xnu_resume.lst
PARTTOOLFILES += parttool-xnu_mod-loader_xnu_resume.lst
PARTMAPFILES += partmap-xnu_mod-loader_xnu_resume.lst
HANDLERFILES += handler-xnu_mod-loader_xnu_resume.lst
TERMINALFILES += terminal-xnu_mod-loader_xnu_resume.lst
VIDEOFILES += video-xnu_mod-loader_xnu_resume.lst

cmd-xnu_mod-loader_xnu_resume.lst: loader/xnu_resume.c $(loader/xnu_resume.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh xnu > $@ || (rm -f $@; exit 1)

fs-xnu_mod-loader_xnu_resume.lst: loader/xnu_resume.c $(loader/xnu_resume.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh xnu > $@ || (rm -f $@; exit 1)

parttool-xnu_mod-loader_xnu_resume.lst: loader/xnu_resume.c $(loader/xnu_resume.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh xnu > $@ || (rm -f $@; exit 1)

partmap-xnu_mod-loader_xnu_resume.lst: loader/xnu_resume.c $(loader/xnu_resume.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh xnu > $@ || (rm -f $@; exit 1)

handler-xnu_mod-loader_xnu_resume.lst: loader/xnu_resume.c $(loader/xnu_resume.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh xnu > $@ || (rm -f $@; exit 1)

terminal-xnu_mod-loader_xnu_resume.lst: loader/xnu_resume.c $(loader/xnu_resume.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh xnu > $@ || (rm -f $@; exit 1)

video-xnu_mod-loader_xnu_resume.lst: loader/xnu_resume.c $(loader/xnu_resume.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh xnu > $@ || (rm -f $@; exit 1)

xnu_mod-loader_i386_xnu.o: loader/i386/xnu.c $(loader/i386/xnu.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -DGRUB_FILE=\"loader/i386/xnu.c\" -MD -c -o $@ $<
-include xnu_mod-loader_i386_xnu.d

clean-module-xnu_mod-loader_i386_xnu-extra.1:
	rm -f cmd-xnu_mod-loader_i386_xnu.lst fs-xnu_mod-loader_i386_xnu.lst partmap-xnu_mod-loader_i386_xnu.lst handler-xnu_mod-loader_i386_xnu.lst parttool-xnu_mod-loader_i386_xnu.lst video-xnu_mod-loader_i386_xnu.lst terminal-xnu_mod-loader_i386_xnu.lst

CLEAN_MODULE_TARGETS += clean-module-xnu_mod-loader_i386_xnu-extra.1

COMMANDFILES += cmd-xnu_mod-loader_i386_xnu.lst
FSFILES += fs-xnu_mod-loader_i386_xnu.lst
PARTTOOLFILES += parttool-xnu_mod-loader_i386_xnu.lst
PARTMAPFILES += partmap-xnu_mod-loader_i386_xnu.lst
HANDLERFILES += handler-xnu_mod-loader_i386_xnu.lst
TERMINALFILES += terminal-xnu_mod-loader_i386_xnu.lst
VIDEOFILES += video-xnu_mod-loader_i386_xnu.lst

cmd-xnu_mod-loader_i386_xnu.lst: loader/i386/xnu.c $(loader/i386/xnu.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh xnu > $@ || (rm -f $@; exit 1)

fs-xnu_mod-loader_i386_xnu.lst: loader/i386/xnu.c $(loader/i386/xnu.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh xnu > $@ || (rm -f $@; exit 1)

parttool-xnu_mod-loader_i386_xnu.lst: loader/i386/xnu.c $(loader/i386/xnu.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh xnu > $@ || (rm -f $@; exit 1)

partmap-xnu_mod-loader_i386_xnu.lst: loader/i386/xnu.c $(loader/i386/xnu.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh xnu > $@ || (rm -f $@; exit 1)

handler-xnu_mod-loader_i386_xnu.lst: loader/i386/xnu.c $(loader/i386/xnu.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh xnu > $@ || (rm -f $@; exit 1)

terminal-xnu_mod-loader_i386_xnu.lst: loader/i386/xnu.c $(loader/i386/xnu.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh xnu > $@ || (rm -f $@; exit 1)

video-xnu_mod-loader_i386_xnu.lst: loader/i386/xnu.c $(loader/i386/xnu.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh xnu > $@ || (rm -f $@; exit 1)

xnu_mod-loader_macho32.o: loader/macho32.c $(loader/macho32.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -DGRUB_FILE=\"loader/macho32.c\" -MD -c -o $@ $<
-include xnu_mod-loader_macho32.d

clean-module-xnu_mod-loader_macho32-extra.1:
	rm -f cmd-xnu_mod-loader_macho32.lst fs-xnu_mod-loader_macho32.lst partmap-xnu_mod-loader_macho32.lst handler-xnu_mod-loader_macho32.lst parttool-xnu_mod-loader_macho32.lst video-xnu_mod-loader_macho32.lst terminal-xnu_mod-loader_macho32.lst

CLEAN_MODULE_TARGETS += clean-module-xnu_mod-loader_macho32-extra.1

COMMANDFILES += cmd-xnu_mod-loader_macho32.lst
FSFILES += fs-xnu_mod-loader_macho32.lst
PARTTOOLFILES += parttool-xnu_mod-loader_macho32.lst
PARTMAPFILES += partmap-xnu_mod-loader_macho32.lst
HANDLERFILES += handler-xnu_mod-loader_macho32.lst
TERMINALFILES += terminal-xnu_mod-loader_macho32.lst
VIDEOFILES += video-xnu_mod-loader_macho32.lst

cmd-xnu_mod-loader_macho32.lst: loader/macho32.c $(loader/macho32.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh xnu > $@ || (rm -f $@; exit 1)

fs-xnu_mod-loader_macho32.lst: loader/macho32.c $(loader/macho32.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh xnu > $@ || (rm -f $@; exit 1)

parttool-xnu_mod-loader_macho32.lst: loader/macho32.c $(loader/macho32.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh xnu > $@ || (rm -f $@; exit 1)

partmap-xnu_mod-loader_macho32.lst: loader/macho32.c $(loader/macho32.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh xnu > $@ || (rm -f $@; exit 1)

handler-xnu_mod-loader_macho32.lst: loader/macho32.c $(loader/macho32.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh xnu > $@ || (rm -f $@; exit 1)

terminal-xnu_mod-loader_macho32.lst: loader/macho32.c $(loader/macho32.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh xnu > $@ || (rm -f $@; exit 1)

video-xnu_mod-loader_macho32.lst: loader/macho32.c $(loader/macho32.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh xnu > $@ || (rm -f $@; exit 1)

xnu_mod-loader_macho64.o: loader/macho64.c $(loader/macho64.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -DGRUB_FILE=\"loader/macho64.c\" -MD -c -o $@ $<
-include xnu_mod-loader_macho64.d

clean-module-xnu_mod-loader_macho64-extra.1:
	rm -f cmd-xnu_mod-loader_macho64.lst fs-xnu_mod-loader_macho64.lst partmap-xnu_mod-loader_macho64.lst handler-xnu_mod-loader_macho64.lst parttool-xnu_mod-loader_macho64.lst video-xnu_mod-loader_macho64.lst terminal-xnu_mod-loader_macho64.lst

CLEAN_MODULE_TARGETS += clean-module-xnu_mod-loader_macho64-extra.1

COMMANDFILES += cmd-xnu_mod-loader_macho64.lst
FSFILES += fs-xnu_mod-loader_macho64.lst
PARTTOOLFILES += parttool-xnu_mod-loader_macho64.lst
PARTMAPFILES += partmap-xnu_mod-loader_macho64.lst
HANDLERFILES += handler-xnu_mod-loader_macho64.lst
TERMINALFILES += terminal-xnu_mod-loader_macho64.lst
VIDEOFILES += video-xnu_mod-loader_macho64.lst

cmd-xnu_mod-loader_macho64.lst: loader/macho64.c $(loader/macho64.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh xnu > $@ || (rm -f $@; exit 1)

fs-xnu_mod-loader_macho64.lst: loader/macho64.c $(loader/macho64.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh xnu > $@ || (rm -f $@; exit 1)

parttool-xnu_mod-loader_macho64.lst: loader/macho64.c $(loader/macho64.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh xnu > $@ || (rm -f $@; exit 1)

partmap-xnu_mod-loader_macho64.lst: loader/macho64.c $(loader/macho64.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh xnu > $@ || (rm -f $@; exit 1)

handler-xnu_mod-loader_macho64.lst: loader/macho64.c $(loader/macho64.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh xnu > $@ || (rm -f $@; exit 1)

terminal-xnu_mod-loader_macho64.lst: loader/macho64.c $(loader/macho64.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh xnu > $@ || (rm -f $@; exit 1)

video-xnu_mod-loader_macho64.lst: loader/macho64.c $(loader/macho64.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh xnu > $@ || (rm -f $@; exit 1)

xnu_mod-loader_macho.o: loader/macho.c $(loader/macho.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -DGRUB_FILE=\"loader/macho.c\" -MD -c -o $@ $<
-include xnu_mod-loader_macho.d

clean-module-xnu_mod-loader_macho-extra.1:
	rm -f cmd-xnu_mod-loader_macho.lst fs-xnu_mod-loader_macho.lst partmap-xnu_mod-loader_macho.lst handler-xnu_mod-loader_macho.lst parttool-xnu_mod-loader_macho.lst video-xnu_mod-loader_macho.lst terminal-xnu_mod-loader_macho.lst

CLEAN_MODULE_TARGETS += clean-module-xnu_mod-loader_macho-extra.1

COMMANDFILES += cmd-xnu_mod-loader_macho.lst
FSFILES += fs-xnu_mod-loader_macho.lst
PARTTOOLFILES += parttool-xnu_mod-loader_macho.lst
PARTMAPFILES += partmap-xnu_mod-loader_macho.lst
HANDLERFILES += handler-xnu_mod-loader_macho.lst
TERMINALFILES += terminal-xnu_mod-loader_macho.lst
VIDEOFILES += video-xnu_mod-loader_macho.lst

cmd-xnu_mod-loader_macho.lst: loader/macho.c $(loader/macho.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh xnu > $@ || (rm -f $@; exit 1)

fs-xnu_mod-loader_macho.lst: loader/macho.c $(loader/macho.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh xnu > $@ || (rm -f $@; exit 1)

parttool-xnu_mod-loader_macho.lst: loader/macho.c $(loader/macho.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh xnu > $@ || (rm -f $@; exit 1)

partmap-xnu_mod-loader_macho.lst: loader/macho.c $(loader/macho.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh xnu > $@ || (rm -f $@; exit 1)

handler-xnu_mod-loader_macho.lst: loader/macho.c $(loader/macho.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh xnu > $@ || (rm -f $@; exit 1)

terminal-xnu_mod-loader_macho.lst: loader/macho.c $(loader/macho.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh xnu > $@ || (rm -f $@; exit 1)

video-xnu_mod-loader_macho.lst: loader/macho.c $(loader/macho.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh xnu > $@ || (rm -f $@; exit 1)

xnu_mod-loader_xnu.o: loader/xnu.c $(loader/xnu.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -DGRUB_FILE=\"loader/xnu.c\" -MD -c -o $@ $<
-include xnu_mod-loader_xnu.d

clean-module-xnu_mod-loader_xnu-extra.1:
	rm -f cmd-xnu_mod-loader_xnu.lst fs-xnu_mod-loader_xnu.lst partmap-xnu_mod-loader_xnu.lst handler-xnu_mod-loader_xnu.lst parttool-xnu_mod-loader_xnu.lst video-xnu_mod-loader_xnu.lst terminal-xnu_mod-loader_xnu.lst

CLEAN_MODULE_TARGETS += clean-module-xnu_mod-loader_xnu-extra.1

COMMANDFILES += cmd-xnu_mod-loader_xnu.lst
FSFILES += fs-xnu_mod-loader_xnu.lst
PARTTOOLFILES += parttool-xnu_mod-loader_xnu.lst
PARTMAPFILES += partmap-xnu_mod-loader_xnu.lst
HANDLERFILES += handler-xnu_mod-loader_xnu.lst
TERMINALFILES += terminal-xnu_mod-loader_xnu.lst
VIDEOFILES += video-xnu_mod-loader_xnu.lst

cmd-xnu_mod-loader_xnu.lst: loader/xnu.c $(loader/xnu.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh xnu > $@ || (rm -f $@; exit 1)

fs-xnu_mod-loader_xnu.lst: loader/xnu.c $(loader/xnu.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh xnu > $@ || (rm -f $@; exit 1)

parttool-xnu_mod-loader_xnu.lst: loader/xnu.c $(loader/xnu.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh xnu > $@ || (rm -f $@; exit 1)

partmap-xnu_mod-loader_xnu.lst: loader/xnu.c $(loader/xnu.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh xnu > $@ || (rm -f $@; exit 1)

handler-xnu_mod-loader_xnu.lst: loader/xnu.c $(loader/xnu.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh xnu > $@ || (rm -f $@; exit 1)

terminal-xnu_mod-loader_xnu.lst: loader/xnu.c $(loader/xnu.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh xnu > $@ || (rm -f $@; exit 1)

video-xnu_mod-loader_xnu.lst: loader/xnu.c $(loader/xnu.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh xnu > $@ || (rm -f $@; exit 1)

xnu_mod_CFLAGS = $(COMMON_CFLAGS)
xnu_mod_LDFLAGS = $(COMMON_LDFLAGS)
xnu_mod_ASFLAGS = $(COMMON_ASFLAGS)

include $(srcdir)/conf/i386.mk
include $(srcdir)/conf/common.mk
CLEANFILES += kernel.img $(kernel_img_OBJECTS)
ifeq ($(kernel_img_RELOCATABLE),yes)
kernel.img: $(kernel_img_DEPENDENCIES) $(kernel_img_OBJECTS)
	$(TARGET_CC) -Wl,-r,-d -o $@ $(kernel_img_OBJECTS) $(TARGET_LDFLAGS) $(kernel_img_LDFLAGS)
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K start -R .note -R .comment $@; fi
else
kernel.img: $(kernel_img_DEPENDENCIES) $(kernel_img_OBJECTS)
	$(TARGET_CC) -o $@ $(kernel_img_OBJECTS) $(TARGET_LDFLAGS) $(kernel_img_LDFLAGS)
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) -R .rel.dyn -R .reginfo -R .note -R .comment $@; fi
endif

