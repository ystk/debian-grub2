# -*- makefile -*-
# Generated by genmk.rb, please don't edit!

COMMON_CFLAGS = -mrtd -mregparm=3

# Images.

GRUB_KERNEL_MACHINE_LINK_ADDR	= 0x8200
GRUB_BOOT_MACHINE_LINK_ADDR	= 0xffe00

pkglib_IMAGES += boot.img
boot_img_SOURCES = boot/i386/qemu/boot.S

clean-image-boot.img.1:
	rm -f boot.img boot.exec boot_img-boot_i386_qemu_boot.o

CLEAN_IMAGE_TARGETS += clean-image-boot.img.1

mostlyclean-image-boot.img.1:
	rm -f boot_img-boot_i386_qemu_boot.d

MOSTLYCLEAN_IMAGE_TARGETS += mostlyclean-image-boot.img.1

ifneq ($(TARGET_APPLE_CC),1)
boot.img: boot.exec
	$(OBJCOPY) -O $(boot_img_FORMAT) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn $< $@
else
ifneq (boot.exec,kernel.exec)
boot.img: boot.exec ./grub-macho2img
	./grub-macho2img $< $@
else
boot.img: boot.exec ./grub-macho2img
	./grub-macho2img --bss $< $@
endif
endif

boot.exec: boot_img-boot_i386_qemu_boot.o
	$(TARGET_CC) -o $@ $^ $(TARGET_LDFLAGS) $(boot_img_LDFLAGS)

boot_img-boot_i386_qemu_boot.o: boot/i386/qemu/boot.S $(boot/i386/qemu/boot.S_DEPENDENCIES)
	$(TARGET_CC) -Iboot/i386/qemu -I$(srcdir)/boot/i386/qemu $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(boot_img_ASFLAGS) -DGRUB_FILE=\"boot/i386/qemu/boot.S\" -MD -c -o $@ $<
-include boot_img-boot_i386_qemu_boot.d

boot_img_ASFLAGS = $(COMMON_ASFLAGS) -DGRUB_BOOT_MACHINE_LINK_ADDR=$(GRUB_BOOT_MACHINE_LINK_ADDR)
boot_img_LDFLAGS = $(COMMON_LDFLAGS) $(TARGET_IMG_LDFLAGS)$(GRUB_BOOT_MACHINE_LINK_ADDR)
boot_img_FORMAT = binary

kern/i386/qemu/init.c_DEPENDENCIES = ascii.h

pkglib_PROGRAMS += kernel.img
kernel_img_SOURCES = kern/i386/qemu/startup.S \
	kern/i386/misc.S \
	kern/i386/coreboot/init.c \
	kern/i386/qemu/init.c \
	kern/i386/qemu/mmap.c \
	kern/i386/halt.c \
	kern/main.c kern/device.c \
	kern/disk.c kern/dl.c kern/file.c kern/fs.c kern/err.c \
	kern/misc.c kern/mm.c kern/term.c \
	kern/rescue_parser.c kern/rescue_reader.c \
	kern/time.c kern/list.c  kern/command.c kern/corecmd.c \
	kern/$(target_cpu)/dl.c kern/parser.c kern/partition.c \
	kern/i386/tsc.c kern/i386/pit.c \
	kern/generic/rtc_get_time_ms.c \
	kern/generic/millisleep.c \
	kern/env.c \
	term/i386/pc/vga_text.c term/i386/vga_common.c bus/pci.c \
	symlist.c
MOSTLYCLEANFILES += kernel_img-kern_i386_qemu_startup.d kernel_img-kern_i386_misc.d kernel_img-kern_i386_coreboot_init.d kernel_img-kern_i386_qemu_init.d kernel_img-kern_i386_qemu_mmap.d kernel_img-kern_i386_halt.d kernel_img-kern_main.d kernel_img-kern_device.d kernel_img-kern_disk.d kernel_img-kern_dl.d kernel_img-kern_file.d kernel_img-kern_fs.d kernel_img-kern_err.d kernel_img-kern_misc.d kernel_img-kern_mm.d kernel_img-kern_term.d kernel_img-kern_rescue_parser.d kernel_img-kern_rescue_reader.d kernel_img-kern_time.d kernel_img-kern_list.d kernel_img-kern_command.d kernel_img-kern_corecmd.d kernel_img-kern___target_cpu__dl.d kernel_img-kern_parser.d kernel_img-kern_partition.d kernel_img-kern_i386_tsc.d kernel_img-kern_i386_pit.d kernel_img-kern_generic_rtc_get_time_ms.d kernel_img-kern_generic_millisleep.d kernel_img-kern_env.d kernel_img-term_i386_pc_vga_text.d kernel_img-term_i386_vga_common.d kernel_img-bus_pci.d kernel_img-symlist.d

kernel_img-kern_i386_qemu_startup.o: kern/i386/qemu/startup.S $(kern/i386/qemu/startup.S_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386/qemu -I$(srcdir)/kern/i386/qemu $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(kernel_img_ASFLAGS) -DGRUB_FILE=\"kern/i386/qemu/startup.S\" -MD -c -o $@ $<

-include kernel_img-kern_i386_qemu_startup.d

kernel_img_OBJECTS += kernel_img-kern_i386_qemu_startup.o
kernel_img-kern_i386_misc.o: kern/i386/misc.S $(kern/i386/misc.S_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386 -I$(srcdir)/kern/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(kernel_img_ASFLAGS) -DGRUB_FILE=\"kern/i386/misc.S\" -MD -c -o $@ $<

-include kernel_img-kern_i386_misc.d

kernel_img_OBJECTS += kernel_img-kern_i386_misc.o
kernel_img-kern_i386_coreboot_init.o: kern/i386/coreboot/init.c $(kern/i386/coreboot/init.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386/coreboot -I$(srcdir)/kern/i386/coreboot $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/i386/coreboot/init.c\" -MD -c -o $@ $<

-include kernel_img-kern_i386_coreboot_init.d

kernel_img_OBJECTS += kernel_img-kern_i386_coreboot_init.o
kernel_img-kern_i386_qemu_init.o: kern/i386/qemu/init.c $(kern/i386/qemu/init.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386/qemu -I$(srcdir)/kern/i386/qemu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/i386/qemu/init.c\" -MD -c -o $@ $<

-include kernel_img-kern_i386_qemu_init.d

kernel_img_OBJECTS += kernel_img-kern_i386_qemu_init.o
kernel_img-kern_i386_qemu_mmap.o: kern/i386/qemu/mmap.c $(kern/i386/qemu/mmap.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386/qemu -I$(srcdir)/kern/i386/qemu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/i386/qemu/mmap.c\" -MD -c -o $@ $<

-include kernel_img-kern_i386_qemu_mmap.d

kernel_img_OBJECTS += kernel_img-kern_i386_qemu_mmap.o
kernel_img-kern_i386_halt.o: kern/i386/halt.c $(kern/i386/halt.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386 -I$(srcdir)/kern/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/i386/halt.c\" -MD -c -o $@ $<

-include kernel_img-kern_i386_halt.d

kernel_img_OBJECTS += kernel_img-kern_i386_halt.o
kernel_img-kern_main.o: kern/main.c $(kern/main.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/main.c\" -MD -c -o $@ $<

-include kernel_img-kern_main.d

kernel_img_OBJECTS += kernel_img-kern_main.o
kernel_img-kern_device.o: kern/device.c $(kern/device.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/device.c\" -MD -c -o $@ $<

-include kernel_img-kern_device.d

kernel_img_OBJECTS += kernel_img-kern_device.o
kernel_img-kern_disk.o: kern/disk.c $(kern/disk.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/disk.c\" -MD -c -o $@ $<

-include kernel_img-kern_disk.d

kernel_img_OBJECTS += kernel_img-kern_disk.o
kernel_img-kern_dl.o: kern/dl.c $(kern/dl.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/dl.c\" -MD -c -o $@ $<

-include kernel_img-kern_dl.d

kernel_img_OBJECTS += kernel_img-kern_dl.o
kernel_img-kern_file.o: kern/file.c $(kern/file.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/file.c\" -MD -c -o $@ $<

-include kernel_img-kern_file.d

kernel_img_OBJECTS += kernel_img-kern_file.o
kernel_img-kern_fs.o: kern/fs.c $(kern/fs.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/fs.c\" -MD -c -o $@ $<

-include kernel_img-kern_fs.d

kernel_img_OBJECTS += kernel_img-kern_fs.o
kernel_img-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<

-include kernel_img-kern_err.d

kernel_img_OBJECTS += kernel_img-kern_err.o
kernel_img-kern_misc.o: kern/misc.c $(kern/misc.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/misc.c\" -MD -c -o $@ $<

-include kernel_img-kern_misc.d

kernel_img_OBJECTS += kernel_img-kern_misc.o
kernel_img-kern_mm.o: kern/mm.c $(kern/mm.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/mm.c\" -MD -c -o $@ $<

-include kernel_img-kern_mm.d

kernel_img_OBJECTS += kernel_img-kern_mm.o
kernel_img-kern_term.o: kern/term.c $(kern/term.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/term.c\" -MD -c -o $@ $<

-include kernel_img-kern_term.d

kernel_img_OBJECTS += kernel_img-kern_term.o
kernel_img-kern_rescue_parser.o: kern/rescue_parser.c $(kern/rescue_parser.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/rescue_parser.c\" -MD -c -o $@ $<

-include kernel_img-kern_rescue_parser.d

kernel_img_OBJECTS += kernel_img-kern_rescue_parser.o
kernel_img-kern_rescue_reader.o: kern/rescue_reader.c $(kern/rescue_reader.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/rescue_reader.c\" -MD -c -o $@ $<

-include kernel_img-kern_rescue_reader.d

kernel_img_OBJECTS += kernel_img-kern_rescue_reader.o
kernel_img-kern_time.o: kern/time.c $(kern/time.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/time.c\" -MD -c -o $@ $<

-include kernel_img-kern_time.d

kernel_img_OBJECTS += kernel_img-kern_time.o
kernel_img-kern_list.o: kern/list.c $(kern/list.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/list.c\" -MD -c -o $@ $<

-include kernel_img-kern_list.d

kernel_img_OBJECTS += kernel_img-kern_list.o
kernel_img-kern_command.o: kern/command.c $(kern/command.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/command.c\" -MD -c -o $@ $<

-include kernel_img-kern_command.d

kernel_img_OBJECTS += kernel_img-kern_command.o
kernel_img-kern_corecmd.o: kern/corecmd.c $(kern/corecmd.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/corecmd.c\" -MD -c -o $@ $<

-include kernel_img-kern_corecmd.d

kernel_img_OBJECTS += kernel_img-kern_corecmd.o
kernel_img-kern___target_cpu__dl.o: kern/$(target_cpu)/dl.c $(kern/$(target_cpu)/dl.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu) -I$(srcdir)/kern/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/dl.c\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu__dl.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu__dl.o
kernel_img-kern_parser.o: kern/parser.c $(kern/parser.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/parser.c\" -MD -c -o $@ $<

-include kernel_img-kern_parser.d

kernel_img_OBJECTS += kernel_img-kern_parser.o
kernel_img-kern_partition.o: kern/partition.c $(kern/partition.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/partition.c\" -MD -c -o $@ $<

-include kernel_img-kern_partition.d

kernel_img_OBJECTS += kernel_img-kern_partition.o
kernel_img-kern_i386_tsc.o: kern/i386/tsc.c $(kern/i386/tsc.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386 -I$(srcdir)/kern/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/i386/tsc.c\" -MD -c -o $@ $<

-include kernel_img-kern_i386_tsc.d

kernel_img_OBJECTS += kernel_img-kern_i386_tsc.o
kernel_img-kern_i386_pit.o: kern/i386/pit.c $(kern/i386/pit.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/i386 -I$(srcdir)/kern/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/i386/pit.c\" -MD -c -o $@ $<

-include kernel_img-kern_i386_pit.d

kernel_img_OBJECTS += kernel_img-kern_i386_pit.o
kernel_img-kern_generic_rtc_get_time_ms.o: kern/generic/rtc_get_time_ms.c $(kern/generic/rtc_get_time_ms.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/generic -I$(srcdir)/kern/generic $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/generic/rtc_get_time_ms.c\" -MD -c -o $@ $<

-include kernel_img-kern_generic_rtc_get_time_ms.d

kernel_img_OBJECTS += kernel_img-kern_generic_rtc_get_time_ms.o
kernel_img-kern_generic_millisleep.o: kern/generic/millisleep.c $(kern/generic/millisleep.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/generic -I$(srcdir)/kern/generic $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/generic/millisleep.c\" -MD -c -o $@ $<

-include kernel_img-kern_generic_millisleep.d

kernel_img_OBJECTS += kernel_img-kern_generic_millisleep.o
kernel_img-kern_env.o: kern/env.c $(kern/env.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/env.c\" -MD -c -o $@ $<

-include kernel_img-kern_env.d

kernel_img_OBJECTS += kernel_img-kern_env.o
kernel_img-term_i386_pc_vga_text.o: term/i386/pc/vga_text.c $(term/i386/pc/vga_text.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm/i386/pc -I$(srcdir)/term/i386/pc $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"term/i386/pc/vga_text.c\" -MD -c -o $@ $<

-include kernel_img-term_i386_pc_vga_text.d

kernel_img_OBJECTS += kernel_img-term_i386_pc_vga_text.o
kernel_img-term_i386_vga_common.o: term/i386/vga_common.c $(term/i386/vga_common.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm/i386 -I$(srcdir)/term/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"term/i386/vga_common.c\" -MD -c -o $@ $<

-include kernel_img-term_i386_vga_common.d

kernel_img_OBJECTS += kernel_img-term_i386_vga_common.o
kernel_img-bus_pci.o: bus/pci.c $(bus/pci.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus -I$(srcdir)/bus $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"bus/pci.c\" -MD -c -o $@ $<

-include kernel_img-bus_pci.d

kernel_img_OBJECTS += kernel_img-bus_pci.o
kernel_img-symlist.o: symlist.c $(symlist.c_DEPENDENCIES)
	$(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"symlist.c\" -MD -c -o $@ $<

-include kernel_img-symlist.d

kernel_img_OBJECTS += kernel_img-symlist.o
kernel_img_HEADERS += pci.h
kernel_img_CFLAGS = $(COMMON_CFLAGS) -DGRUB_BOOT_MACHINE_LINK_ADDR=$(GRUB_BOOT_MACHINE_LINK_ADDR)
kernel_img_ASFLAGS = $(COMMON_ASFLAGS) -DGRUB_KERNEL_MACHINE_LINK_ADDR=$(GRUB_KERNEL_MACHINE_LINK_ADDR)
kernel_img_LDFLAGS += $(COMMON_LDFLAGS) $(TARGET_IMG_LDFLAGS)$(GRUB_KERNEL_MACHINE_LINK_ADDR)
kernel_img_FORMAT = binary

sbin_SCRIPTS += grub-install
grub_install_SOURCES = util/grub-install.in
CLEANFILES += grub-install

grub-install: util/grub-install.in $(util/grub-install.in_DEPENDENCIES) config.status
	./config.status --file=-:util/grub-install.in | sed -e 's,@pkglib_DATA@,$(pkglib_DATA),g' > $@
	chmod +x $@


bin_SCRIPTS += grub-mkrescue
grub_mkrescue_SOURCES = util/grub-mkrescue.in
CLEANFILES += grub-mkrescue

grub-mkrescue: util/grub-mkrescue.in $(util/grub-mkrescue.in_DEPENDENCIES) config.status
	./config.status --file=-:util/grub-mkrescue.in | sed -e 's,@pkglib_DATA@,$(pkglib_DATA),g' > $@
	chmod +x $@


# Modules.
pkglib_MODULES = linux.mod aout.mod halt.mod datetime.mod mmap.mod

# For mmap.mod.
mmap_mod_SOURCES = mmap/mmap.c mmap/i386/uppermem.c mmap/i386/mmap.c

clean-module-mmap.mod.1:
	rm -f mmap.mod mod-mmap.o mod-mmap.c pre-mmap.o mmap_mod-mmap_mmap.o mmap_mod-mmap_i386_uppermem.o mmap_mod-mmap_i386_mmap.o und-mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap.mod.1

clean-module-mmap.mod-symbol.1:
	rm -f def-mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap.mod-symbol.1
DEFSYMFILES += def-mmap.lst
mostlyclean-module-mmap.mod.1:
	rm -f mmap_mod-mmap_mmap.d mmap_mod-mmap_i386_uppermem.d mmap_mod-mmap_i386_mmap.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-mmap.mod.1
UNDSYMFILES += und-mmap.lst

ifeq ($(TARGET_NO_MODULES), yes)
mmap.mod: pre-mmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-mmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
mmap.mod: pre-mmap.o mod-mmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-mmap.o mod-mmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
mmap.mod: pre-mmap.o mod-mmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-mmap.o mod-mmap.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-mmap.o: $(mmap_mod_DEPENDENCIES) mmap_mod-mmap_mmap.o mmap_mod-mmap_i386_uppermem.o mmap_mod-mmap_i386_mmap.o
	-rm -f $@
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ mmap_mod-mmap_mmap.o mmap_mod-mmap_i386_uppermem.o mmap_mod-mmap_i386_mmap.o

mod-mmap.o: mod-mmap.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mod-mmap.c\" -c -o $@ $<

mod-mmap.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'mmap' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-mmap.lst: pre-mmap.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 mmap/' > $@
else
def-mmap.lst: pre-mmap.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 mmap/' > $@
endif

und-mmap.lst: pre-mmap.o
	echo 'mmap' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

mmap_mod-mmap_mmap.o: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES)
	$(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mmap/mmap.c\" -MD -c -o $@ $<
-include mmap_mod-mmap_mmap.d

clean-module-mmap_mod-mmap_mmap-extra.1:
	rm -f cmd-mmap_mod-mmap_mmap.lst fs-mmap_mod-mmap_mmap.lst partmap-mmap_mod-mmap_mmap.lst handler-mmap_mod-mmap_mmap.lst parttool-mmap_mod-mmap_mmap.lst video-mmap_mod-mmap_mmap.lst terminal-mmap_mod-mmap_mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap_mod-mmap_mmap-extra.1

COMMANDFILES += cmd-mmap_mod-mmap_mmap.lst
FSFILES += fs-mmap_mod-mmap_mmap.lst
PARTTOOLFILES += parttool-mmap_mod-mmap_mmap.lst
PARTMAPFILES += partmap-mmap_mod-mmap_mmap.lst
HANDLERFILES += handler-mmap_mod-mmap_mmap.lst
TERMINALFILES += terminal-mmap_mod-mmap_mmap.lst
VIDEOFILES += video-mmap_mod-mmap_mmap.lst

cmd-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mmap > $@ || (rm -f $@; exit 1)

fs-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mmap > $@ || (rm -f $@; exit 1)

parttool-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mmap > $@ || (rm -f $@; exit 1)

partmap-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mmap > $@ || (rm -f $@; exit 1)

handler-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mmap > $@ || (rm -f $@; exit 1)

terminal-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mmap > $@ || (rm -f $@; exit 1)

video-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mmap > $@ || (rm -f $@; exit 1)

mmap_mod-mmap_i386_uppermem.o: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES)
	$(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mmap/i386/uppermem.c\" -MD -c -o $@ $<
-include mmap_mod-mmap_i386_uppermem.d

clean-module-mmap_mod-mmap_i386_uppermem-extra.1:
	rm -f cmd-mmap_mod-mmap_i386_uppermem.lst fs-mmap_mod-mmap_i386_uppermem.lst partmap-mmap_mod-mmap_i386_uppermem.lst handler-mmap_mod-mmap_i386_uppermem.lst parttool-mmap_mod-mmap_i386_uppermem.lst video-mmap_mod-mmap_i386_uppermem.lst terminal-mmap_mod-mmap_i386_uppermem.lst

CLEAN_MODULE_TARGETS += clean-module-mmap_mod-mmap_i386_uppermem-extra.1

COMMANDFILES += cmd-mmap_mod-mmap_i386_uppermem.lst
FSFILES += fs-mmap_mod-mmap_i386_uppermem.lst
PARTTOOLFILES += parttool-mmap_mod-mmap_i386_uppermem.lst
PARTMAPFILES += partmap-mmap_mod-mmap_i386_uppermem.lst
HANDLERFILES += handler-mmap_mod-mmap_i386_uppermem.lst
TERMINALFILES += terminal-mmap_mod-mmap_i386_uppermem.lst
VIDEOFILES += video-mmap_mod-mmap_i386_uppermem.lst

cmd-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mmap > $@ || (rm -f $@; exit 1)

fs-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mmap > $@ || (rm -f $@; exit 1)

parttool-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mmap > $@ || (rm -f $@; exit 1)

partmap-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mmap > $@ || (rm -f $@; exit 1)

handler-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mmap > $@ || (rm -f $@; exit 1)

terminal-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mmap > $@ || (rm -f $@; exit 1)

video-mmap_mod-mmap_i386_uppermem.lst: mmap/i386/uppermem.c $(mmap/i386/uppermem.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mmap > $@ || (rm -f $@; exit 1)

mmap_mod-mmap_i386_mmap.o: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES)
	$(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mmap/i386/mmap.c\" -MD -c -o $@ $<
-include mmap_mod-mmap_i386_mmap.d

clean-module-mmap_mod-mmap_i386_mmap-extra.1:
	rm -f cmd-mmap_mod-mmap_i386_mmap.lst fs-mmap_mod-mmap_i386_mmap.lst partmap-mmap_mod-mmap_i386_mmap.lst handler-mmap_mod-mmap_i386_mmap.lst parttool-mmap_mod-mmap_i386_mmap.lst video-mmap_mod-mmap_i386_mmap.lst terminal-mmap_mod-mmap_i386_mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap_mod-mmap_i386_mmap-extra.1

COMMANDFILES += cmd-mmap_mod-mmap_i386_mmap.lst
FSFILES += fs-mmap_mod-mmap_i386_mmap.lst
PARTTOOLFILES += parttool-mmap_mod-mmap_i386_mmap.lst
PARTMAPFILES += partmap-mmap_mod-mmap_i386_mmap.lst
HANDLERFILES += handler-mmap_mod-mmap_i386_mmap.lst
TERMINALFILES += terminal-mmap_mod-mmap_i386_mmap.lst
VIDEOFILES += video-mmap_mod-mmap_i386_mmap.lst

cmd-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mmap > $@ || (rm -f $@; exit 1)

fs-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mmap > $@ || (rm -f $@; exit 1)

parttool-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mmap > $@ || (rm -f $@; exit 1)

partmap-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mmap > $@ || (rm -f $@; exit 1)

handler-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mmap > $@ || (rm -f $@; exit 1)

terminal-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mmap > $@ || (rm -f $@; exit 1)

video-mmap_mod-mmap_i386_mmap.lst: mmap/i386/mmap.c $(mmap/i386/mmap.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Immap/i386 -I$(srcdir)/mmap/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mmap > $@ || (rm -f $@; exit 1)

mmap_mod_CFLAGS = $(COMMON_CFLAGS)
mmap_mod_LDFLAGS = $(COMMON_LDFLAGS)
mmap_mod_ASFLAGS = $(COMMON_ASFLAGS)

# For linux.mod.
linux_mod_SOURCES = loader/i386/linux.c

clean-module-linux.mod.1:
	rm -f linux.mod mod-linux.o mod-linux.c pre-linux.o linux_mod-loader_i386_linux.o und-linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux.mod.1

clean-module-linux.mod-symbol.1:
	rm -f def-linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux.mod-symbol.1
DEFSYMFILES += def-linux.lst
mostlyclean-module-linux.mod.1:
	rm -f linux_mod-loader_i386_linux.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-linux.mod.1
UNDSYMFILES += und-linux.lst

ifeq ($(TARGET_NO_MODULES), yes)
linux.mod: pre-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-linux.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
linux.mod: pre-linux.o mod-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-linux.o mod-linux.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
linux.mod: pre-linux.o mod-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-linux.o mod-linux.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-linux.o: $(linux_mod_DEPENDENCIES) linux_mod-loader_i386_linux.o
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ linux_mod-loader_i386_linux.o

mod-linux.o: mod-linux.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -DGRUB_FILE=\"mod-linux.c\" -c -o $@ $<

mod-linux.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'linux' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-linux.lst: pre-linux.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 linux/' > $@
else
def-linux.lst: pre-linux.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 linux/' > $@
endif

und-linux.lst: pre-linux.o
	echo 'linux' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

linux_mod-loader_i386_linux.o: loader/i386/linux.c $(loader/i386/linux.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -DGRUB_FILE=\"loader/i386/linux.c\" -MD -c -o $@ $<
-include linux_mod-loader_i386_linux.d

clean-module-linux_mod-loader_i386_linux-extra.1:
	rm -f cmd-linux_mod-loader_i386_linux.lst fs-linux_mod-loader_i386_linux.lst partmap-linux_mod-loader_i386_linux.lst handler-linux_mod-loader_i386_linux.lst parttool-linux_mod-loader_i386_linux.lst video-linux_mod-loader_i386_linux.lst terminal-linux_mod-loader_i386_linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux_mod-loader_i386_linux-extra.1

COMMANDFILES += cmd-linux_mod-loader_i386_linux.lst
FSFILES += fs-linux_mod-loader_i386_linux.lst
PARTTOOLFILES += parttool-linux_mod-loader_i386_linux.lst
PARTMAPFILES += partmap-linux_mod-loader_i386_linux.lst
HANDLERFILES += handler-linux_mod-loader_i386_linux.lst
TERMINALFILES += terminal-linux_mod-loader_i386_linux.lst
VIDEOFILES += video-linux_mod-loader_i386_linux.lst

cmd-linux_mod-loader_i386_linux.lst: loader/i386/linux.c $(loader/i386/linux.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh linux > $@ || (rm -f $@; exit 1)

fs-linux_mod-loader_i386_linux.lst: loader/i386/linux.c $(loader/i386/linux.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh linux > $@ || (rm -f $@; exit 1)

parttool-linux_mod-loader_i386_linux.lst: loader/i386/linux.c $(loader/i386/linux.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh linux > $@ || (rm -f $@; exit 1)

partmap-linux_mod-loader_i386_linux.lst: loader/i386/linux.c $(loader/i386/linux.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh linux > $@ || (rm -f $@; exit 1)

handler-linux_mod-loader_i386_linux.lst: loader/i386/linux.c $(loader/i386/linux.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh linux > $@ || (rm -f $@; exit 1)

terminal-linux_mod-loader_i386_linux.lst: loader/i386/linux.c $(loader/i386/linux.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh linux > $@ || (rm -f $@; exit 1)

video-linux_mod-loader_i386_linux.lst: loader/i386/linux.c $(loader/i386/linux.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh linux > $@ || (rm -f $@; exit 1)

linux_mod_CFLAGS = $(COMMON_CFLAGS)
linux_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For halt.mod.
halt_mod_SOURCES = commands/halt.c

clean-module-halt.mod.1:
	rm -f halt.mod mod-halt.o mod-halt.c pre-halt.o halt_mod-commands_halt.o und-halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt.mod.1

clean-module-halt.mod-symbol.1:
	rm -f def-halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt.mod-symbol.1
DEFSYMFILES += def-halt.lst
mostlyclean-module-halt.mod.1:
	rm -f halt_mod-commands_halt.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-halt.mod.1
UNDSYMFILES += und-halt.lst

ifeq ($(TARGET_NO_MODULES), yes)
halt.mod: pre-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-halt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
halt.mod: pre-halt.o mod-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-halt.o mod-halt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
halt.mod: pre-halt.o mod-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-halt.o mod-halt.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-halt.o: $(halt_mod_DEPENDENCIES) halt_mod-commands_halt.o
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ halt_mod-commands_halt.o

mod-halt.o: mod-halt.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -DGRUB_FILE=\"mod-halt.c\" -c -o $@ $<

mod-halt.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'halt' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-halt.lst: pre-halt.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 halt/' > $@
else
def-halt.lst: pre-halt.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 halt/' > $@
endif

und-halt.lst: pre-halt.o
	echo 'halt' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

halt_mod-commands_halt.o: commands/halt.c $(commands/halt.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -DGRUB_FILE=\"commands/halt.c\" -MD -c -o $@ $<
-include halt_mod-commands_halt.d

clean-module-halt_mod-commands_halt-extra.1:
	rm -f cmd-halt_mod-commands_halt.lst fs-halt_mod-commands_halt.lst partmap-halt_mod-commands_halt.lst handler-halt_mod-commands_halt.lst parttool-halt_mod-commands_halt.lst video-halt_mod-commands_halt.lst terminal-halt_mod-commands_halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt_mod-commands_halt-extra.1

COMMANDFILES += cmd-halt_mod-commands_halt.lst
FSFILES += fs-halt_mod-commands_halt.lst
PARTTOOLFILES += parttool-halt_mod-commands_halt.lst
PARTMAPFILES += partmap-halt_mod-commands_halt.lst
HANDLERFILES += handler-halt_mod-commands_halt.lst
TERMINALFILES += terminal-halt_mod-commands_halt.lst
VIDEOFILES += video-halt_mod-commands_halt.lst

cmd-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh halt > $@ || (rm -f $@; exit 1)

fs-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh halt > $@ || (rm -f $@; exit 1)

parttool-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh halt > $@ || (rm -f $@; exit 1)

partmap-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh halt > $@ || (rm -f $@; exit 1)

handler-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh halt > $@ || (rm -f $@; exit 1)

terminal-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh halt > $@ || (rm -f $@; exit 1)

video-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh halt > $@ || (rm -f $@; exit 1)

halt_mod_CFLAGS = $(COMMON_CFLAGS)
halt_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For aout.mod.
aout_mod_SOURCES = loader/aout.c

clean-module-aout.mod.1:
	rm -f aout.mod mod-aout.o mod-aout.c pre-aout.o aout_mod-loader_aout.o und-aout.lst

CLEAN_MODULE_TARGETS += clean-module-aout.mod.1

clean-module-aout.mod-symbol.1:
	rm -f def-aout.lst

CLEAN_MODULE_TARGETS += clean-module-aout.mod-symbol.1
DEFSYMFILES += def-aout.lst
mostlyclean-module-aout.mod.1:
	rm -f aout_mod-loader_aout.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-aout.mod.1
UNDSYMFILES += und-aout.lst

ifeq ($(TARGET_NO_MODULES), yes)
aout.mod: pre-aout.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(aout_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-aout.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
aout.mod: pre-aout.o mod-aout.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(aout_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-aout.o mod-aout.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
aout.mod: pre-aout.o mod-aout.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(aout_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-aout.o mod-aout.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-aout.o: $(aout_mod_DEPENDENCIES) aout_mod-loader_aout.o
	-rm -f $@
	$(TARGET_CC) $(aout_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ aout_mod-loader_aout.o

mod-aout.o: mod-aout.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(aout_mod_CFLAGS) -DGRUB_FILE=\"mod-aout.c\" -c -o $@ $<

mod-aout.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'aout' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-aout.lst: pre-aout.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 aout/' > $@
else
def-aout.lst: pre-aout.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 aout/' > $@
endif

und-aout.lst: pre-aout.o
	echo 'aout' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

aout_mod-loader_aout.o: loader/aout.c $(loader/aout.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(aout_mod_CFLAGS) -DGRUB_FILE=\"loader/aout.c\" -MD -c -o $@ $<
-include aout_mod-loader_aout.d

clean-module-aout_mod-loader_aout-extra.1:
	rm -f cmd-aout_mod-loader_aout.lst fs-aout_mod-loader_aout.lst partmap-aout_mod-loader_aout.lst handler-aout_mod-loader_aout.lst parttool-aout_mod-loader_aout.lst video-aout_mod-loader_aout.lst terminal-aout_mod-loader_aout.lst

CLEAN_MODULE_TARGETS += clean-module-aout_mod-loader_aout-extra.1

COMMANDFILES += cmd-aout_mod-loader_aout.lst
FSFILES += fs-aout_mod-loader_aout.lst
PARTTOOLFILES += parttool-aout_mod-loader_aout.lst
PARTMAPFILES += partmap-aout_mod-loader_aout.lst
HANDLERFILES += handler-aout_mod-loader_aout.lst
TERMINALFILES += terminal-aout_mod-loader_aout.lst
VIDEOFILES += video-aout_mod-loader_aout.lst

cmd-aout_mod-loader_aout.lst: loader/aout.c $(loader/aout.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(aout_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh aout > $@ || (rm -f $@; exit 1)

fs-aout_mod-loader_aout.lst: loader/aout.c $(loader/aout.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(aout_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh aout > $@ || (rm -f $@; exit 1)

parttool-aout_mod-loader_aout.lst: loader/aout.c $(loader/aout.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(aout_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh aout > $@ || (rm -f $@; exit 1)

partmap-aout_mod-loader_aout.lst: loader/aout.c $(loader/aout.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(aout_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh aout > $@ || (rm -f $@; exit 1)

handler-aout_mod-loader_aout.lst: loader/aout.c $(loader/aout.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(aout_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh aout > $@ || (rm -f $@; exit 1)

terminal-aout_mod-loader_aout.lst: loader/aout.c $(loader/aout.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(aout_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh aout > $@ || (rm -f $@; exit 1)

video-aout_mod-loader_aout.lst: loader/aout.c $(loader/aout.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader -I$(srcdir)/loader $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(aout_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh aout > $@ || (rm -f $@; exit 1)

aout_mod_CFLAGS = $(COMMON_CFLAGS)
aout_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For bsd.mod
pkglib_MODULES += bsd.mod
bsd_mod_SOURCES = loader/i386/bsd.c loader/i386/bsd32.c loader/i386/bsd64.c loader/i386/bsd_helper.S loader/i386/bsd_trampoline.S

clean-module-bsd.mod.1:
	rm -f bsd.mod mod-bsd.o mod-bsd.c pre-bsd.o bsd_mod-loader_i386_bsd.o bsd_mod-loader_i386_bsd32.o bsd_mod-loader_i386_bsd64.o bsd_mod-loader_i386_bsd_helper.o bsd_mod-loader_i386_bsd_trampoline.o und-bsd.lst

CLEAN_MODULE_TARGETS += clean-module-bsd.mod.1

clean-module-bsd.mod-symbol.1:
	rm -f def-bsd.lst

CLEAN_MODULE_TARGETS += clean-module-bsd.mod-symbol.1
DEFSYMFILES += def-bsd.lst
mostlyclean-module-bsd.mod.1:
	rm -f bsd_mod-loader_i386_bsd.d bsd_mod-loader_i386_bsd32.d bsd_mod-loader_i386_bsd64.d bsd_mod-loader_i386_bsd_helper.d bsd_mod-loader_i386_bsd_trampoline.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-bsd.mod.1
UNDSYMFILES += und-bsd.lst

ifeq ($(TARGET_NO_MODULES), yes)
bsd.mod: pre-bsd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(bsd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-bsd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
bsd.mod: pre-bsd.o mod-bsd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(bsd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-bsd.o mod-bsd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
bsd.mod: pre-bsd.o mod-bsd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(bsd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-bsd.o mod-bsd.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-bsd.o: $(bsd_mod_DEPENDENCIES) bsd_mod-loader_i386_bsd.o bsd_mod-loader_i386_bsd32.o bsd_mod-loader_i386_bsd64.o bsd_mod-loader_i386_bsd_helper.o bsd_mod-loader_i386_bsd_trampoline.o
	-rm -f $@
	$(TARGET_CC) $(bsd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ bsd_mod-loader_i386_bsd.o bsd_mod-loader_i386_bsd32.o bsd_mod-loader_i386_bsd64.o bsd_mod-loader_i386_bsd_helper.o bsd_mod-loader_i386_bsd_trampoline.o

mod-bsd.o: mod-bsd.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -DGRUB_FILE=\"mod-bsd.c\" -c -o $@ $<

mod-bsd.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'bsd' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-bsd.lst: pre-bsd.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 bsd/' > $@
else
def-bsd.lst: pre-bsd.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 bsd/' > $@
endif

und-bsd.lst: pre-bsd.o
	echo 'bsd' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

bsd_mod-loader_i386_bsd.o: loader/i386/bsd.c $(loader/i386/bsd.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -DGRUB_FILE=\"loader/i386/bsd.c\" -MD -c -o $@ $<
-include bsd_mod-loader_i386_bsd.d

clean-module-bsd_mod-loader_i386_bsd-extra.1:
	rm -f cmd-bsd_mod-loader_i386_bsd.lst fs-bsd_mod-loader_i386_bsd.lst partmap-bsd_mod-loader_i386_bsd.lst handler-bsd_mod-loader_i386_bsd.lst parttool-bsd_mod-loader_i386_bsd.lst video-bsd_mod-loader_i386_bsd.lst terminal-bsd_mod-loader_i386_bsd.lst

CLEAN_MODULE_TARGETS += clean-module-bsd_mod-loader_i386_bsd-extra.1

COMMANDFILES += cmd-bsd_mod-loader_i386_bsd.lst
FSFILES += fs-bsd_mod-loader_i386_bsd.lst
PARTTOOLFILES += parttool-bsd_mod-loader_i386_bsd.lst
PARTMAPFILES += partmap-bsd_mod-loader_i386_bsd.lst
HANDLERFILES += handler-bsd_mod-loader_i386_bsd.lst
TERMINALFILES += terminal-bsd_mod-loader_i386_bsd.lst
VIDEOFILES += video-bsd_mod-loader_i386_bsd.lst

cmd-bsd_mod-loader_i386_bsd.lst: loader/i386/bsd.c $(loader/i386/bsd.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh bsd > $@ || (rm -f $@; exit 1)

fs-bsd_mod-loader_i386_bsd.lst: loader/i386/bsd.c $(loader/i386/bsd.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh bsd > $@ || (rm -f $@; exit 1)

parttool-bsd_mod-loader_i386_bsd.lst: loader/i386/bsd.c $(loader/i386/bsd.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh bsd > $@ || (rm -f $@; exit 1)

partmap-bsd_mod-loader_i386_bsd.lst: loader/i386/bsd.c $(loader/i386/bsd.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh bsd > $@ || (rm -f $@; exit 1)

handler-bsd_mod-loader_i386_bsd.lst: loader/i386/bsd.c $(loader/i386/bsd.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh bsd > $@ || (rm -f $@; exit 1)

terminal-bsd_mod-loader_i386_bsd.lst: loader/i386/bsd.c $(loader/i386/bsd.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh bsd > $@ || (rm -f $@; exit 1)

video-bsd_mod-loader_i386_bsd.lst: loader/i386/bsd.c $(loader/i386/bsd.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh bsd > $@ || (rm -f $@; exit 1)

bsd_mod-loader_i386_bsd32.o: loader/i386/bsd32.c $(loader/i386/bsd32.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -DGRUB_FILE=\"loader/i386/bsd32.c\" -MD -c -o $@ $<
-include bsd_mod-loader_i386_bsd32.d

clean-module-bsd_mod-loader_i386_bsd32-extra.1:
	rm -f cmd-bsd_mod-loader_i386_bsd32.lst fs-bsd_mod-loader_i386_bsd32.lst partmap-bsd_mod-loader_i386_bsd32.lst handler-bsd_mod-loader_i386_bsd32.lst parttool-bsd_mod-loader_i386_bsd32.lst video-bsd_mod-loader_i386_bsd32.lst terminal-bsd_mod-loader_i386_bsd32.lst

CLEAN_MODULE_TARGETS += clean-module-bsd_mod-loader_i386_bsd32-extra.1

COMMANDFILES += cmd-bsd_mod-loader_i386_bsd32.lst
FSFILES += fs-bsd_mod-loader_i386_bsd32.lst
PARTTOOLFILES += parttool-bsd_mod-loader_i386_bsd32.lst
PARTMAPFILES += partmap-bsd_mod-loader_i386_bsd32.lst
HANDLERFILES += handler-bsd_mod-loader_i386_bsd32.lst
TERMINALFILES += terminal-bsd_mod-loader_i386_bsd32.lst
VIDEOFILES += video-bsd_mod-loader_i386_bsd32.lst

cmd-bsd_mod-loader_i386_bsd32.lst: loader/i386/bsd32.c $(loader/i386/bsd32.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh bsd > $@ || (rm -f $@; exit 1)

fs-bsd_mod-loader_i386_bsd32.lst: loader/i386/bsd32.c $(loader/i386/bsd32.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh bsd > $@ || (rm -f $@; exit 1)

parttool-bsd_mod-loader_i386_bsd32.lst: loader/i386/bsd32.c $(loader/i386/bsd32.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh bsd > $@ || (rm -f $@; exit 1)

partmap-bsd_mod-loader_i386_bsd32.lst: loader/i386/bsd32.c $(loader/i386/bsd32.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh bsd > $@ || (rm -f $@; exit 1)

handler-bsd_mod-loader_i386_bsd32.lst: loader/i386/bsd32.c $(loader/i386/bsd32.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh bsd > $@ || (rm -f $@; exit 1)

terminal-bsd_mod-loader_i386_bsd32.lst: loader/i386/bsd32.c $(loader/i386/bsd32.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh bsd > $@ || (rm -f $@; exit 1)

video-bsd_mod-loader_i386_bsd32.lst: loader/i386/bsd32.c $(loader/i386/bsd32.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh bsd > $@ || (rm -f $@; exit 1)

bsd_mod-loader_i386_bsd64.o: loader/i386/bsd64.c $(loader/i386/bsd64.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -DGRUB_FILE=\"loader/i386/bsd64.c\" -MD -c -o $@ $<
-include bsd_mod-loader_i386_bsd64.d

clean-module-bsd_mod-loader_i386_bsd64-extra.1:
	rm -f cmd-bsd_mod-loader_i386_bsd64.lst fs-bsd_mod-loader_i386_bsd64.lst partmap-bsd_mod-loader_i386_bsd64.lst handler-bsd_mod-loader_i386_bsd64.lst parttool-bsd_mod-loader_i386_bsd64.lst video-bsd_mod-loader_i386_bsd64.lst terminal-bsd_mod-loader_i386_bsd64.lst

CLEAN_MODULE_TARGETS += clean-module-bsd_mod-loader_i386_bsd64-extra.1

COMMANDFILES += cmd-bsd_mod-loader_i386_bsd64.lst
FSFILES += fs-bsd_mod-loader_i386_bsd64.lst
PARTTOOLFILES += parttool-bsd_mod-loader_i386_bsd64.lst
PARTMAPFILES += partmap-bsd_mod-loader_i386_bsd64.lst
HANDLERFILES += handler-bsd_mod-loader_i386_bsd64.lst
TERMINALFILES += terminal-bsd_mod-loader_i386_bsd64.lst
VIDEOFILES += video-bsd_mod-loader_i386_bsd64.lst

cmd-bsd_mod-loader_i386_bsd64.lst: loader/i386/bsd64.c $(loader/i386/bsd64.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh bsd > $@ || (rm -f $@; exit 1)

fs-bsd_mod-loader_i386_bsd64.lst: loader/i386/bsd64.c $(loader/i386/bsd64.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh bsd > $@ || (rm -f $@; exit 1)

parttool-bsd_mod-loader_i386_bsd64.lst: loader/i386/bsd64.c $(loader/i386/bsd64.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh bsd > $@ || (rm -f $@; exit 1)

partmap-bsd_mod-loader_i386_bsd64.lst: loader/i386/bsd64.c $(loader/i386/bsd64.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh bsd > $@ || (rm -f $@; exit 1)

handler-bsd_mod-loader_i386_bsd64.lst: loader/i386/bsd64.c $(loader/i386/bsd64.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh bsd > $@ || (rm -f $@; exit 1)

terminal-bsd_mod-loader_i386_bsd64.lst: loader/i386/bsd64.c $(loader/i386/bsd64.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh bsd > $@ || (rm -f $@; exit 1)

video-bsd_mod-loader_i386_bsd64.lst: loader/i386/bsd64.c $(loader/i386/bsd64.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh bsd > $@ || (rm -f $@; exit 1)

bsd_mod-loader_i386_bsd_helper.o: loader/i386/bsd_helper.S $(loader/i386/bsd_helper.S_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -DGRUB_FILE=\"loader/i386/bsd_helper.S\" -MD -c -o $@ $<
-include bsd_mod-loader_i386_bsd_helper.d

clean-module-bsd_mod-loader_i386_bsd_helper-extra.1:
	rm -f cmd-bsd_mod-loader_i386_bsd_helper.lst fs-bsd_mod-loader_i386_bsd_helper.lst partmap-bsd_mod-loader_i386_bsd_helper.lst handler-bsd_mod-loader_i386_bsd_helper.lst parttool-bsd_mod-loader_i386_bsd_helper.lst video-bsd_mod-loader_i386_bsd_helper.lst terminal-bsd_mod-loader_i386_bsd_helper.lst

CLEAN_MODULE_TARGETS += clean-module-bsd_mod-loader_i386_bsd_helper-extra.1

COMMANDFILES += cmd-bsd_mod-loader_i386_bsd_helper.lst
FSFILES += fs-bsd_mod-loader_i386_bsd_helper.lst
PARTTOOLFILES += parttool-bsd_mod-loader_i386_bsd_helper.lst
PARTMAPFILES += partmap-bsd_mod-loader_i386_bsd_helper.lst
HANDLERFILES += handler-bsd_mod-loader_i386_bsd_helper.lst
TERMINALFILES += terminal-bsd_mod-loader_i386_bsd_helper.lst
VIDEOFILES += video-bsd_mod-loader_i386_bsd_helper.lst

cmd-bsd_mod-loader_i386_bsd_helper.lst: loader/i386/bsd_helper.S $(loader/i386/bsd_helper.S_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh bsd > $@ || (rm -f $@; exit 1)

fs-bsd_mod-loader_i386_bsd_helper.lst: loader/i386/bsd_helper.S $(loader/i386/bsd_helper.S_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh bsd > $@ || (rm -f $@; exit 1)

parttool-bsd_mod-loader_i386_bsd_helper.lst: loader/i386/bsd_helper.S $(loader/i386/bsd_helper.S_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh bsd > $@ || (rm -f $@; exit 1)

partmap-bsd_mod-loader_i386_bsd_helper.lst: loader/i386/bsd_helper.S $(loader/i386/bsd_helper.S_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh bsd > $@ || (rm -f $@; exit 1)

handler-bsd_mod-loader_i386_bsd_helper.lst: loader/i386/bsd_helper.S $(loader/i386/bsd_helper.S_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh bsd > $@ || (rm -f $@; exit 1)

terminal-bsd_mod-loader_i386_bsd_helper.lst: loader/i386/bsd_helper.S $(loader/i386/bsd_helper.S_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh bsd > $@ || (rm -f $@; exit 1)

video-bsd_mod-loader_i386_bsd_helper.lst: loader/i386/bsd_helper.S $(loader/i386/bsd_helper.S_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh bsd > $@ || (rm -f $@; exit 1)

bsd_mod-loader_i386_bsd_trampoline.o: loader/i386/bsd_trampoline.S $(loader/i386/bsd_trampoline.S_DEPENDENCIES)
	$(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -DGRUB_FILE=\"loader/i386/bsd_trampoline.S\" -MD -c -o $@ $<
-include bsd_mod-loader_i386_bsd_trampoline.d

clean-module-bsd_mod-loader_i386_bsd_trampoline-extra.1:
	rm -f cmd-bsd_mod-loader_i386_bsd_trampoline.lst fs-bsd_mod-loader_i386_bsd_trampoline.lst partmap-bsd_mod-loader_i386_bsd_trampoline.lst handler-bsd_mod-loader_i386_bsd_trampoline.lst parttool-bsd_mod-loader_i386_bsd_trampoline.lst video-bsd_mod-loader_i386_bsd_trampoline.lst terminal-bsd_mod-loader_i386_bsd_trampoline.lst

CLEAN_MODULE_TARGETS += clean-module-bsd_mod-loader_i386_bsd_trampoline-extra.1

COMMANDFILES += cmd-bsd_mod-loader_i386_bsd_trampoline.lst
FSFILES += fs-bsd_mod-loader_i386_bsd_trampoline.lst
PARTTOOLFILES += parttool-bsd_mod-loader_i386_bsd_trampoline.lst
PARTMAPFILES += partmap-bsd_mod-loader_i386_bsd_trampoline.lst
HANDLERFILES += handler-bsd_mod-loader_i386_bsd_trampoline.lst
TERMINALFILES += terminal-bsd_mod-loader_i386_bsd_trampoline.lst
VIDEOFILES += video-bsd_mod-loader_i386_bsd_trampoline.lst

cmd-bsd_mod-loader_i386_bsd_trampoline.lst: loader/i386/bsd_trampoline.S $(loader/i386/bsd_trampoline.S_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh bsd > $@ || (rm -f $@; exit 1)

fs-bsd_mod-loader_i386_bsd_trampoline.lst: loader/i386/bsd_trampoline.S $(loader/i386/bsd_trampoline.S_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh bsd > $@ || (rm -f $@; exit 1)

parttool-bsd_mod-loader_i386_bsd_trampoline.lst: loader/i386/bsd_trampoline.S $(loader/i386/bsd_trampoline.S_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh bsd > $@ || (rm -f $@; exit 1)

partmap-bsd_mod-loader_i386_bsd_trampoline.lst: loader/i386/bsd_trampoline.S $(loader/i386/bsd_trampoline.S_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh bsd > $@ || (rm -f $@; exit 1)

handler-bsd_mod-loader_i386_bsd_trampoline.lst: loader/i386/bsd_trampoline.S $(loader/i386/bsd_trampoline.S_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh bsd > $@ || (rm -f $@; exit 1)

terminal-bsd_mod-loader_i386_bsd_trampoline.lst: loader/i386/bsd_trampoline.S $(loader/i386/bsd_trampoline.S_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh bsd > $@ || (rm -f $@; exit 1)

video-bsd_mod-loader_i386_bsd_trampoline.lst: loader/i386/bsd_trampoline.S $(loader/i386/bsd_trampoline.S_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/i386 -I$(srcdir)/loader/i386 $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(bsd_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh bsd > $@ || (rm -f $@; exit 1)

bsd_mod_CFLAGS = $(COMMON_CFLAGS)
bsd_mod_LDFLAGS = $(COMMON_LDFLAGS)
bsd_mod_ASFLAGS = $(COMMON_ASFLAGS)

# For datetime.mod
datetime_mod_SOURCES = lib/cmos_datetime.c

clean-module-datetime.mod.1:
	rm -f datetime.mod mod-datetime.o mod-datetime.c pre-datetime.o datetime_mod-lib_cmos_datetime.o und-datetime.lst

CLEAN_MODULE_TARGETS += clean-module-datetime.mod.1

clean-module-datetime.mod-symbol.1:
	rm -f def-datetime.lst

CLEAN_MODULE_TARGETS += clean-module-datetime.mod-symbol.1
DEFSYMFILES += def-datetime.lst
mostlyclean-module-datetime.mod.1:
	rm -f datetime_mod-lib_cmos_datetime.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-datetime.mod.1
UNDSYMFILES += und-datetime.lst

ifeq ($(TARGET_NO_MODULES), yes)
datetime.mod: pre-datetime.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-datetime.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
datetime.mod: pre-datetime.o mod-datetime.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-datetime.o mod-datetime.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
datetime.mod: pre-datetime.o mod-datetime.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-datetime.o mod-datetime.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-datetime.o: $(datetime_mod_DEPENDENCIES) datetime_mod-lib_cmos_datetime.o
	-rm -f $@
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ datetime_mod-lib_cmos_datetime.o

mod-datetime.o: mod-datetime.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -DGRUB_FILE=\"mod-datetime.c\" -c -o $@ $<

mod-datetime.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'datetime' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-datetime.lst: pre-datetime.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 datetime/' > $@
else
def-datetime.lst: pre-datetime.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 datetime/' > $@
endif

und-datetime.lst: pre-datetime.o
	echo 'datetime' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

datetime_mod-lib_cmos_datetime.o: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -DGRUB_FILE=\"lib/cmos_datetime.c\" -MD -c -o $@ $<
-include datetime_mod-lib_cmos_datetime.d

clean-module-datetime_mod-lib_cmos_datetime-extra.1:
	rm -f cmd-datetime_mod-lib_cmos_datetime.lst fs-datetime_mod-lib_cmos_datetime.lst partmap-datetime_mod-lib_cmos_datetime.lst handler-datetime_mod-lib_cmos_datetime.lst parttool-datetime_mod-lib_cmos_datetime.lst video-datetime_mod-lib_cmos_datetime.lst terminal-datetime_mod-lib_cmos_datetime.lst

CLEAN_MODULE_TARGETS += clean-module-datetime_mod-lib_cmos_datetime-extra.1

COMMANDFILES += cmd-datetime_mod-lib_cmos_datetime.lst
FSFILES += fs-datetime_mod-lib_cmos_datetime.lst
PARTTOOLFILES += parttool-datetime_mod-lib_cmos_datetime.lst
PARTMAPFILES += partmap-datetime_mod-lib_cmos_datetime.lst
HANDLERFILES += handler-datetime_mod-lib_cmos_datetime.lst
TERMINALFILES += terminal-datetime_mod-lib_cmos_datetime.lst
VIDEOFILES += video-datetime_mod-lib_cmos_datetime.lst

cmd-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh datetime > $@ || (rm -f $@; exit 1)

fs-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh datetime > $@ || (rm -f $@; exit 1)

parttool-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh datetime > $@ || (rm -f $@; exit 1)

partmap-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh datetime > $@ || (rm -f $@; exit 1)

handler-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh datetime > $@ || (rm -f $@; exit 1)

terminal-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh datetime > $@ || (rm -f $@; exit 1)

video-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh datetime > $@ || (rm -f $@; exit 1)

datetime_mod_CFLAGS = $(COMMON_CFLAGS)
datetime_mod_LDFLAGS = $(COMMON_LDFLAGS)

include $(srcdir)/conf/i386.mk
include $(srcdir)/conf/common.mk
CLEANFILES += kernel.img $(kernel_img_OBJECTS)
ifeq ($(kernel_img_RELOCATABLE),yes)
kernel.img: $(kernel_img_DEPENDENCIES) $(kernel_img_OBJECTS)
	$(TARGET_CC) -Wl,-r,-d -o $@ $(kernel_img_OBJECTS) $(TARGET_LDFLAGS) $(kernel_img_LDFLAGS)
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K start -R .note -R .comment $@; fi
else
kernel.img: $(kernel_img_DEPENDENCIES) $(kernel_img_OBJECTS)
	$(TARGET_CC) -o $@ $(kernel_img_OBJECTS) $(TARGET_LDFLAGS) $(kernel_img_LDFLAGS)
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) -R .rel.dyn -R .reginfo -R .note -R .comment $@; fi
endif

