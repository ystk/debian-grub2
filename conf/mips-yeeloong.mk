# -*- makefile -*-
# Generated by genmk.rb, please don't edit!
LINK_BASE = 0x80200000
target_machine=yeeloong
COMMON_CFLAGS += -march=mips3
COMMON_ASFLAGS += -march=mips3

kernel_img_HEADERS += pci.h bitmap.h video.h gfxterm.h font.h \
		      bitmap_scale.h bufio.h cs5536.h machine/pci.h

include $(srcdir)/conf/mips.mk

pkglib_PROGRAMS = kernel.img
kernel_img_SOURCES = kern/$(target_cpu)/startup.S \
	kern/main.c kern/device.c kern/$(target_cpu)/init.c \
	kern/$(target_cpu)/$(target_machine)/init.c 		\
	kern/disk.c kern/dl.c kern/err.c kern/file.c kern/fs.c 		\
	kern/misc.c kern/mm.c kern/term.c 	\
	kern/rescue_parser.c kern/rescue_reader.c \
	kern/list.c  kern/command.c kern/corecmd.c	\
	kern/parser.c kern/partition.c kern/env.c kern/$(target_cpu)/dl.c 	\
	kern/generic/millisleep.c kern/generic/rtc_get_time_ms.c kern/time.c    \
	kern/$(target_cpu)/cache.S \
	\
	term/at_keyboard.c \
	font/font_cmd.c font/font.c io/bufio.c \
	video/video.c video/fb/video_fb.c video/fb/fbblit.c \
	video/fb/fbfill.c video/fb/fbutil.c video/bitmap.c \
	video/bitmap_scale.c video/sm712.c bus/pci.c bus/bonito.c \
	term/gfxterm.c commands/extcmd.c lib/arg.c \
	bus/cs5536.c term/serial.c term/terminfo.c term/tparm.c \
	symlist.c
MOSTLYCLEANFILES += kernel_img-kern___target_cpu__startup.d kernel_img-kern_main.d kernel_img-kern_device.d kernel_img-kern___target_cpu__init.d kernel_img-kern___target_cpu____target_machine__init.d kernel_img-kern_disk.d kernel_img-kern_dl.d kernel_img-kern_err.d kernel_img-kern_file.d kernel_img-kern_fs.d kernel_img-kern_misc.d kernel_img-kern_mm.d kernel_img-kern_term.d kernel_img-kern_rescue_parser.d kernel_img-kern_rescue_reader.d kernel_img-kern_list.d kernel_img-kern_command.d kernel_img-kern_corecmd.d kernel_img-kern_parser.d kernel_img-kern_partition.d kernel_img-kern_env.d kernel_img-kern___target_cpu__dl.d kernel_img-kern_generic_millisleep.d kernel_img-kern_generic_rtc_get_time_ms.d kernel_img-kern_time.d kernel_img-kern___target_cpu__cache.d kernel_img-term_at_keyboard.d kernel_img-font_font_cmd.d kernel_img-font_font.d kernel_img-io_bufio.d kernel_img-video_video.d kernel_img-video_fb_video_fb.d kernel_img-video_fb_fbblit.d kernel_img-video_fb_fbfill.d kernel_img-video_fb_fbutil.d kernel_img-video_bitmap.d kernel_img-video_bitmap_scale.d kernel_img-video_sm712.d kernel_img-bus_pci.d kernel_img-bus_bonito.d kernel_img-term_gfxterm.d kernel_img-commands_extcmd.d kernel_img-lib_arg.d kernel_img-bus_cs5536.d kernel_img-term_serial.d kernel_img-term_terminfo.d kernel_img-term_tparm.d kernel_img-symlist.d

kernel_img-kern___target_cpu__startup.o: kern/$(target_cpu)/startup.S $(kern/$(target_cpu)/startup.S_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu) -I$(srcdir)/kern/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(kernel_img_ASFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/startup.S\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu__startup.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu__startup.o
kernel_img-kern_main.o: kern/main.c $(kern/main.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/main.c\" -MD -c -o $@ $<

-include kernel_img-kern_main.d

kernel_img_OBJECTS += kernel_img-kern_main.o
kernel_img-kern_device.o: kern/device.c $(kern/device.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/device.c\" -MD -c -o $@ $<

-include kernel_img-kern_device.d

kernel_img_OBJECTS += kernel_img-kern_device.o
kernel_img-kern___target_cpu__init.o: kern/$(target_cpu)/init.c $(kern/$(target_cpu)/init.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu) -I$(srcdir)/kern/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/init.c\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu__init.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu__init.o
kernel_img-kern___target_cpu____target_machine__init.o: kern/$(target_cpu)/$(target_machine)/init.c $(kern/$(target_cpu)/$(target_machine)/init.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu)/$(target_machine) -I$(srcdir)/kern/$(target_cpu)/$(target_machine) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/$(target_machine)/init.c\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu____target_machine__init.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu____target_machine__init.o
kernel_img-kern_disk.o: kern/disk.c $(kern/disk.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/disk.c\" -MD -c -o $@ $<

-include kernel_img-kern_disk.d

kernel_img_OBJECTS += kernel_img-kern_disk.o
kernel_img-kern_dl.o: kern/dl.c $(kern/dl.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/dl.c\" -MD -c -o $@ $<

-include kernel_img-kern_dl.d

kernel_img_OBJECTS += kernel_img-kern_dl.o
kernel_img-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<

-include kernel_img-kern_err.d

kernel_img_OBJECTS += kernel_img-kern_err.o
kernel_img-kern_file.o: kern/file.c $(kern/file.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/file.c\" -MD -c -o $@ $<

-include kernel_img-kern_file.d

kernel_img_OBJECTS += kernel_img-kern_file.o
kernel_img-kern_fs.o: kern/fs.c $(kern/fs.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/fs.c\" -MD -c -o $@ $<

-include kernel_img-kern_fs.d

kernel_img_OBJECTS += kernel_img-kern_fs.o
kernel_img-kern_misc.o: kern/misc.c $(kern/misc.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/misc.c\" -MD -c -o $@ $<

-include kernel_img-kern_misc.d

kernel_img_OBJECTS += kernel_img-kern_misc.o
kernel_img-kern_mm.o: kern/mm.c $(kern/mm.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/mm.c\" -MD -c -o $@ $<

-include kernel_img-kern_mm.d

kernel_img_OBJECTS += kernel_img-kern_mm.o
kernel_img-kern_term.o: kern/term.c $(kern/term.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/term.c\" -MD -c -o $@ $<

-include kernel_img-kern_term.d

kernel_img_OBJECTS += kernel_img-kern_term.o
kernel_img-kern_rescue_parser.o: kern/rescue_parser.c $(kern/rescue_parser.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/rescue_parser.c\" -MD -c -o $@ $<

-include kernel_img-kern_rescue_parser.d

kernel_img_OBJECTS += kernel_img-kern_rescue_parser.o
kernel_img-kern_rescue_reader.o: kern/rescue_reader.c $(kern/rescue_reader.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/rescue_reader.c\" -MD -c -o $@ $<

-include kernel_img-kern_rescue_reader.d

kernel_img_OBJECTS += kernel_img-kern_rescue_reader.o
kernel_img-kern_list.o: kern/list.c $(kern/list.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/list.c\" -MD -c -o $@ $<

-include kernel_img-kern_list.d

kernel_img_OBJECTS += kernel_img-kern_list.o
kernel_img-kern_command.o: kern/command.c $(kern/command.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/command.c\" -MD -c -o $@ $<

-include kernel_img-kern_command.d

kernel_img_OBJECTS += kernel_img-kern_command.o
kernel_img-kern_corecmd.o: kern/corecmd.c $(kern/corecmd.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/corecmd.c\" -MD -c -o $@ $<

-include kernel_img-kern_corecmd.d

kernel_img_OBJECTS += kernel_img-kern_corecmd.o
kernel_img-kern_parser.o: kern/parser.c $(kern/parser.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/parser.c\" -MD -c -o $@ $<

-include kernel_img-kern_parser.d

kernel_img_OBJECTS += kernel_img-kern_parser.o
kernel_img-kern_partition.o: kern/partition.c $(kern/partition.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/partition.c\" -MD -c -o $@ $<

-include kernel_img-kern_partition.d

kernel_img_OBJECTS += kernel_img-kern_partition.o
kernel_img-kern_env.o: kern/env.c $(kern/env.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/env.c\" -MD -c -o $@ $<

-include kernel_img-kern_env.d

kernel_img_OBJECTS += kernel_img-kern_env.o
kernel_img-kern___target_cpu__dl.o: kern/$(target_cpu)/dl.c $(kern/$(target_cpu)/dl.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu) -I$(srcdir)/kern/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/dl.c\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu__dl.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu__dl.o
kernel_img-kern_generic_millisleep.o: kern/generic/millisleep.c $(kern/generic/millisleep.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/generic -I$(srcdir)/kern/generic $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/generic/millisleep.c\" -MD -c -o $@ $<

-include kernel_img-kern_generic_millisleep.d

kernel_img_OBJECTS += kernel_img-kern_generic_millisleep.o
kernel_img-kern_generic_rtc_get_time_ms.o: kern/generic/rtc_get_time_ms.c $(kern/generic/rtc_get_time_ms.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/generic -I$(srcdir)/kern/generic $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/generic/rtc_get_time_ms.c\" -MD -c -o $@ $<

-include kernel_img-kern_generic_rtc_get_time_ms.d

kernel_img_OBJECTS += kernel_img-kern_generic_rtc_get_time_ms.o
kernel_img-kern_time.o: kern/time.c $(kern/time.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/time.c\" -MD -c -o $@ $<

-include kernel_img-kern_time.d

kernel_img_OBJECTS += kernel_img-kern_time.o
kernel_img-kern___target_cpu__cache.o: kern/$(target_cpu)/cache.S $(kern/$(target_cpu)/cache.S_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu) -I$(srcdir)/kern/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(kernel_img_ASFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/cache.S\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu__cache.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu__cache.o
kernel_img-term_at_keyboard.o: term/at_keyboard.c $(term/at_keyboard.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"term/at_keyboard.c\" -MD -c -o $@ $<

-include kernel_img-term_at_keyboard.d

kernel_img_OBJECTS += kernel_img-term_at_keyboard.o
kernel_img-font_font_cmd.o: font/font_cmd.c $(font/font_cmd.c_DEPENDENCIES)
	$(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"font/font_cmd.c\" -MD -c -o $@ $<

-include kernel_img-font_font_cmd.d

kernel_img_OBJECTS += kernel_img-font_font_cmd.o
kernel_img-font_font.o: font/font.c $(font/font.c_DEPENDENCIES)
	$(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"font/font.c\" -MD -c -o $@ $<

-include kernel_img-font_font.d

kernel_img_OBJECTS += kernel_img-font_font.o
kernel_img-io_bufio.o: io/bufio.c $(io/bufio.c_DEPENDENCIES)
	$(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"io/bufio.c\" -MD -c -o $@ $<

-include kernel_img-io_bufio.d

kernel_img_OBJECTS += kernel_img-io_bufio.o
kernel_img-video_video.o: video/video.c $(video/video.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"video/video.c\" -MD -c -o $@ $<

-include kernel_img-video_video.d

kernel_img_OBJECTS += kernel_img-video_video.o
kernel_img-video_fb_video_fb.o: video/fb/video_fb.c $(video/fb/video_fb.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"video/fb/video_fb.c\" -MD -c -o $@ $<

-include kernel_img-video_fb_video_fb.d

kernel_img_OBJECTS += kernel_img-video_fb_video_fb.o
kernel_img-video_fb_fbblit.o: video/fb/fbblit.c $(video/fb/fbblit.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"video/fb/fbblit.c\" -MD -c -o $@ $<

-include kernel_img-video_fb_fbblit.d

kernel_img_OBJECTS += kernel_img-video_fb_fbblit.o
kernel_img-video_fb_fbfill.o: video/fb/fbfill.c $(video/fb/fbfill.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"video/fb/fbfill.c\" -MD -c -o $@ $<

-include kernel_img-video_fb_fbfill.d

kernel_img_OBJECTS += kernel_img-video_fb_fbfill.o
kernel_img-video_fb_fbutil.o: video/fb/fbutil.c $(video/fb/fbutil.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"video/fb/fbutil.c\" -MD -c -o $@ $<

-include kernel_img-video_fb_fbutil.d

kernel_img_OBJECTS += kernel_img-video_fb_fbutil.o
kernel_img-video_bitmap.o: video/bitmap.c $(video/bitmap.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"video/bitmap.c\" -MD -c -o $@ $<

-include kernel_img-video_bitmap.d

kernel_img_OBJECTS += kernel_img-video_bitmap.o
kernel_img-video_bitmap_scale.o: video/bitmap_scale.c $(video/bitmap_scale.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"video/bitmap_scale.c\" -MD -c -o $@ $<

-include kernel_img-video_bitmap_scale.d

kernel_img_OBJECTS += kernel_img-video_bitmap_scale.o
kernel_img-video_sm712.o: video/sm712.c $(video/sm712.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"video/sm712.c\" -MD -c -o $@ $<

-include kernel_img-video_sm712.d

kernel_img_OBJECTS += kernel_img-video_sm712.o
kernel_img-bus_pci.o: bus/pci.c $(bus/pci.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus -I$(srcdir)/bus $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"bus/pci.c\" -MD -c -o $@ $<

-include kernel_img-bus_pci.d

kernel_img_OBJECTS += kernel_img-bus_pci.o
kernel_img-bus_bonito.o: bus/bonito.c $(bus/bonito.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus -I$(srcdir)/bus $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"bus/bonito.c\" -MD -c -o $@ $<

-include kernel_img-bus_bonito.d

kernel_img_OBJECTS += kernel_img-bus_bonito.o
kernel_img-term_gfxterm.o: term/gfxterm.c $(term/gfxterm.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"term/gfxterm.c\" -MD -c -o $@ $<

-include kernel_img-term_gfxterm.d

kernel_img_OBJECTS += kernel_img-term_gfxterm.o
kernel_img-commands_extcmd.o: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"commands/extcmd.c\" -MD -c -o $@ $<

-include kernel_img-commands_extcmd.d

kernel_img_OBJECTS += kernel_img-commands_extcmd.o
kernel_img-lib_arg.o: lib/arg.c $(lib/arg.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"lib/arg.c\" -MD -c -o $@ $<

-include kernel_img-lib_arg.d

kernel_img_OBJECTS += kernel_img-lib_arg.o
kernel_img-bus_cs5536.o: bus/cs5536.c $(bus/cs5536.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus -I$(srcdir)/bus $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"bus/cs5536.c\" -MD -c -o $@ $<

-include kernel_img-bus_cs5536.d

kernel_img_OBJECTS += kernel_img-bus_cs5536.o
kernel_img-term_serial.o: term/serial.c $(term/serial.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"term/serial.c\" -MD -c -o $@ $<

-include kernel_img-term_serial.d

kernel_img_OBJECTS += kernel_img-term_serial.o
kernel_img-term_terminfo.o: term/terminfo.c $(term/terminfo.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"term/terminfo.c\" -MD -c -o $@ $<

-include kernel_img-term_terminfo.d

kernel_img_OBJECTS += kernel_img-term_terminfo.o
kernel_img-term_tparm.o: term/tparm.c $(term/tparm.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"term/tparm.c\" -MD -c -o $@ $<

-include kernel_img-term_tparm.d

kernel_img_OBJECTS += kernel_img-term_tparm.o
kernel_img-symlist.o: symlist.c $(symlist.c_DEPENDENCIES)
	$(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"symlist.c\" -MD -c -o $@ $<

-include kernel_img-symlist.d

kernel_img_OBJECTS += kernel_img-symlist.o
kernel_img_CFLAGS = $(COMMON_CFLAGS) -DUSE_ASCII_FAILBACK
kernel_img_ASFLAGS = $(COMMON_ASFLAGS)
kernel_img_LDFLAGS += $(COMMON_LDFLAGS) -Wl,-N,-S,-Ttext,$(LINK_BASE),-Bstatic
kernel_img_FORMAT = binary

pkglib_IMAGES += fwstart.img
fwstart_img_SOURCES = boot/$(target_cpu)/$(target_machine)/fwstart.S

clean-image-fwstart.img.1:
	rm -f fwstart.img fwstart.exec fwstart_img-boot___target_cpu____target_machine__fwstart.o

CLEAN_IMAGE_TARGETS += clean-image-fwstart.img.1

mostlyclean-image-fwstart.img.1:
	rm -f fwstart_img-boot___target_cpu____target_machine__fwstart.d

MOSTLYCLEAN_IMAGE_TARGETS += mostlyclean-image-fwstart.img.1

ifneq ($(TARGET_APPLE_CC),1)
fwstart.img: fwstart.exec
	$(OBJCOPY) -O $(fwstart_img_FORMAT) --strip-unneeded -R .note -R .comment -R .note.gnu.build-id -R .reginfo -R .rel.dyn $< $@
else
ifneq (fwstart.exec,kernel.exec)
fwstart.img: fwstart.exec ./grub-macho2img
	./grub-macho2img $< $@
else
fwstart.img: fwstart.exec ./grub-macho2img
	./grub-macho2img --bss $< $@
endif
endif

fwstart.exec: fwstart_img-boot___target_cpu____target_machine__fwstart.o
	$(TARGET_CC) -o $@ $^ $(TARGET_LDFLAGS) $(fwstart_img_LDFLAGS)

fwstart_img-boot___target_cpu____target_machine__fwstart.o: boot/$(target_cpu)/$(target_machine)/fwstart.S $(boot/$(target_cpu)/$(target_machine)/fwstart.S_DEPENDENCIES)
	$(TARGET_CC) -Iboot/$(target_cpu)/$(target_machine) -I$(srcdir)/boot/$(target_cpu)/$(target_machine) $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(fwstart_img_ASFLAGS) -DGRUB_FILE=\"boot/$(target_cpu)/$(target_machine)/fwstart.S\" -MD -c -o $@ $<
-include fwstart_img-boot___target_cpu____target_machine__fwstart.d

fwstart_img_CFLAGS = $(COMMON_CFLAGS)
fwstart_img_ASFLAGS = $(COMMON_ASFLAGS)
fwstart_img_LDFLAGS = $(COMMON_LDFLAGS) -static-libgcc -lgcc \
	-Wl,-N,-S,-Ttext,0xbfc00000,-Bstatic
fwstart_img_FORMAT = binary

# For ata.mod.
pkglib_MODULES += ata.mod
ata_mod_SOURCES = disk/ata.c

clean-module-ata.mod.1:
	rm -f ata.mod mod-ata.o mod-ata.c pre-ata.o ata_mod-disk_ata.o und-ata.lst

CLEAN_MODULE_TARGETS += clean-module-ata.mod.1

clean-module-ata.mod-symbol.1:
	rm -f def-ata.lst

CLEAN_MODULE_TARGETS += clean-module-ata.mod-symbol.1
DEFSYMFILES += def-ata.lst
mostlyclean-module-ata.mod.1:
	rm -f ata_mod-disk_ata.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-ata.mod.1
UNDSYMFILES += und-ata.lst

ifeq ($(TARGET_NO_MODULES), yes)
ata.mod: pre-ata.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ata_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ata.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
ata.mod: pre-ata.o mod-ata.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ata_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ata.o mod-ata.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ata.mod: pre-ata.o mod-ata.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(ata_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-ata.o mod-ata.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-ata.o: $(ata_mod_DEPENDENCIES) ata_mod-disk_ata.o
	-rm -f $@
	$(TARGET_CC) $(ata_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ ata_mod-disk_ata.o

mod-ata.o: mod-ata.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(ata_mod_CFLAGS) -DGRUB_FILE=\"mod-ata.c\" -c -o $@ $<

mod-ata.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'ata' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-ata.lst: pre-ata.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 ata/' > $@
else
def-ata.lst: pre-ata.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 ata/' > $@
endif

und-ata.lst: pre-ata.o
	echo 'ata' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

ata_mod-disk_ata.o: disk/ata.c $(disk/ata.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_mod_CFLAGS) -DGRUB_FILE=\"disk/ata.c\" -MD -c -o $@ $<
-include ata_mod-disk_ata.d

clean-module-ata_mod-disk_ata-extra.1:
	rm -f cmd-ata_mod-disk_ata.lst fs-ata_mod-disk_ata.lst partmap-ata_mod-disk_ata.lst handler-ata_mod-disk_ata.lst parttool-ata_mod-disk_ata.lst video-ata_mod-disk_ata.lst terminal-ata_mod-disk_ata.lst

CLEAN_MODULE_TARGETS += clean-module-ata_mod-disk_ata-extra.1

COMMANDFILES += cmd-ata_mod-disk_ata.lst
FSFILES += fs-ata_mod-disk_ata.lst
PARTTOOLFILES += parttool-ata_mod-disk_ata.lst
PARTMAPFILES += partmap-ata_mod-disk_ata.lst
HANDLERFILES += handler-ata_mod-disk_ata.lst
TERMINALFILES += terminal-ata_mod-disk_ata.lst
VIDEOFILES += video-ata_mod-disk_ata.lst

cmd-ata_mod-disk_ata.lst: disk/ata.c $(disk/ata.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh ata > $@ || (rm -f $@; exit 1)

fs-ata_mod-disk_ata.lst: disk/ata.c $(disk/ata.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ata_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh ata > $@ || (rm -f $@; exit 1)

parttool-ata_mod-disk_ata.lst: disk/ata.c $(disk/ata.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh ata > $@ || (rm -f $@; exit 1)

partmap-ata_mod-disk_ata.lst: disk/ata.c $(disk/ata.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ata_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh ata > $@ || (rm -f $@; exit 1)

handler-ata_mod-disk_ata.lst: disk/ata.c $(disk/ata.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh ata > $@ || (rm -f $@; exit 1)

terminal-ata_mod-disk_ata.lst: disk/ata.c $(disk/ata.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh ata > $@ || (rm -f $@; exit 1)

video-ata_mod-disk_ata.lst: disk/ata.c $(disk/ata.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ata_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh ata > $@ || (rm -f $@; exit 1)

ata_mod_CFLAGS = $(COMMON_CFLAGS)
ata_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For lspci.mod
pkglib_MODULES += lspci.mod
lspci_mod_SOURCES = commands/lspci.c

clean-module-lspci.mod.1:
	rm -f lspci.mod mod-lspci.o mod-lspci.c pre-lspci.o lspci_mod-commands_lspci.o und-lspci.lst

CLEAN_MODULE_TARGETS += clean-module-lspci.mod.1

clean-module-lspci.mod-symbol.1:
	rm -f def-lspci.lst

CLEAN_MODULE_TARGETS += clean-module-lspci.mod-symbol.1
DEFSYMFILES += def-lspci.lst
mostlyclean-module-lspci.mod.1:
	rm -f lspci_mod-commands_lspci.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-lspci.mod.1
UNDSYMFILES += und-lspci.lst

ifeq ($(TARGET_NO_MODULES), yes)
lspci.mod: pre-lspci.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(lspci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-lspci.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
lspci.mod: pre-lspci.o mod-lspci.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(lspci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-lspci.o mod-lspci.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
lspci.mod: pre-lspci.o mod-lspci.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(lspci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-lspci.o mod-lspci.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-lspci.o: $(lspci_mod_DEPENDENCIES) lspci_mod-commands_lspci.o
	-rm -f $@
	$(TARGET_CC) $(lspci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ lspci_mod-commands_lspci.o

mod-lspci.o: mod-lspci.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(lspci_mod_CFLAGS) -DGRUB_FILE=\"mod-lspci.c\" -c -o $@ $<

mod-lspci.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'lspci' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-lspci.lst: pre-lspci.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 lspci/' > $@
else
def-lspci.lst: pre-lspci.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 lspci/' > $@
endif

und-lspci.lst: pre-lspci.o
	echo 'lspci' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

lspci_mod-commands_lspci.o: commands/lspci.c $(commands/lspci.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lspci_mod_CFLAGS) -DGRUB_FILE=\"commands/lspci.c\" -MD -c -o $@ $<
-include lspci_mod-commands_lspci.d

clean-module-lspci_mod-commands_lspci-extra.1:
	rm -f cmd-lspci_mod-commands_lspci.lst fs-lspci_mod-commands_lspci.lst partmap-lspci_mod-commands_lspci.lst handler-lspci_mod-commands_lspci.lst parttool-lspci_mod-commands_lspci.lst video-lspci_mod-commands_lspci.lst terminal-lspci_mod-commands_lspci.lst

CLEAN_MODULE_TARGETS += clean-module-lspci_mod-commands_lspci-extra.1

COMMANDFILES += cmd-lspci_mod-commands_lspci.lst
FSFILES += fs-lspci_mod-commands_lspci.lst
PARTTOOLFILES += parttool-lspci_mod-commands_lspci.lst
PARTMAPFILES += partmap-lspci_mod-commands_lspci.lst
HANDLERFILES += handler-lspci_mod-commands_lspci.lst
TERMINALFILES += terminal-lspci_mod-commands_lspci.lst
VIDEOFILES += video-lspci_mod-commands_lspci.lst

cmd-lspci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lspci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh lspci > $@ || (rm -f $@; exit 1)

fs-lspci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lspci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh lspci > $@ || (rm -f $@; exit 1)

parttool-lspci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lspci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh lspci > $@ || (rm -f $@; exit 1)

partmap-lspci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lspci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh lspci > $@ || (rm -f $@; exit 1)

handler-lspci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lspci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh lspci > $@ || (rm -f $@; exit 1)

terminal-lspci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lspci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh lspci > $@ || (rm -f $@; exit 1)

video-lspci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lspci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh lspci > $@ || (rm -f $@; exit 1)

lspci_mod_CFLAGS = $(COMMON_CFLAGS)
lspci_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For ata_pthru.mod.
pkglib_MODULES += ata_pthru.mod
ata_pthru_mod_SOURCES = disk/ata_pthru.c

clean-module-ata_pthru.mod.1:
	rm -f ata_pthru.mod mod-ata_pthru.o mod-ata_pthru.c pre-ata_pthru.o ata_pthru_mod-disk_ata_pthru.o und-ata_pthru.lst

CLEAN_MODULE_TARGETS += clean-module-ata_pthru.mod.1

clean-module-ata_pthru.mod-symbol.1:
	rm -f def-ata_pthru.lst

CLEAN_MODULE_TARGETS += clean-module-ata_pthru.mod-symbol.1
DEFSYMFILES += def-ata_pthru.lst
mostlyclean-module-ata_pthru.mod.1:
	rm -f ata_pthru_mod-disk_ata_pthru.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-ata_pthru.mod.1
UNDSYMFILES += und-ata_pthru.lst

ifeq ($(TARGET_NO_MODULES), yes)
ata_pthru.mod: pre-ata_pthru.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ata_pthru_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ata_pthru.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
ata_pthru.mod: pre-ata_pthru.o mod-ata_pthru.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ata_pthru_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ata_pthru.o mod-ata_pthru.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ata_pthru.mod: pre-ata_pthru.o mod-ata_pthru.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(ata_pthru_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-ata_pthru.o mod-ata_pthru.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-ata_pthru.o: $(ata_pthru_mod_DEPENDENCIES) ata_pthru_mod-disk_ata_pthru.o
	-rm -f $@
	$(TARGET_CC) $(ata_pthru_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ ata_pthru_mod-disk_ata_pthru.o

mod-ata_pthru.o: mod-ata_pthru.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(ata_pthru_mod_CFLAGS) -DGRUB_FILE=\"mod-ata_pthru.c\" -c -o $@ $<

mod-ata_pthru.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'ata_pthru' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-ata_pthru.lst: pre-ata_pthru.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 ata_pthru/' > $@
else
def-ata_pthru.lst: pre-ata_pthru.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 ata_pthru/' > $@
endif

und-ata_pthru.lst: pre-ata_pthru.o
	echo 'ata_pthru' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

ata_pthru_mod-disk_ata_pthru.o: disk/ata_pthru.c $(disk/ata_pthru.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_pthru_mod_CFLAGS) -DGRUB_FILE=\"disk/ata_pthru.c\" -MD -c -o $@ $<
-include ata_pthru_mod-disk_ata_pthru.d

clean-module-ata_pthru_mod-disk_ata_pthru-extra.1:
	rm -f cmd-ata_pthru_mod-disk_ata_pthru.lst fs-ata_pthru_mod-disk_ata_pthru.lst partmap-ata_pthru_mod-disk_ata_pthru.lst handler-ata_pthru_mod-disk_ata_pthru.lst parttool-ata_pthru_mod-disk_ata_pthru.lst video-ata_pthru_mod-disk_ata_pthru.lst terminal-ata_pthru_mod-disk_ata_pthru.lst

CLEAN_MODULE_TARGETS += clean-module-ata_pthru_mod-disk_ata_pthru-extra.1

COMMANDFILES += cmd-ata_pthru_mod-disk_ata_pthru.lst
FSFILES += fs-ata_pthru_mod-disk_ata_pthru.lst
PARTTOOLFILES += parttool-ata_pthru_mod-disk_ata_pthru.lst
PARTMAPFILES += partmap-ata_pthru_mod-disk_ata_pthru.lst
HANDLERFILES += handler-ata_pthru_mod-disk_ata_pthru.lst
TERMINALFILES += terminal-ata_pthru_mod-disk_ata_pthru.lst
VIDEOFILES += video-ata_pthru_mod-disk_ata_pthru.lst

cmd-ata_pthru_mod-disk_ata_pthru.lst: disk/ata_pthru.c $(disk/ata_pthru.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_pthru_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh ata_pthru > $@ || (rm -f $@; exit 1)

fs-ata_pthru_mod-disk_ata_pthru.lst: disk/ata_pthru.c $(disk/ata_pthru.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ata_pthru_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh ata_pthru > $@ || (rm -f $@; exit 1)

parttool-ata_pthru_mod-disk_ata_pthru.lst: disk/ata_pthru.c $(disk/ata_pthru.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_pthru_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh ata_pthru > $@ || (rm -f $@; exit 1)

partmap-ata_pthru_mod-disk_ata_pthru.lst: disk/ata_pthru.c $(disk/ata_pthru.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ata_pthru_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh ata_pthru > $@ || (rm -f $@; exit 1)

handler-ata_pthru_mod-disk_ata_pthru.lst: disk/ata_pthru.c $(disk/ata_pthru.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_pthru_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh ata_pthru > $@ || (rm -f $@; exit 1)

terminal-ata_pthru_mod-disk_ata_pthru.lst: disk/ata_pthru.c $(disk/ata_pthru.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ata_pthru_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh ata_pthru > $@ || (rm -f $@; exit 1)

video-ata_pthru_mod-disk_ata_pthru.lst: disk/ata_pthru.c $(disk/ata_pthru.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ata_pthru_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh ata_pthru > $@ || (rm -f $@; exit 1)

ata_pthru_mod_CFLAGS = $(COMMON_CFLAGS)
ata_pthru_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For mmap.mod.
pkglib_MODULES += mmap.mod
mmap_mod_SOURCES = mmap/mmap.c mmap/mips/yeeloong/uppermem.c

clean-module-mmap.mod.1:
	rm -f mmap.mod mod-mmap.o mod-mmap.c pre-mmap.o mmap_mod-mmap_mmap.o mmap_mod-mmap_mips_yeeloong_uppermem.o und-mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap.mod.1

clean-module-mmap.mod-symbol.1:
	rm -f def-mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap.mod-symbol.1
DEFSYMFILES += def-mmap.lst
mostlyclean-module-mmap.mod.1:
	rm -f mmap_mod-mmap_mmap.d mmap_mod-mmap_mips_yeeloong_uppermem.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-mmap.mod.1
UNDSYMFILES += und-mmap.lst

ifeq ($(TARGET_NO_MODULES), yes)
mmap.mod: pre-mmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-mmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
mmap.mod: pre-mmap.o mod-mmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-mmap.o mod-mmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
mmap.mod: pre-mmap.o mod-mmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-mmap.o mod-mmap.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-mmap.o: $(mmap_mod_DEPENDENCIES) mmap_mod-mmap_mmap.o mmap_mod-mmap_mips_yeeloong_uppermem.o
	-rm -f $@
	$(TARGET_CC) $(mmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ mmap_mod-mmap_mmap.o mmap_mod-mmap_mips_yeeloong_uppermem.o

mod-mmap.o: mod-mmap.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mod-mmap.c\" -c -o $@ $<

mod-mmap.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'mmap' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-mmap.lst: pre-mmap.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 mmap/' > $@
else
def-mmap.lst: pre-mmap.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 mmap/' > $@
endif

und-mmap.lst: pre-mmap.o
	echo 'mmap' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

mmap_mod-mmap_mmap.o: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES)
	$(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mmap/mmap.c\" -MD -c -o $@ $<
-include mmap_mod-mmap_mmap.d

clean-module-mmap_mod-mmap_mmap-extra.1:
	rm -f cmd-mmap_mod-mmap_mmap.lst fs-mmap_mod-mmap_mmap.lst partmap-mmap_mod-mmap_mmap.lst handler-mmap_mod-mmap_mmap.lst parttool-mmap_mod-mmap_mmap.lst video-mmap_mod-mmap_mmap.lst terminal-mmap_mod-mmap_mmap.lst

CLEAN_MODULE_TARGETS += clean-module-mmap_mod-mmap_mmap-extra.1

COMMANDFILES += cmd-mmap_mod-mmap_mmap.lst
FSFILES += fs-mmap_mod-mmap_mmap.lst
PARTTOOLFILES += parttool-mmap_mod-mmap_mmap.lst
PARTMAPFILES += partmap-mmap_mod-mmap_mmap.lst
HANDLERFILES += handler-mmap_mod-mmap_mmap.lst
TERMINALFILES += terminal-mmap_mod-mmap_mmap.lst
VIDEOFILES += video-mmap_mod-mmap_mmap.lst

cmd-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mmap > $@ || (rm -f $@; exit 1)

fs-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mmap > $@ || (rm -f $@; exit 1)

parttool-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mmap > $@ || (rm -f $@; exit 1)

partmap-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mmap > $@ || (rm -f $@; exit 1)

handler-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mmap > $@ || (rm -f $@; exit 1)

terminal-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mmap > $@ || (rm -f $@; exit 1)

video-mmap_mod-mmap_mmap.lst: mmap/mmap.c $(mmap/mmap.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Immap -I$(srcdir)/mmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mmap > $@ || (rm -f $@; exit 1)

mmap_mod-mmap_mips_yeeloong_uppermem.o: mmap/mips/yeeloong/uppermem.c $(mmap/mips/yeeloong/uppermem.c_DEPENDENCIES)
	$(TARGET_CC) -Immap/mips/yeeloong -I$(srcdir)/mmap/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -DGRUB_FILE=\"mmap/mips/yeeloong/uppermem.c\" -MD -c -o $@ $<
-include mmap_mod-mmap_mips_yeeloong_uppermem.d

clean-module-mmap_mod-mmap_mips_yeeloong_uppermem-extra.1:
	rm -f cmd-mmap_mod-mmap_mips_yeeloong_uppermem.lst fs-mmap_mod-mmap_mips_yeeloong_uppermem.lst partmap-mmap_mod-mmap_mips_yeeloong_uppermem.lst handler-mmap_mod-mmap_mips_yeeloong_uppermem.lst parttool-mmap_mod-mmap_mips_yeeloong_uppermem.lst video-mmap_mod-mmap_mips_yeeloong_uppermem.lst terminal-mmap_mod-mmap_mips_yeeloong_uppermem.lst

CLEAN_MODULE_TARGETS += clean-module-mmap_mod-mmap_mips_yeeloong_uppermem-extra.1

COMMANDFILES += cmd-mmap_mod-mmap_mips_yeeloong_uppermem.lst
FSFILES += fs-mmap_mod-mmap_mips_yeeloong_uppermem.lst
PARTTOOLFILES += parttool-mmap_mod-mmap_mips_yeeloong_uppermem.lst
PARTMAPFILES += partmap-mmap_mod-mmap_mips_yeeloong_uppermem.lst
HANDLERFILES += handler-mmap_mod-mmap_mips_yeeloong_uppermem.lst
TERMINALFILES += terminal-mmap_mod-mmap_mips_yeeloong_uppermem.lst
VIDEOFILES += video-mmap_mod-mmap_mips_yeeloong_uppermem.lst

cmd-mmap_mod-mmap_mips_yeeloong_uppermem.lst: mmap/mips/yeeloong/uppermem.c $(mmap/mips/yeeloong/uppermem.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Immap/mips/yeeloong -I$(srcdir)/mmap/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mmap > $@ || (rm -f $@; exit 1)

fs-mmap_mod-mmap_mips_yeeloong_uppermem.lst: mmap/mips/yeeloong/uppermem.c $(mmap/mips/yeeloong/uppermem.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Immap/mips/yeeloong -I$(srcdir)/mmap/mips/yeeloong $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mmap > $@ || (rm -f $@; exit 1)

parttool-mmap_mod-mmap_mips_yeeloong_uppermem.lst: mmap/mips/yeeloong/uppermem.c $(mmap/mips/yeeloong/uppermem.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Immap/mips/yeeloong -I$(srcdir)/mmap/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mmap > $@ || (rm -f $@; exit 1)

partmap-mmap_mod-mmap_mips_yeeloong_uppermem.lst: mmap/mips/yeeloong/uppermem.c $(mmap/mips/yeeloong/uppermem.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Immap/mips/yeeloong -I$(srcdir)/mmap/mips/yeeloong $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mmap > $@ || (rm -f $@; exit 1)

handler-mmap_mod-mmap_mips_yeeloong_uppermem.lst: mmap/mips/yeeloong/uppermem.c $(mmap/mips/yeeloong/uppermem.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Immap/mips/yeeloong -I$(srcdir)/mmap/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mmap > $@ || (rm -f $@; exit 1)

terminal-mmap_mod-mmap_mips_yeeloong_uppermem.lst: mmap/mips/yeeloong/uppermem.c $(mmap/mips/yeeloong/uppermem.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Immap/mips/yeeloong -I$(srcdir)/mmap/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mmap > $@ || (rm -f $@; exit 1)

video-mmap_mod-mmap_mips_yeeloong_uppermem.lst: mmap/mips/yeeloong/uppermem.c $(mmap/mips/yeeloong/uppermem.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Immap/mips/yeeloong -I$(srcdir)/mmap/mips/yeeloong $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mmap > $@ || (rm -f $@; exit 1)

mmap_mod_CFLAGS = $(COMMON_CFLAGS)
mmap_mod_LDFLAGS = $(COMMON_LDFLAGS)
mmap_mod_ASFLAGS = $(COMMON_ASFLAGS)

# For datetime.mod
pkglib_MODULES += datetime.mod
datetime_mod_SOURCES = lib/cmos_datetime.c

clean-module-datetime.mod.1:
	rm -f datetime.mod mod-datetime.o mod-datetime.c pre-datetime.o datetime_mod-lib_cmos_datetime.o und-datetime.lst

CLEAN_MODULE_TARGETS += clean-module-datetime.mod.1

clean-module-datetime.mod-symbol.1:
	rm -f def-datetime.lst

CLEAN_MODULE_TARGETS += clean-module-datetime.mod-symbol.1
DEFSYMFILES += def-datetime.lst
mostlyclean-module-datetime.mod.1:
	rm -f datetime_mod-lib_cmos_datetime.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-datetime.mod.1
UNDSYMFILES += und-datetime.lst

ifeq ($(TARGET_NO_MODULES), yes)
datetime.mod: pre-datetime.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-datetime.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
datetime.mod: pre-datetime.o mod-datetime.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-datetime.o mod-datetime.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
datetime.mod: pre-datetime.o mod-datetime.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-datetime.o mod-datetime.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-datetime.o: $(datetime_mod_DEPENDENCIES) datetime_mod-lib_cmos_datetime.o
	-rm -f $@
	$(TARGET_CC) $(datetime_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ datetime_mod-lib_cmos_datetime.o

mod-datetime.o: mod-datetime.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -DGRUB_FILE=\"mod-datetime.c\" -c -o $@ $<

mod-datetime.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'datetime' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-datetime.lst: pre-datetime.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 datetime/' > $@
else
def-datetime.lst: pre-datetime.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 datetime/' > $@
endif

und-datetime.lst: pre-datetime.o
	echo 'datetime' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

datetime_mod-lib_cmos_datetime.o: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -DGRUB_FILE=\"lib/cmos_datetime.c\" -MD -c -o $@ $<
-include datetime_mod-lib_cmos_datetime.d

clean-module-datetime_mod-lib_cmos_datetime-extra.1:
	rm -f cmd-datetime_mod-lib_cmos_datetime.lst fs-datetime_mod-lib_cmos_datetime.lst partmap-datetime_mod-lib_cmos_datetime.lst handler-datetime_mod-lib_cmos_datetime.lst parttool-datetime_mod-lib_cmos_datetime.lst video-datetime_mod-lib_cmos_datetime.lst terminal-datetime_mod-lib_cmos_datetime.lst

CLEAN_MODULE_TARGETS += clean-module-datetime_mod-lib_cmos_datetime-extra.1

COMMANDFILES += cmd-datetime_mod-lib_cmos_datetime.lst
FSFILES += fs-datetime_mod-lib_cmos_datetime.lst
PARTTOOLFILES += parttool-datetime_mod-lib_cmos_datetime.lst
PARTMAPFILES += partmap-datetime_mod-lib_cmos_datetime.lst
HANDLERFILES += handler-datetime_mod-lib_cmos_datetime.lst
TERMINALFILES += terminal-datetime_mod-lib_cmos_datetime.lst
VIDEOFILES += video-datetime_mod-lib_cmos_datetime.lst

cmd-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh datetime > $@ || (rm -f $@; exit 1)

fs-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh datetime > $@ || (rm -f $@; exit 1)

parttool-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh datetime > $@ || (rm -f $@; exit 1)

partmap-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh datetime > $@ || (rm -f $@; exit 1)

handler-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh datetime > $@ || (rm -f $@; exit 1)

terminal-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh datetime > $@ || (rm -f $@; exit 1)

video-datetime_mod-lib_cmos_datetime.lst: lib/cmos_datetime.c $(lib/cmos_datetime.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datetime_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh datetime > $@ || (rm -f $@; exit 1)

datetime_mod_CFLAGS = $(COMMON_CFLAGS)
datetime_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For lsspd.mod
pkglib_MODULES += lsspd.mod
lsspd_mod_SOURCES = commands/mips/yeeloong/lsspd.c

clean-module-lsspd.mod.1:
	rm -f lsspd.mod mod-lsspd.o mod-lsspd.c pre-lsspd.o lsspd_mod-commands_mips_yeeloong_lsspd.o und-lsspd.lst

CLEAN_MODULE_TARGETS += clean-module-lsspd.mod.1

clean-module-lsspd.mod-symbol.1:
	rm -f def-lsspd.lst

CLEAN_MODULE_TARGETS += clean-module-lsspd.mod-symbol.1
DEFSYMFILES += def-lsspd.lst
mostlyclean-module-lsspd.mod.1:
	rm -f lsspd_mod-commands_mips_yeeloong_lsspd.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-lsspd.mod.1
UNDSYMFILES += und-lsspd.lst

ifeq ($(TARGET_NO_MODULES), yes)
lsspd.mod: pre-lsspd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(lsspd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-lsspd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
lsspd.mod: pre-lsspd.o mod-lsspd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(lsspd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-lsspd.o mod-lsspd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
lsspd.mod: pre-lsspd.o mod-lsspd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(lsspd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-lsspd.o mod-lsspd.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-lsspd.o: $(lsspd_mod_DEPENDENCIES) lsspd_mod-commands_mips_yeeloong_lsspd.o
	-rm -f $@
	$(TARGET_CC) $(lsspd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ lsspd_mod-commands_mips_yeeloong_lsspd.o

mod-lsspd.o: mod-lsspd.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(lsspd_mod_CFLAGS) -DGRUB_FILE=\"mod-lsspd.c\" -c -o $@ $<

mod-lsspd.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'lsspd' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-lsspd.lst: pre-lsspd.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 lsspd/' > $@
else
def-lsspd.lst: pre-lsspd.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 lsspd/' > $@
endif

und-lsspd.lst: pre-lsspd.o
	echo 'lsspd' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

lsspd_mod-commands_mips_yeeloong_lsspd.o: commands/mips/yeeloong/lsspd.c $(commands/mips/yeeloong/lsspd.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands/mips/yeeloong -I$(srcdir)/commands/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsspd_mod_CFLAGS) -DGRUB_FILE=\"commands/mips/yeeloong/lsspd.c\" -MD -c -o $@ $<
-include lsspd_mod-commands_mips_yeeloong_lsspd.d

clean-module-lsspd_mod-commands_mips_yeeloong_lsspd-extra.1:
	rm -f cmd-lsspd_mod-commands_mips_yeeloong_lsspd.lst fs-lsspd_mod-commands_mips_yeeloong_lsspd.lst partmap-lsspd_mod-commands_mips_yeeloong_lsspd.lst handler-lsspd_mod-commands_mips_yeeloong_lsspd.lst parttool-lsspd_mod-commands_mips_yeeloong_lsspd.lst video-lsspd_mod-commands_mips_yeeloong_lsspd.lst terminal-lsspd_mod-commands_mips_yeeloong_lsspd.lst

CLEAN_MODULE_TARGETS += clean-module-lsspd_mod-commands_mips_yeeloong_lsspd-extra.1

COMMANDFILES += cmd-lsspd_mod-commands_mips_yeeloong_lsspd.lst
FSFILES += fs-lsspd_mod-commands_mips_yeeloong_lsspd.lst
PARTTOOLFILES += parttool-lsspd_mod-commands_mips_yeeloong_lsspd.lst
PARTMAPFILES += partmap-lsspd_mod-commands_mips_yeeloong_lsspd.lst
HANDLERFILES += handler-lsspd_mod-commands_mips_yeeloong_lsspd.lst
TERMINALFILES += terminal-lsspd_mod-commands_mips_yeeloong_lsspd.lst
VIDEOFILES += video-lsspd_mod-commands_mips_yeeloong_lsspd.lst

cmd-lsspd_mod-commands_mips_yeeloong_lsspd.lst: commands/mips/yeeloong/lsspd.c $(commands/mips/yeeloong/lsspd.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/mips/yeeloong -I$(srcdir)/commands/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsspd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh lsspd > $@ || (rm -f $@; exit 1)

fs-lsspd_mod-commands_mips_yeeloong_lsspd.lst: commands/mips/yeeloong/lsspd.c $(commands/mips/yeeloong/lsspd.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands/mips/yeeloong -I$(srcdir)/commands/mips/yeeloong $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lsspd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh lsspd > $@ || (rm -f $@; exit 1)

parttool-lsspd_mod-commands_mips_yeeloong_lsspd.lst: commands/mips/yeeloong/lsspd.c $(commands/mips/yeeloong/lsspd.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands/mips/yeeloong -I$(srcdir)/commands/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsspd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh lsspd > $@ || (rm -f $@; exit 1)

partmap-lsspd_mod-commands_mips_yeeloong_lsspd.lst: commands/mips/yeeloong/lsspd.c $(commands/mips/yeeloong/lsspd.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands/mips/yeeloong -I$(srcdir)/commands/mips/yeeloong $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lsspd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh lsspd > $@ || (rm -f $@; exit 1)

handler-lsspd_mod-commands_mips_yeeloong_lsspd.lst: commands/mips/yeeloong/lsspd.c $(commands/mips/yeeloong/lsspd.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/mips/yeeloong -I$(srcdir)/commands/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsspd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh lsspd > $@ || (rm -f $@; exit 1)

terminal-lsspd_mod-commands_mips_yeeloong_lsspd.lst: commands/mips/yeeloong/lsspd.c $(commands/mips/yeeloong/lsspd.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands/mips/yeeloong -I$(srcdir)/commands/mips/yeeloong $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsspd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh lsspd > $@ || (rm -f $@; exit 1)

video-lsspd_mod-commands_mips_yeeloong_lsspd.lst: commands/mips/yeeloong/lsspd.c $(commands/mips/yeeloong/lsspd.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands/mips/yeeloong -I$(srcdir)/commands/mips/yeeloong $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lsspd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh lsspd > $@ || (rm -f $@; exit 1)

lsspd_mod_CFLAGS = $(COMMON_CFLAGS)
lsspd_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += linux.mod
linux_mod_SOURCES = loader/$(target_cpu)/linux.c

clean-module-linux.mod.1:
	rm -f linux.mod mod-linux.o mod-linux.c pre-linux.o linux_mod-loader___target_cpu__linux.o und-linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux.mod.1

clean-module-linux.mod-symbol.1:
	rm -f def-linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux.mod-symbol.1
DEFSYMFILES += def-linux.lst
mostlyclean-module-linux.mod.1:
	rm -f linux_mod-loader___target_cpu__linux.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-linux.mod.1
UNDSYMFILES += und-linux.lst

ifeq ($(TARGET_NO_MODULES), yes)
linux.mod: pre-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-linux.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
linux.mod: pre-linux.o mod-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-linux.o mod-linux.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
linux.mod: pre-linux.o mod-linux.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-linux.o mod-linux.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-linux.o: $(linux_mod_DEPENDENCIES) linux_mod-loader___target_cpu__linux.o
	-rm -f $@
	$(TARGET_CC) $(linux_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ linux_mod-loader___target_cpu__linux.o

mod-linux.o: mod-linux.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -DGRUB_FILE=\"mod-linux.c\" -c -o $@ $<

mod-linux.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'linux' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-linux.lst: pre-linux.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 linux/' > $@
else
def-linux.lst: pre-linux.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 linux/' > $@
endif

und-linux.lst: pre-linux.o
	echo 'linux' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

linux_mod-loader___target_cpu__linux.o: loader/$(target_cpu)/linux.c $(loader/$(target_cpu)/linux.c_DEPENDENCIES)
	$(TARGET_CC) -Iloader/$(target_cpu) -I$(srcdir)/loader/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -DGRUB_FILE=\"loader/$(target_cpu)/linux.c\" -MD -c -o $@ $<
-include linux_mod-loader___target_cpu__linux.d

clean-module-linux_mod-loader___target_cpu__linux-extra.1:
	rm -f cmd-linux_mod-loader___target_cpu__linux.lst fs-linux_mod-loader___target_cpu__linux.lst partmap-linux_mod-loader___target_cpu__linux.lst handler-linux_mod-loader___target_cpu__linux.lst parttool-linux_mod-loader___target_cpu__linux.lst video-linux_mod-loader___target_cpu__linux.lst terminal-linux_mod-loader___target_cpu__linux.lst

CLEAN_MODULE_TARGETS += clean-module-linux_mod-loader___target_cpu__linux-extra.1

COMMANDFILES += cmd-linux_mod-loader___target_cpu__linux.lst
FSFILES += fs-linux_mod-loader___target_cpu__linux.lst
PARTTOOLFILES += parttool-linux_mod-loader___target_cpu__linux.lst
PARTMAPFILES += partmap-linux_mod-loader___target_cpu__linux.lst
HANDLERFILES += handler-linux_mod-loader___target_cpu__linux.lst
TERMINALFILES += terminal-linux_mod-loader___target_cpu__linux.lst
VIDEOFILES += video-linux_mod-loader___target_cpu__linux.lst

cmd-linux_mod-loader___target_cpu__linux.lst: loader/$(target_cpu)/linux.c $(loader/$(target_cpu)/linux.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/$(target_cpu) -I$(srcdir)/loader/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh linux > $@ || (rm -f $@; exit 1)

fs-linux_mod-loader___target_cpu__linux.lst: loader/$(target_cpu)/linux.c $(loader/$(target_cpu)/linux.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iloader/$(target_cpu) -I$(srcdir)/loader/$(target_cpu) $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh linux > $@ || (rm -f $@; exit 1)

parttool-linux_mod-loader___target_cpu__linux.lst: loader/$(target_cpu)/linux.c $(loader/$(target_cpu)/linux.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iloader/$(target_cpu) -I$(srcdir)/loader/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh linux > $@ || (rm -f $@; exit 1)

partmap-linux_mod-loader___target_cpu__linux.lst: loader/$(target_cpu)/linux.c $(loader/$(target_cpu)/linux.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iloader/$(target_cpu) -I$(srcdir)/loader/$(target_cpu) $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh linux > $@ || (rm -f $@; exit 1)

handler-linux_mod-loader___target_cpu__linux.lst: loader/$(target_cpu)/linux.c $(loader/$(target_cpu)/linux.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iloader/$(target_cpu) -I$(srcdir)/loader/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh linux > $@ || (rm -f $@; exit 1)

terminal-linux_mod-loader___target_cpu__linux.lst: loader/$(target_cpu)/linux.c $(loader/$(target_cpu)/linux.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iloader/$(target_cpu) -I$(srcdir)/loader/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh linux > $@ || (rm -f $@; exit 1)

video-linux_mod-loader___target_cpu__linux.lst: loader/$(target_cpu)/linux.c $(loader/$(target_cpu)/linux.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iloader/$(target_cpu) -I$(srcdir)/loader/$(target_cpu) $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(linux_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh linux > $@ || (rm -f $@; exit 1)

linux_mod_CFLAGS = $(COMMON_CFLAGS)
linux_mod_ASFLAGS = $(COMMON_ASFLAGS)
linux_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For halt.mod.
pkglib_MODULES += halt.mod
halt_mod_SOURCES = commands/halt.c

clean-module-halt.mod.1:
	rm -f halt.mod mod-halt.o mod-halt.c pre-halt.o halt_mod-commands_halt.o und-halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt.mod.1

clean-module-halt.mod-symbol.1:
	rm -f def-halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt.mod-symbol.1
DEFSYMFILES += def-halt.lst
mostlyclean-module-halt.mod.1:
	rm -f halt_mod-commands_halt.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-halt.mod.1
UNDSYMFILES += und-halt.lst

ifeq ($(TARGET_NO_MODULES), yes)
halt.mod: pre-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-halt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
halt.mod: pre-halt.o mod-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-halt.o mod-halt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
halt.mod: pre-halt.o mod-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-halt.o mod-halt.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-halt.o: $(halt_mod_DEPENDENCIES) halt_mod-commands_halt.o
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ halt_mod-commands_halt.o

mod-halt.o: mod-halt.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -DGRUB_FILE=\"mod-halt.c\" -c -o $@ $<

mod-halt.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'halt' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-halt.lst: pre-halt.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 halt/' > $@
else
def-halt.lst: pre-halt.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 halt/' > $@
endif

und-halt.lst: pre-halt.o
	echo 'halt' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

halt_mod-commands_halt.o: commands/halt.c $(commands/halt.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -DGRUB_FILE=\"commands/halt.c\" -MD -c -o $@ $<
-include halt_mod-commands_halt.d

clean-module-halt_mod-commands_halt-extra.1:
	rm -f cmd-halt_mod-commands_halt.lst fs-halt_mod-commands_halt.lst partmap-halt_mod-commands_halt.lst handler-halt_mod-commands_halt.lst parttool-halt_mod-commands_halt.lst video-halt_mod-commands_halt.lst terminal-halt_mod-commands_halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt_mod-commands_halt-extra.1

COMMANDFILES += cmd-halt_mod-commands_halt.lst
FSFILES += fs-halt_mod-commands_halt.lst
PARTTOOLFILES += parttool-halt_mod-commands_halt.lst
PARTMAPFILES += partmap-halt_mod-commands_halt.lst
HANDLERFILES += handler-halt_mod-commands_halt.lst
TERMINALFILES += terminal-halt_mod-commands_halt.lst
VIDEOFILES += video-halt_mod-commands_halt.lst

cmd-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh halt > $@ || (rm -f $@; exit 1)

fs-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh halt > $@ || (rm -f $@; exit 1)

parttool-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh halt > $@ || (rm -f $@; exit 1)

partmap-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh halt > $@ || (rm -f $@; exit 1)

handler-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh halt > $@ || (rm -f $@; exit 1)

terminal-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh halt > $@ || (rm -f $@; exit 1)

video-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh halt > $@ || (rm -f $@; exit 1)

halt_mod_CFLAGS = $(COMMON_CFLAGS)
halt_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For usb.mod
pkglib_MODULES += usb.mod
usb_mod_SOURCES = bus/usb/usb.c bus/usb/usbtrans.c bus/usb/usbhub.c

clean-module-usb.mod.1:
	rm -f usb.mod mod-usb.o mod-usb.c pre-usb.o usb_mod-bus_usb_usb.o usb_mod-bus_usb_usbtrans.o usb_mod-bus_usb_usbhub.o und-usb.lst

CLEAN_MODULE_TARGETS += clean-module-usb.mod.1

clean-module-usb.mod-symbol.1:
	rm -f def-usb.lst

CLEAN_MODULE_TARGETS += clean-module-usb.mod-symbol.1
DEFSYMFILES += def-usb.lst
mostlyclean-module-usb.mod.1:
	rm -f usb_mod-bus_usb_usb.d usb_mod-bus_usb_usbtrans.d usb_mod-bus_usb_usbhub.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-usb.mod.1
UNDSYMFILES += und-usb.lst

ifeq ($(TARGET_NO_MODULES), yes)
usb.mod: pre-usb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usb.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
usb.mod: pre-usb.o mod-usb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usb.o mod-usb.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
usb.mod: pre-usb.o mod-usb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(usb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-usb.o mod-usb.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-usb.o: $(usb_mod_DEPENDENCIES) usb_mod-bus_usb_usb.o usb_mod-bus_usb_usbtrans.o usb_mod-bus_usb_usbhub.o
	-rm -f $@
	$(TARGET_CC) $(usb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ usb_mod-bus_usb_usb.o usb_mod-bus_usb_usbtrans.o usb_mod-bus_usb_usbhub.o

mod-usb.o: mod-usb.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -DGRUB_FILE=\"mod-usb.c\" -c -o $@ $<

mod-usb.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'usb' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-usb.lst: pre-usb.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 usb/' > $@
else
def-usb.lst: pre-usb.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 usb/' > $@
endif

und-usb.lst: pre-usb.o
	echo 'usb' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

usb_mod-bus_usb_usb.o: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -DGRUB_FILE=\"bus/usb/usb.c\" -MD -c -o $@ $<
-include usb_mod-bus_usb_usb.d

clean-module-usb_mod-bus_usb_usb-extra.1:
	rm -f cmd-usb_mod-bus_usb_usb.lst fs-usb_mod-bus_usb_usb.lst partmap-usb_mod-bus_usb_usb.lst handler-usb_mod-bus_usb_usb.lst parttool-usb_mod-bus_usb_usb.lst video-usb_mod-bus_usb_usb.lst terminal-usb_mod-bus_usb_usb.lst

CLEAN_MODULE_TARGETS += clean-module-usb_mod-bus_usb_usb-extra.1

COMMANDFILES += cmd-usb_mod-bus_usb_usb.lst
FSFILES += fs-usb_mod-bus_usb_usb.lst
PARTTOOLFILES += parttool-usb_mod-bus_usb_usb.lst
PARTMAPFILES += partmap-usb_mod-bus_usb_usb.lst
HANDLERFILES += handler-usb_mod-bus_usb_usb.lst
TERMINALFILES += terminal-usb_mod-bus_usb_usb.lst
VIDEOFILES += video-usb_mod-bus_usb_usb.lst

cmd-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh usb > $@ || (rm -f $@; exit 1)

fs-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh usb > $@ || (rm -f $@; exit 1)

parttool-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh usb > $@ || (rm -f $@; exit 1)

partmap-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh usb > $@ || (rm -f $@; exit 1)

handler-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh usb > $@ || (rm -f $@; exit 1)

terminal-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh usb > $@ || (rm -f $@; exit 1)

video-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh usb > $@ || (rm -f $@; exit 1)

usb_mod-bus_usb_usbtrans.o: bus/usb/usbtrans.c $(bus/usb/usbtrans.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -DGRUB_FILE=\"bus/usb/usbtrans.c\" -MD -c -o $@ $<
-include usb_mod-bus_usb_usbtrans.d

clean-module-usb_mod-bus_usb_usbtrans-extra.1:
	rm -f cmd-usb_mod-bus_usb_usbtrans.lst fs-usb_mod-bus_usb_usbtrans.lst partmap-usb_mod-bus_usb_usbtrans.lst handler-usb_mod-bus_usb_usbtrans.lst parttool-usb_mod-bus_usb_usbtrans.lst video-usb_mod-bus_usb_usbtrans.lst terminal-usb_mod-bus_usb_usbtrans.lst

CLEAN_MODULE_TARGETS += clean-module-usb_mod-bus_usb_usbtrans-extra.1

COMMANDFILES += cmd-usb_mod-bus_usb_usbtrans.lst
FSFILES += fs-usb_mod-bus_usb_usbtrans.lst
PARTTOOLFILES += parttool-usb_mod-bus_usb_usbtrans.lst
PARTMAPFILES += partmap-usb_mod-bus_usb_usbtrans.lst
HANDLERFILES += handler-usb_mod-bus_usb_usbtrans.lst
TERMINALFILES += terminal-usb_mod-bus_usb_usbtrans.lst
VIDEOFILES += video-usb_mod-bus_usb_usbtrans.lst

cmd-usb_mod-bus_usb_usbtrans.lst: bus/usb/usbtrans.c $(bus/usb/usbtrans.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh usb > $@ || (rm -f $@; exit 1)

fs-usb_mod-bus_usb_usbtrans.lst: bus/usb/usbtrans.c $(bus/usb/usbtrans.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh usb > $@ || (rm -f $@; exit 1)

parttool-usb_mod-bus_usb_usbtrans.lst: bus/usb/usbtrans.c $(bus/usb/usbtrans.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh usb > $@ || (rm -f $@; exit 1)

partmap-usb_mod-bus_usb_usbtrans.lst: bus/usb/usbtrans.c $(bus/usb/usbtrans.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh usb > $@ || (rm -f $@; exit 1)

handler-usb_mod-bus_usb_usbtrans.lst: bus/usb/usbtrans.c $(bus/usb/usbtrans.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh usb > $@ || (rm -f $@; exit 1)

terminal-usb_mod-bus_usb_usbtrans.lst: bus/usb/usbtrans.c $(bus/usb/usbtrans.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh usb > $@ || (rm -f $@; exit 1)

video-usb_mod-bus_usb_usbtrans.lst: bus/usb/usbtrans.c $(bus/usb/usbtrans.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh usb > $@ || (rm -f $@; exit 1)

usb_mod-bus_usb_usbhub.o: bus/usb/usbhub.c $(bus/usb/usbhub.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -DGRUB_FILE=\"bus/usb/usbhub.c\" -MD -c -o $@ $<
-include usb_mod-bus_usb_usbhub.d

clean-module-usb_mod-bus_usb_usbhub-extra.1:
	rm -f cmd-usb_mod-bus_usb_usbhub.lst fs-usb_mod-bus_usb_usbhub.lst partmap-usb_mod-bus_usb_usbhub.lst handler-usb_mod-bus_usb_usbhub.lst parttool-usb_mod-bus_usb_usbhub.lst video-usb_mod-bus_usb_usbhub.lst terminal-usb_mod-bus_usb_usbhub.lst

CLEAN_MODULE_TARGETS += clean-module-usb_mod-bus_usb_usbhub-extra.1

COMMANDFILES += cmd-usb_mod-bus_usb_usbhub.lst
FSFILES += fs-usb_mod-bus_usb_usbhub.lst
PARTTOOLFILES += parttool-usb_mod-bus_usb_usbhub.lst
PARTMAPFILES += partmap-usb_mod-bus_usb_usbhub.lst
HANDLERFILES += handler-usb_mod-bus_usb_usbhub.lst
TERMINALFILES += terminal-usb_mod-bus_usb_usbhub.lst
VIDEOFILES += video-usb_mod-bus_usb_usbhub.lst

cmd-usb_mod-bus_usb_usbhub.lst: bus/usb/usbhub.c $(bus/usb/usbhub.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh usb > $@ || (rm -f $@; exit 1)

fs-usb_mod-bus_usb_usbhub.lst: bus/usb/usbhub.c $(bus/usb/usbhub.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh usb > $@ || (rm -f $@; exit 1)

parttool-usb_mod-bus_usb_usbhub.lst: bus/usb/usbhub.c $(bus/usb/usbhub.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh usb > $@ || (rm -f $@; exit 1)

partmap-usb_mod-bus_usb_usbhub.lst: bus/usb/usbhub.c $(bus/usb/usbhub.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh usb > $@ || (rm -f $@; exit 1)

handler-usb_mod-bus_usb_usbhub.lst: bus/usb/usbhub.c $(bus/usb/usbhub.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh usb > $@ || (rm -f $@; exit 1)

terminal-usb_mod-bus_usb_usbhub.lst: bus/usb/usbhub.c $(bus/usb/usbhub.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh usb > $@ || (rm -f $@; exit 1)

video-usb_mod-bus_usb_usbhub.lst: bus/usb/usbhub.c $(bus/usb/usbhub.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh usb > $@ || (rm -f $@; exit 1)

usb_mod_CFLAGS = $(COMMON_CFLAGS)
usb_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For usbtest.mod
pkglib_MODULES += usbtest.mod
usbtest_mod_SOURCES = commands/usbtest.c

clean-module-usbtest.mod.1:
	rm -f usbtest.mod mod-usbtest.o mod-usbtest.c pre-usbtest.o usbtest_mod-commands_usbtest.o und-usbtest.lst

CLEAN_MODULE_TARGETS += clean-module-usbtest.mod.1

clean-module-usbtest.mod-symbol.1:
	rm -f def-usbtest.lst

CLEAN_MODULE_TARGETS += clean-module-usbtest.mod-symbol.1
DEFSYMFILES += def-usbtest.lst
mostlyclean-module-usbtest.mod.1:
	rm -f usbtest_mod-commands_usbtest.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-usbtest.mod.1
UNDSYMFILES += und-usbtest.lst

ifeq ($(TARGET_NO_MODULES), yes)
usbtest.mod: pre-usbtest.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usbtest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usbtest.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
usbtest.mod: pre-usbtest.o mod-usbtest.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usbtest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usbtest.o mod-usbtest.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
usbtest.mod: pre-usbtest.o mod-usbtest.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(usbtest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-usbtest.o mod-usbtest.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-usbtest.o: $(usbtest_mod_DEPENDENCIES) usbtest_mod-commands_usbtest.o
	-rm -f $@
	$(TARGET_CC) $(usbtest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ usbtest_mod-commands_usbtest.o

mod-usbtest.o: mod-usbtest.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -DGRUB_FILE=\"mod-usbtest.c\" -c -o $@ $<

mod-usbtest.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'usbtest' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-usbtest.lst: pre-usbtest.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 usbtest/' > $@
else
def-usbtest.lst: pre-usbtest.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 usbtest/' > $@
endif

und-usbtest.lst: pre-usbtest.o
	echo 'usbtest' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

usbtest_mod-commands_usbtest.o: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -DGRUB_FILE=\"commands/usbtest.c\" -MD -c -o $@ $<
-include usbtest_mod-commands_usbtest.d

clean-module-usbtest_mod-commands_usbtest-extra.1:
	rm -f cmd-usbtest_mod-commands_usbtest.lst fs-usbtest_mod-commands_usbtest.lst partmap-usbtest_mod-commands_usbtest.lst handler-usbtest_mod-commands_usbtest.lst parttool-usbtest_mod-commands_usbtest.lst video-usbtest_mod-commands_usbtest.lst terminal-usbtest_mod-commands_usbtest.lst

CLEAN_MODULE_TARGETS += clean-module-usbtest_mod-commands_usbtest-extra.1

COMMANDFILES += cmd-usbtest_mod-commands_usbtest.lst
FSFILES += fs-usbtest_mod-commands_usbtest.lst
PARTTOOLFILES += parttool-usbtest_mod-commands_usbtest.lst
PARTMAPFILES += partmap-usbtest_mod-commands_usbtest.lst
HANDLERFILES += handler-usbtest_mod-commands_usbtest.lst
TERMINALFILES += terminal-usbtest_mod-commands_usbtest.lst
VIDEOFILES += video-usbtest_mod-commands_usbtest.lst

cmd-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh usbtest > $@ || (rm -f $@; exit 1)

fs-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh usbtest > $@ || (rm -f $@; exit 1)

parttool-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh usbtest > $@ || (rm -f $@; exit 1)

partmap-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh usbtest > $@ || (rm -f $@; exit 1)

handler-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh usbtest > $@ || (rm -f $@; exit 1)

terminal-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh usbtest > $@ || (rm -f $@; exit 1)

video-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh usbtest > $@ || (rm -f $@; exit 1)

usbtest_mod_CFLAGS = $(COMMON_CFLAGS)
usbtest_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For ohci.mod
pkglib_MODULES += ohci.mod
ohci_mod_SOURCES = bus/usb/ohci.c

clean-module-ohci.mod.1:
	rm -f ohci.mod mod-ohci.o mod-ohci.c pre-ohci.o ohci_mod-bus_usb_ohci.o und-ohci.lst

CLEAN_MODULE_TARGETS += clean-module-ohci.mod.1

clean-module-ohci.mod-symbol.1:
	rm -f def-ohci.lst

CLEAN_MODULE_TARGETS += clean-module-ohci.mod-symbol.1
DEFSYMFILES += def-ohci.lst
mostlyclean-module-ohci.mod.1:
	rm -f ohci_mod-bus_usb_ohci.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-ohci.mod.1
UNDSYMFILES += und-ohci.lst

ifeq ($(TARGET_NO_MODULES), yes)
ohci.mod: pre-ohci.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ohci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ohci.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
ohci.mod: pre-ohci.o mod-ohci.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ohci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ohci.o mod-ohci.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ohci.mod: pre-ohci.o mod-ohci.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(ohci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-ohci.o mod-ohci.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-ohci.o: $(ohci_mod_DEPENDENCIES) ohci_mod-bus_usb_ohci.o
	-rm -f $@
	$(TARGET_CC) $(ohci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ ohci_mod-bus_usb_ohci.o

mod-ohci.o: mod-ohci.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(ohci_mod_CFLAGS) -DGRUB_FILE=\"mod-ohci.c\" -c -o $@ $<

mod-ohci.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'ohci' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-ohci.lst: pre-ohci.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 ohci/' > $@
else
def-ohci.lst: pre-ohci.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 ohci/' > $@
endif

und-ohci.lst: pre-ohci.o
	echo 'ohci' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

ohci_mod-bus_usb_ohci.o: bus/usb/ohci.c $(bus/usb/ohci.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ohci_mod_CFLAGS) -DGRUB_FILE=\"bus/usb/ohci.c\" -MD -c -o $@ $<
-include ohci_mod-bus_usb_ohci.d

clean-module-ohci_mod-bus_usb_ohci-extra.1:
	rm -f cmd-ohci_mod-bus_usb_ohci.lst fs-ohci_mod-bus_usb_ohci.lst partmap-ohci_mod-bus_usb_ohci.lst handler-ohci_mod-bus_usb_ohci.lst parttool-ohci_mod-bus_usb_ohci.lst video-ohci_mod-bus_usb_ohci.lst terminal-ohci_mod-bus_usb_ohci.lst

CLEAN_MODULE_TARGETS += clean-module-ohci_mod-bus_usb_ohci-extra.1

COMMANDFILES += cmd-ohci_mod-bus_usb_ohci.lst
FSFILES += fs-ohci_mod-bus_usb_ohci.lst
PARTTOOLFILES += parttool-ohci_mod-bus_usb_ohci.lst
PARTMAPFILES += partmap-ohci_mod-bus_usb_ohci.lst
HANDLERFILES += handler-ohci_mod-bus_usb_ohci.lst
TERMINALFILES += terminal-ohci_mod-bus_usb_ohci.lst
VIDEOFILES += video-ohci_mod-bus_usb_ohci.lst

cmd-ohci_mod-bus_usb_ohci.lst: bus/usb/ohci.c $(bus/usb/ohci.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ohci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh ohci > $@ || (rm -f $@; exit 1)

fs-ohci_mod-bus_usb_ohci.lst: bus/usb/ohci.c $(bus/usb/ohci.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ohci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh ohci > $@ || (rm -f $@; exit 1)

parttool-ohci_mod-bus_usb_ohci.lst: bus/usb/ohci.c $(bus/usb/ohci.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ohci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh ohci > $@ || (rm -f $@; exit 1)

partmap-ohci_mod-bus_usb_ohci.lst: bus/usb/ohci.c $(bus/usb/ohci.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ohci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh ohci > $@ || (rm -f $@; exit 1)

handler-ohci_mod-bus_usb_ohci.lst: bus/usb/ohci.c $(bus/usb/ohci.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ohci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh ohci > $@ || (rm -f $@; exit 1)

terminal-ohci_mod-bus_usb_ohci.lst: bus/usb/ohci.c $(bus/usb/ohci.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ohci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh ohci > $@ || (rm -f $@; exit 1)

video-ohci_mod-bus_usb_ohci.lst: bus/usb/ohci.c $(bus/usb/ohci.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ohci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh ohci > $@ || (rm -f $@; exit 1)

ohci_mod_CFLAGS = $(COMMON_CFLAGS)
ohci_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For usbms.mod
pkglib_MODULES += usbms.mod
usbms_mod_SOURCES = disk/usbms.c

clean-module-usbms.mod.1:
	rm -f usbms.mod mod-usbms.o mod-usbms.c pre-usbms.o usbms_mod-disk_usbms.o und-usbms.lst

CLEAN_MODULE_TARGETS += clean-module-usbms.mod.1

clean-module-usbms.mod-symbol.1:
	rm -f def-usbms.lst

CLEAN_MODULE_TARGETS += clean-module-usbms.mod-symbol.1
DEFSYMFILES += def-usbms.lst
mostlyclean-module-usbms.mod.1:
	rm -f usbms_mod-disk_usbms.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-usbms.mod.1
UNDSYMFILES += und-usbms.lst

ifeq ($(TARGET_NO_MODULES), yes)
usbms.mod: pre-usbms.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usbms_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usbms.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
usbms.mod: pre-usbms.o mod-usbms.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usbms_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usbms.o mod-usbms.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
usbms.mod: pre-usbms.o mod-usbms.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(usbms_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-usbms.o mod-usbms.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-usbms.o: $(usbms_mod_DEPENDENCIES) usbms_mod-disk_usbms.o
	-rm -f $@
	$(TARGET_CC) $(usbms_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ usbms_mod-disk_usbms.o

mod-usbms.o: mod-usbms.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -DGRUB_FILE=\"mod-usbms.c\" -c -o $@ $<

mod-usbms.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'usbms' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-usbms.lst: pre-usbms.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 usbms/' > $@
else
def-usbms.lst: pre-usbms.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 usbms/' > $@
endif

und-usbms.lst: pre-usbms.o
	echo 'usbms' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

usbms_mod-disk_usbms.o: disk/usbms.c $(disk/usbms.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -DGRUB_FILE=\"disk/usbms.c\" -MD -c -o $@ $<
-include usbms_mod-disk_usbms.d

clean-module-usbms_mod-disk_usbms-extra.1:
	rm -f cmd-usbms_mod-disk_usbms.lst fs-usbms_mod-disk_usbms.lst partmap-usbms_mod-disk_usbms.lst handler-usbms_mod-disk_usbms.lst parttool-usbms_mod-disk_usbms.lst video-usbms_mod-disk_usbms.lst terminal-usbms_mod-disk_usbms.lst

CLEAN_MODULE_TARGETS += clean-module-usbms_mod-disk_usbms-extra.1

COMMANDFILES += cmd-usbms_mod-disk_usbms.lst
FSFILES += fs-usbms_mod-disk_usbms.lst
PARTTOOLFILES += parttool-usbms_mod-disk_usbms.lst
PARTMAPFILES += partmap-usbms_mod-disk_usbms.lst
HANDLERFILES += handler-usbms_mod-disk_usbms.lst
TERMINALFILES += terminal-usbms_mod-disk_usbms.lst
VIDEOFILES += video-usbms_mod-disk_usbms.lst

cmd-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh usbms > $@ || (rm -f $@; exit 1)

fs-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh usbms > $@ || (rm -f $@; exit 1)

parttool-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh usbms > $@ || (rm -f $@; exit 1)

partmap-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh usbms > $@ || (rm -f $@; exit 1)

handler-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh usbms > $@ || (rm -f $@; exit 1)

terminal-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh usbms > $@ || (rm -f $@; exit 1)

video-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh usbms > $@ || (rm -f $@; exit 1)

usbms_mod_CFLAGS = $(COMMON_CFLAGS)
usbms_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For usb_keyboard.mod
pkglib_MODULES += usb_keyboard.mod
usb_keyboard_mod_SOURCES = term/usb_keyboard.c

clean-module-usb_keyboard.mod.1:
	rm -f usb_keyboard.mod mod-usb_keyboard.o mod-usb_keyboard.c pre-usb_keyboard.o usb_keyboard_mod-term_usb_keyboard.o und-usb_keyboard.lst

CLEAN_MODULE_TARGETS += clean-module-usb_keyboard.mod.1

clean-module-usb_keyboard.mod-symbol.1:
	rm -f def-usb_keyboard.lst

CLEAN_MODULE_TARGETS += clean-module-usb_keyboard.mod-symbol.1
DEFSYMFILES += def-usb_keyboard.lst
mostlyclean-module-usb_keyboard.mod.1:
	rm -f usb_keyboard_mod-term_usb_keyboard.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-usb_keyboard.mod.1
UNDSYMFILES += und-usb_keyboard.lst

ifeq ($(TARGET_NO_MODULES), yes)
usb_keyboard.mod: pre-usb_keyboard.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usb_keyboard_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usb_keyboard.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
usb_keyboard.mod: pre-usb_keyboard.o mod-usb_keyboard.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usb_keyboard_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usb_keyboard.o mod-usb_keyboard.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
usb_keyboard.mod: pre-usb_keyboard.o mod-usb_keyboard.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(usb_keyboard_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-usb_keyboard.o mod-usb_keyboard.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-usb_keyboard.o: $(usb_keyboard_mod_DEPENDENCIES) usb_keyboard_mod-term_usb_keyboard.o
	-rm -f $@
	$(TARGET_CC) $(usb_keyboard_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ usb_keyboard_mod-term_usb_keyboard.o

mod-usb_keyboard.o: mod-usb_keyboard.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(usb_keyboard_mod_CFLAGS) -DGRUB_FILE=\"mod-usb_keyboard.c\" -c -o $@ $<

mod-usb_keyboard.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'usb_keyboard' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-usb_keyboard.lst: pre-usb_keyboard.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 usb_keyboard/' > $@
else
def-usb_keyboard.lst: pre-usb_keyboard.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 usb_keyboard/' > $@
endif

und-usb_keyboard.lst: pre-usb_keyboard.o
	echo 'usb_keyboard' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

usb_keyboard_mod-term_usb_keyboard.o: term/usb_keyboard.c $(term/usb_keyboard.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_keyboard_mod_CFLAGS) -DGRUB_FILE=\"term/usb_keyboard.c\" -MD -c -o $@ $<
-include usb_keyboard_mod-term_usb_keyboard.d

clean-module-usb_keyboard_mod-term_usb_keyboard-extra.1:
	rm -f cmd-usb_keyboard_mod-term_usb_keyboard.lst fs-usb_keyboard_mod-term_usb_keyboard.lst partmap-usb_keyboard_mod-term_usb_keyboard.lst handler-usb_keyboard_mod-term_usb_keyboard.lst parttool-usb_keyboard_mod-term_usb_keyboard.lst video-usb_keyboard_mod-term_usb_keyboard.lst terminal-usb_keyboard_mod-term_usb_keyboard.lst

CLEAN_MODULE_TARGETS += clean-module-usb_keyboard_mod-term_usb_keyboard-extra.1

COMMANDFILES += cmd-usb_keyboard_mod-term_usb_keyboard.lst
FSFILES += fs-usb_keyboard_mod-term_usb_keyboard.lst
PARTTOOLFILES += parttool-usb_keyboard_mod-term_usb_keyboard.lst
PARTMAPFILES += partmap-usb_keyboard_mod-term_usb_keyboard.lst
HANDLERFILES += handler-usb_keyboard_mod-term_usb_keyboard.lst
TERMINALFILES += terminal-usb_keyboard_mod-term_usb_keyboard.lst
VIDEOFILES += video-usb_keyboard_mod-term_usb_keyboard.lst

cmd-usb_keyboard_mod-term_usb_keyboard.lst: term/usb_keyboard.c $(term/usb_keyboard.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_keyboard_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh usb_keyboard > $@ || (rm -f $@; exit 1)

fs-usb_keyboard_mod-term_usb_keyboard.lst: term/usb_keyboard.c $(term/usb_keyboard.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_keyboard_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh usb_keyboard > $@ || (rm -f $@; exit 1)

parttool-usb_keyboard_mod-term_usb_keyboard.lst: term/usb_keyboard.c $(term/usb_keyboard.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_keyboard_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh usb_keyboard > $@ || (rm -f $@; exit 1)

partmap-usb_keyboard_mod-term_usb_keyboard.lst: term/usb_keyboard.c $(term/usb_keyboard.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_keyboard_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh usb_keyboard > $@ || (rm -f $@; exit 1)

handler-usb_keyboard_mod-term_usb_keyboard.lst: term/usb_keyboard.c $(term/usb_keyboard.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_keyboard_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh usb_keyboard > $@ || (rm -f $@; exit 1)

terminal-usb_keyboard_mod-term_usb_keyboard.lst: term/usb_keyboard.c $(term/usb_keyboard.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_keyboard_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh usb_keyboard > $@ || (rm -f $@; exit 1)

video-usb_keyboard_mod-term_usb_keyboard.lst: term/usb_keyboard.c $(term/usb_keyboard.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_keyboard_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh usb_keyboard > $@ || (rm -f $@; exit 1)

usb_keyboard_mod_CFLAGS = $(COMMON_CFLAGS)
usb_keyboard_mod_LDFLAGS = $(COMMON_LDFLAGS)

sbin_SCRIPTS += grub-install
grub_install_SOURCES = util/grub-install.in
CLEANFILES += grub-install

grub-install: util/grub-install.in $(util/grub-install.in_DEPENDENCIES) config.status
	./config.status --file=-:util/grub-install.in | sed -e 's,@pkglib_DATA@,$(pkglib_DATA),g' > $@
	chmod +x $@

CLEANFILES += kernel.img $(kernel_img_OBJECTS)
ifeq ($(kernel_img_RELOCATABLE),yes)
kernel.img: $(kernel_img_DEPENDENCIES) $(kernel_img_OBJECTS)
	$(TARGET_CC) -Wl,-r,-d -o $@ $(kernel_img_OBJECTS) $(TARGET_LDFLAGS) $(kernel_img_LDFLAGS)
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K start -R .note -R .comment $@; fi
else
kernel.img: $(kernel_img_DEPENDENCIES) $(kernel_img_OBJECTS)
	$(TARGET_CC) -o $@ $(kernel_img_OBJECTS) $(TARGET_LDFLAGS) $(kernel_img_LDFLAGS)
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) -R .rel.dyn -R .reginfo -R .note -R .comment $@; fi
endif

