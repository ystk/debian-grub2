# -*- makefile -*-
# Generated by genmk.rb, please don't edit!

kernel_img_RELOCATABLE = yes
pkglib_PROGRAMS = kernel.img
kernel_img_SOURCES = kern/device.c kern/disk.c kern/dl.c kern/env.c	\
	kern/err.c kern/list.c kern/command.c		\
	kern/corecmd.c kern/file.c kern/fs.c kern/main.c kern/misc.c	\
	kern/parser.c kern/partition.c kern/term.c			\
	kern/rescue_reader.c kern/rescue_parser.c			\
									\
	kern/emu/main.c kern/emu/mm.c kern/emu/misc.c			\
	kern/emu/getroot.c kern/emu/time.c kern/emu/hostdisk.c		\
	kern/emu/hostfs.c kern/emu/console.c				\
									\
	gnulib/progname.c disk/host.c
MOSTLYCLEANFILES += kernel_img-kern_device.d kernel_img-kern_disk.d kernel_img-kern_dl.d kernel_img-kern_env.d kernel_img-kern_err.d kernel_img-kern_list.d kernel_img-kern_command.d kernel_img-kern_corecmd.d kernel_img-kern_file.d kernel_img-kern_fs.d kernel_img-kern_main.d kernel_img-kern_misc.d kernel_img-kern_parser.d kernel_img-kern_partition.d kernel_img-kern_term.d kernel_img-kern_rescue_reader.d kernel_img-kern_rescue_parser.d kernel_img-kern_emu_main.d kernel_img-kern_emu_mm.d kernel_img-kern_emu_misc.d kernel_img-kern_emu_getroot.d kernel_img-kern_emu_time.d kernel_img-kern_emu_hostdisk.d kernel_img-kern_emu_hostfs.d kernel_img-kern_emu_console.d kernel_img-gnulib_progname.d kernel_img-disk_host.d

kernel_img-kern_device.o: kern/device.c $(kern/device.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/device.c\" -MD -c -o $@ $<

-include kernel_img-kern_device.d

kernel_img_OBJECTS += kernel_img-kern_device.o
kernel_img-kern_disk.o: kern/disk.c $(kern/disk.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/disk.c\" -MD -c -o $@ $<

-include kernel_img-kern_disk.d

kernel_img_OBJECTS += kernel_img-kern_disk.o
kernel_img-kern_dl.o: kern/dl.c $(kern/dl.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/dl.c\" -MD -c -o $@ $<

-include kernel_img-kern_dl.d

kernel_img_OBJECTS += kernel_img-kern_dl.o
kernel_img-kern_env.o: kern/env.c $(kern/env.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/env.c\" -MD -c -o $@ $<

-include kernel_img-kern_env.d

kernel_img_OBJECTS += kernel_img-kern_env.o
kernel_img-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<

-include kernel_img-kern_err.d

kernel_img_OBJECTS += kernel_img-kern_err.o
kernel_img-kern_list.o: kern/list.c $(kern/list.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/list.c\" -MD -c -o $@ $<

-include kernel_img-kern_list.d

kernel_img_OBJECTS += kernel_img-kern_list.o
kernel_img-kern_command.o: kern/command.c $(kern/command.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/command.c\" -MD -c -o $@ $<

-include kernel_img-kern_command.d

kernel_img_OBJECTS += kernel_img-kern_command.o
kernel_img-kern_corecmd.o: kern/corecmd.c $(kern/corecmd.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/corecmd.c\" -MD -c -o $@ $<

-include kernel_img-kern_corecmd.d

kernel_img_OBJECTS += kernel_img-kern_corecmd.o
kernel_img-kern_file.o: kern/file.c $(kern/file.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/file.c\" -MD -c -o $@ $<

-include kernel_img-kern_file.d

kernel_img_OBJECTS += kernel_img-kern_file.o
kernel_img-kern_fs.o: kern/fs.c $(kern/fs.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/fs.c\" -MD -c -o $@ $<

-include kernel_img-kern_fs.d

kernel_img_OBJECTS += kernel_img-kern_fs.o
kernel_img-kern_main.o: kern/main.c $(kern/main.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/main.c\" -MD -c -o $@ $<

-include kernel_img-kern_main.d

kernel_img_OBJECTS += kernel_img-kern_main.o
kernel_img-kern_misc.o: kern/misc.c $(kern/misc.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/misc.c\" -MD -c -o $@ $<

-include kernel_img-kern_misc.d

kernel_img_OBJECTS += kernel_img-kern_misc.o
kernel_img-kern_parser.o: kern/parser.c $(kern/parser.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/parser.c\" -MD -c -o $@ $<

-include kernel_img-kern_parser.d

kernel_img_OBJECTS += kernel_img-kern_parser.o
kernel_img-kern_partition.o: kern/partition.c $(kern/partition.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/partition.c\" -MD -c -o $@ $<

-include kernel_img-kern_partition.d

kernel_img_OBJECTS += kernel_img-kern_partition.o
kernel_img-kern_term.o: kern/term.c $(kern/term.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/term.c\" -MD -c -o $@ $<

-include kernel_img-kern_term.d

kernel_img_OBJECTS += kernel_img-kern_term.o
kernel_img-kern_rescue_reader.o: kern/rescue_reader.c $(kern/rescue_reader.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/rescue_reader.c\" -MD -c -o $@ $<

-include kernel_img-kern_rescue_reader.d

kernel_img_OBJECTS += kernel_img-kern_rescue_reader.o
kernel_img-kern_rescue_parser.o: kern/rescue_parser.c $(kern/rescue_parser.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/rescue_parser.c\" -MD -c -o $@ $<

-include kernel_img-kern_rescue_parser.d

kernel_img_OBJECTS += kernel_img-kern_rescue_parser.o
kernel_img-kern_emu_main.o: kern/emu/main.c $(kern/emu/main.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/emu -I$(srcdir)/kern/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/emu/main.c\" -MD -c -o $@ $<

-include kernel_img-kern_emu_main.d

kernel_img_OBJECTS += kernel_img-kern_emu_main.o
kernel_img-kern_emu_mm.o: kern/emu/mm.c $(kern/emu/mm.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/emu -I$(srcdir)/kern/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/emu/mm.c\" -MD -c -o $@ $<

-include kernel_img-kern_emu_mm.d

kernel_img_OBJECTS += kernel_img-kern_emu_mm.o
kernel_img-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/emu -I$(srcdir)/kern/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<

-include kernel_img-kern_emu_misc.d

kernel_img_OBJECTS += kernel_img-kern_emu_misc.o
kernel_img-kern_emu_getroot.o: kern/emu/getroot.c $(kern/emu/getroot.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/emu -I$(srcdir)/kern/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/emu/getroot.c\" -MD -c -o $@ $<

-include kernel_img-kern_emu_getroot.d

kernel_img_OBJECTS += kernel_img-kern_emu_getroot.o
kernel_img-kern_emu_time.o: kern/emu/time.c $(kern/emu/time.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/emu -I$(srcdir)/kern/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/emu/time.c\" -MD -c -o $@ $<

-include kernel_img-kern_emu_time.d

kernel_img_OBJECTS += kernel_img-kern_emu_time.o
kernel_img-kern_emu_hostdisk.o: kern/emu/hostdisk.c $(kern/emu/hostdisk.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/emu -I$(srcdir)/kern/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/emu/hostdisk.c\" -MD -c -o $@ $<

-include kernel_img-kern_emu_hostdisk.d

kernel_img_OBJECTS += kernel_img-kern_emu_hostdisk.o
kernel_img-kern_emu_hostfs.o: kern/emu/hostfs.c $(kern/emu/hostfs.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/emu -I$(srcdir)/kern/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/emu/hostfs.c\" -MD -c -o $@ $<

-include kernel_img-kern_emu_hostfs.d

kernel_img_OBJECTS += kernel_img-kern_emu_hostfs.o
kernel_img-kern_emu_console.o: kern/emu/console.c $(kern/emu/console.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/emu -I$(srcdir)/kern/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/emu/console.c\" -MD -c -o $@ $<

-include kernel_img-kern_emu_console.d

kernel_img_OBJECTS += kernel_img-kern_emu_console.o
kernel_img-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(TARGET_CC) -Ignulib -I$(srcdir)/gnulib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<

-include kernel_img-gnulib_progname.d

kernel_img_OBJECTS += kernel_img-gnulib_progname.o
kernel_img-disk_host.o: disk/host.c $(disk/host.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"disk/host.c\" -MD -c -o $@ $<

-include kernel_img-disk_host.d

kernel_img_OBJECTS += kernel_img-disk_host.o
kernel_img_HEADERS += datetime.h emu/misc.h
kernel_img_CFLAGS = $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) -Wno-char-subscripts -Wno-unused -Wno-deprecated-declarations -Wno-undef -I$(srcdir)/gnulib
kernel_img_LDFLAGS = $(COMMON_LDFLAGS)
TARGET_NO_STRIP = yes

ifneq ($(TARGET_NO_MODULES), yes)
kernel_img_SOURCES += symlist.c kern/$(target_cpu)/dl.c
MOSTLYCLEANFILES += kernel_img-symlist.d kernel_img-kern___target_cpu__dl.d

kernel_img-symlist.o: symlist.c $(symlist.c_DEPENDENCIES)
	$(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"symlist.c\" -MD -c -o $@ $<

-include kernel_img-symlist.d

kernel_img_OBJECTS += kernel_img-symlist.o
kernel_img-kern___target_cpu__dl.o: kern/$(target_cpu)/dl.c $(kern/$(target_cpu)/dl.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu) -I$(srcdir)/kern/$(target_cpu) $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/dl.c\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu__dl.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu__dl.o
else
kernel_img_SOURCES += grub_emu_init.c
MOSTLYCLEANFILES += kernel_img-grub_emu_init.d

kernel_img-grub_emu_init.o: grub_emu_init.c $(grub_emu_init.c_DEPENDENCIES)
	$(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(kernel_img_CFLAGS) -DGRUB_FILE=\"grub_emu_init.c\" -MD -c -o $@ $<

-include kernel_img-grub_emu_init.d

kernel_img_OBJECTS += kernel_img-grub_emu_init.o
endif
ifneq ($(target_cpu), i386)
ifneq ($(target_cpu), x86_64)
kernel_img_SOURCES += kern/$(target_cpu)/cache.S
MOSTLYCLEANFILES += kernel_img-kern___target_cpu__cache.d

kernel_img-kern___target_cpu__cache.o: kern/$(target_cpu)/cache.S $(kern/$(target_cpu)/cache.S_DEPENDENCIES)
	$(TARGET_CC) -Ikern/$(target_cpu) -I$(srcdir)/kern/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(kernel_img_ASFLAGS) -DGRUB_FILE=\"kern/$(target_cpu)/cache.S\" -MD -c -o $@ $<

-include kernel_img-kern___target_cpu__cache.d

kernel_img_OBJECTS += kernel_img-kern___target_cpu__cache.o
endif
endif

# For halt.mod.
pkglib_MODULES += halt.mod
halt_mod_SOURCES = commands/halt.c

clean-module-halt.mod.1:
	rm -f halt.mod mod-halt.o mod-halt.c pre-halt.o halt_mod-commands_halt.o und-halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt.mod.1

clean-module-halt.mod-symbol.1:
	rm -f def-halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt.mod-symbol.1
DEFSYMFILES += def-halt.lst
mostlyclean-module-halt.mod.1:
	rm -f halt_mod-commands_halt.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-halt.mod.1
UNDSYMFILES += und-halt.lst

ifeq ($(TARGET_NO_MODULES), yes)
halt.mod: pre-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-halt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
halt.mod: pre-halt.o mod-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-halt.o mod-halt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
halt.mod: pre-halt.o mod-halt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-halt.o mod-halt.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-halt.o: $(halt_mod_DEPENDENCIES) halt_mod-commands_halt.o
	-rm -f $@
	$(TARGET_CC) $(halt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ halt_mod-commands_halt.o

mod-halt.o: mod-halt.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -DGRUB_FILE=\"mod-halt.c\" -c -o $@ $<

mod-halt.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'halt' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-halt.lst: pre-halt.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 halt/' > $@
else
def-halt.lst: pre-halt.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 halt/' > $@
endif

und-halt.lst: pre-halt.o
	echo 'halt' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

halt_mod-commands_halt.o: commands/halt.c $(commands/halt.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -DGRUB_FILE=\"commands/halt.c\" -MD -c -o $@ $<
-include halt_mod-commands_halt.d

clean-module-halt_mod-commands_halt-extra.1:
	rm -f cmd-halt_mod-commands_halt.lst fs-halt_mod-commands_halt.lst partmap-halt_mod-commands_halt.lst handler-halt_mod-commands_halt.lst parttool-halt_mod-commands_halt.lst video-halt_mod-commands_halt.lst terminal-halt_mod-commands_halt.lst

CLEAN_MODULE_TARGETS += clean-module-halt_mod-commands_halt-extra.1

COMMANDFILES += cmd-halt_mod-commands_halt.lst
FSFILES += fs-halt_mod-commands_halt.lst
PARTTOOLFILES += parttool-halt_mod-commands_halt.lst
PARTMAPFILES += partmap-halt_mod-commands_halt.lst
HANDLERFILES += handler-halt_mod-commands_halt.lst
TERMINALFILES += terminal-halt_mod-commands_halt.lst
VIDEOFILES += video-halt_mod-commands_halt.lst

cmd-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh halt > $@ || (rm -f $@; exit 1)

fs-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh halt > $@ || (rm -f $@; exit 1)

parttool-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh halt > $@ || (rm -f $@; exit 1)

partmap-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh halt > $@ || (rm -f $@; exit 1)

handler-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh halt > $@ || (rm -f $@; exit 1)

terminal-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh halt > $@ || (rm -f $@; exit 1)

video-halt_mod-commands_halt.lst: commands/halt.c $(commands/halt.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(halt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh halt > $@ || (rm -f $@; exit 1)

halt_mod_CFLAGS = $(COMMON_CFLAGS)
halt_mod_LDFLAGS = $(COMMON_LDFLAGS)

ifeq ($(target_cpu), i386)
pkglib_MODULES += cpuid.mod
cpuid_mod_SOURCES = commands/i386/cpuid.c

clean-module-cpuid.mod.1:
	rm -f cpuid.mod mod-cpuid.o mod-cpuid.c pre-cpuid.o cpuid_mod-commands_i386_cpuid.o und-cpuid.lst

CLEAN_MODULE_TARGETS += clean-module-cpuid.mod.1

clean-module-cpuid.mod-symbol.1:
	rm -f def-cpuid.lst

CLEAN_MODULE_TARGETS += clean-module-cpuid.mod-symbol.1
DEFSYMFILES += def-cpuid.lst
mostlyclean-module-cpuid.mod.1:
	rm -f cpuid_mod-commands_i386_cpuid.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-cpuid.mod.1
UNDSYMFILES += und-cpuid.lst

ifeq ($(TARGET_NO_MODULES), yes)
cpuid.mod: pre-cpuid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(cpuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-cpuid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
cpuid.mod: pre-cpuid.o mod-cpuid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(cpuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-cpuid.o mod-cpuid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
cpuid.mod: pre-cpuid.o mod-cpuid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(cpuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-cpuid.o mod-cpuid.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-cpuid.o: $(cpuid_mod_DEPENDENCIES) cpuid_mod-commands_i386_cpuid.o
	-rm -f $@
	$(TARGET_CC) $(cpuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ cpuid_mod-commands_i386_cpuid.o

mod-cpuid.o: mod-cpuid.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(cpuid_mod_CFLAGS) -DGRUB_FILE=\"mod-cpuid.c\" -c -o $@ $<

mod-cpuid.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'cpuid' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-cpuid.lst: pre-cpuid.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 cpuid/' > $@
else
def-cpuid.lst: pre-cpuid.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 cpuid/' > $@
endif

und-cpuid.lst: pre-cpuid.o
	echo 'cpuid' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

cpuid_mod-commands_i386_cpuid.o: commands/i386/cpuid.c $(commands/i386/cpuid.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands/i386 -I$(srcdir)/commands/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpuid_mod_CFLAGS) -DGRUB_FILE=\"commands/i386/cpuid.c\" -MD -c -o $@ $<
-include cpuid_mod-commands_i386_cpuid.d

clean-module-cpuid_mod-commands_i386_cpuid-extra.1:
	rm -f cmd-cpuid_mod-commands_i386_cpuid.lst fs-cpuid_mod-commands_i386_cpuid.lst partmap-cpuid_mod-commands_i386_cpuid.lst handler-cpuid_mod-commands_i386_cpuid.lst parttool-cpuid_mod-commands_i386_cpuid.lst video-cpuid_mod-commands_i386_cpuid.lst terminal-cpuid_mod-commands_i386_cpuid.lst

CLEAN_MODULE_TARGETS += clean-module-cpuid_mod-commands_i386_cpuid-extra.1

COMMANDFILES += cmd-cpuid_mod-commands_i386_cpuid.lst
FSFILES += fs-cpuid_mod-commands_i386_cpuid.lst
PARTTOOLFILES += parttool-cpuid_mod-commands_i386_cpuid.lst
PARTMAPFILES += partmap-cpuid_mod-commands_i386_cpuid.lst
HANDLERFILES += handler-cpuid_mod-commands_i386_cpuid.lst
TERMINALFILES += terminal-cpuid_mod-commands_i386_cpuid.lst
VIDEOFILES += video-cpuid_mod-commands_i386_cpuid.lst

cmd-cpuid_mod-commands_i386_cpuid.lst: commands/i386/cpuid.c $(commands/i386/cpuid.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/i386 -I$(srcdir)/commands/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh cpuid > $@ || (rm -f $@; exit 1)

fs-cpuid_mod-commands_i386_cpuid.lst: commands/i386/cpuid.c $(commands/i386/cpuid.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands/i386 -I$(srcdir)/commands/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cpuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh cpuid > $@ || (rm -f $@; exit 1)

parttool-cpuid_mod-commands_i386_cpuid.lst: commands/i386/cpuid.c $(commands/i386/cpuid.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands/i386 -I$(srcdir)/commands/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh cpuid > $@ || (rm -f $@; exit 1)

partmap-cpuid_mod-commands_i386_cpuid.lst: commands/i386/cpuid.c $(commands/i386/cpuid.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands/i386 -I$(srcdir)/commands/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cpuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh cpuid > $@ || (rm -f $@; exit 1)

handler-cpuid_mod-commands_i386_cpuid.lst: commands/i386/cpuid.c $(commands/i386/cpuid.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands/i386 -I$(srcdir)/commands/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh cpuid > $@ || (rm -f $@; exit 1)

terminal-cpuid_mod-commands_i386_cpuid.lst: commands/i386/cpuid.c $(commands/i386/cpuid.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands/i386 -I$(srcdir)/commands/i386 $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh cpuid > $@ || (rm -f $@; exit 1)

video-cpuid_mod-commands_i386_cpuid.lst: commands/i386/cpuid.c $(commands/i386/cpuid.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands/i386 -I$(srcdir)/commands/i386 $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cpuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh cpuid > $@ || (rm -f $@; exit 1)

cpuid_mod_CFLAGS = $(COMMON_CFLAGS)
cpuid_mod_LDFLAGS = $(COMMON_LDFLAGS)
endif

grub_emu_LDFLAGS = $(LIBCURSES)

ifeq ($(enable_grub_emu_usb), yes)
kernel_img_HEADERS += libusb.h

pkglib_MODULES += libusb.mod
libusb_mod_SOURCES = bus/usb/emu/usb.c

clean-module-libusb.mod.1:
	rm -f libusb.mod mod-libusb.o mod-libusb.c pre-libusb.o libusb_mod-bus_usb_emu_usb.o und-libusb.lst

CLEAN_MODULE_TARGETS += clean-module-libusb.mod.1

clean-module-libusb.mod-symbol.1:
	rm -f def-libusb.lst

CLEAN_MODULE_TARGETS += clean-module-libusb.mod-symbol.1
DEFSYMFILES += def-libusb.lst
mostlyclean-module-libusb.mod.1:
	rm -f libusb_mod-bus_usb_emu_usb.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-libusb.mod.1
UNDSYMFILES += und-libusb.lst

ifeq ($(TARGET_NO_MODULES), yes)
libusb.mod: pre-libusb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(libusb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-libusb.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
libusb.mod: pre-libusb.o mod-libusb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(libusb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-libusb.o mod-libusb.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
libusb.mod: pre-libusb.o mod-libusb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(libusb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-libusb.o mod-libusb.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-libusb.o: $(libusb_mod_DEPENDENCIES) libusb_mod-bus_usb_emu_usb.o
	-rm -f $@
	$(TARGET_CC) $(libusb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ libusb_mod-bus_usb_emu_usb.o

mod-libusb.o: mod-libusb.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(libusb_mod_CFLAGS) -DGRUB_FILE=\"mod-libusb.c\" -c -o $@ $<

mod-libusb.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'libusb' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-libusb.lst: pre-libusb.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 libusb/' > $@
else
def-libusb.lst: pre-libusb.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 libusb/' > $@
endif

und-libusb.lst: pre-libusb.o
	echo 'libusb' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

libusb_mod-bus_usb_emu_usb.o: bus/usb/emu/usb.c $(bus/usb/emu/usb.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus/usb/emu -I$(srcdir)/bus/usb/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(libusb_mod_CFLAGS) -DGRUB_FILE=\"bus/usb/emu/usb.c\" -MD -c -o $@ $<
-include libusb_mod-bus_usb_emu_usb.d

clean-module-libusb_mod-bus_usb_emu_usb-extra.1:
	rm -f cmd-libusb_mod-bus_usb_emu_usb.lst fs-libusb_mod-bus_usb_emu_usb.lst partmap-libusb_mod-bus_usb_emu_usb.lst handler-libusb_mod-bus_usb_emu_usb.lst parttool-libusb_mod-bus_usb_emu_usb.lst video-libusb_mod-bus_usb_emu_usb.lst terminal-libusb_mod-bus_usb_emu_usb.lst

CLEAN_MODULE_TARGETS += clean-module-libusb_mod-bus_usb_emu_usb-extra.1

COMMANDFILES += cmd-libusb_mod-bus_usb_emu_usb.lst
FSFILES += fs-libusb_mod-bus_usb_emu_usb.lst
PARTTOOLFILES += parttool-libusb_mod-bus_usb_emu_usb.lst
PARTMAPFILES += partmap-libusb_mod-bus_usb_emu_usb.lst
HANDLERFILES += handler-libusb_mod-bus_usb_emu_usb.lst
TERMINALFILES += terminal-libusb_mod-bus_usb_emu_usb.lst
VIDEOFILES += video-libusb_mod-bus_usb_emu_usb.lst

cmd-libusb_mod-bus_usb_emu_usb.lst: bus/usb/emu/usb.c $(bus/usb/emu/usb.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb/emu -I$(srcdir)/bus/usb/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(libusb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh libusb > $@ || (rm -f $@; exit 1)

fs-libusb_mod-bus_usb_emu_usb.lst: bus/usb/emu/usb.c $(bus/usb/emu/usb.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb/emu -I$(srcdir)/bus/usb/emu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(libusb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh libusb > $@ || (rm -f $@; exit 1)

parttool-libusb_mod-bus_usb_emu_usb.lst: bus/usb/emu/usb.c $(bus/usb/emu/usb.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb/emu -I$(srcdir)/bus/usb/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(libusb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh libusb > $@ || (rm -f $@; exit 1)

partmap-libusb_mod-bus_usb_emu_usb.lst: bus/usb/emu/usb.c $(bus/usb/emu/usb.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb/emu -I$(srcdir)/bus/usb/emu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(libusb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh libusb > $@ || (rm -f $@; exit 1)

handler-libusb_mod-bus_usb_emu_usb.lst: bus/usb/emu/usb.c $(bus/usb/emu/usb.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb/emu -I$(srcdir)/bus/usb/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(libusb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh libusb > $@ || (rm -f $@; exit 1)

terminal-libusb_mod-bus_usb_emu_usb.lst: bus/usb/emu/usb.c $(bus/usb/emu/usb.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb/emu -I$(srcdir)/bus/usb/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(libusb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh libusb > $@ || (rm -f $@; exit 1)

video-libusb_mod-bus_usb_emu_usb.lst: bus/usb/emu/usb.c $(bus/usb/emu/usb.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb/emu -I$(srcdir)/bus/usb/emu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(libusb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh libusb > $@ || (rm -f $@; exit 1)

libusb_mod_CFLAGS = 
libusb_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For usb.mod
pkglib_MODULES += usb.mod
usb_mod_SOURCES = bus/usb/usb.c

clean-module-usb.mod.1:
	rm -f usb.mod mod-usb.o mod-usb.c pre-usb.o usb_mod-bus_usb_usb.o und-usb.lst

CLEAN_MODULE_TARGETS += clean-module-usb.mod.1

clean-module-usb.mod-symbol.1:
	rm -f def-usb.lst

CLEAN_MODULE_TARGETS += clean-module-usb.mod-symbol.1
DEFSYMFILES += def-usb.lst
mostlyclean-module-usb.mod.1:
	rm -f usb_mod-bus_usb_usb.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-usb.mod.1
UNDSYMFILES += und-usb.lst

ifeq ($(TARGET_NO_MODULES), yes)
usb.mod: pre-usb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usb.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
usb.mod: pre-usb.o mod-usb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usb.o mod-usb.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
usb.mod: pre-usb.o mod-usb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(usb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-usb.o mod-usb.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-usb.o: $(usb_mod_DEPENDENCIES) usb_mod-bus_usb_usb.o
	-rm -f $@
	$(TARGET_CC) $(usb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ usb_mod-bus_usb_usb.o

mod-usb.o: mod-usb.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -DGRUB_FILE=\"mod-usb.c\" -c -o $@ $<

mod-usb.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'usb' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-usb.lst: pre-usb.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 usb/' > $@
else
def-usb.lst: pre-usb.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 usb/' > $@
endif

und-usb.lst: pre-usb.o
	echo 'usb' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

usb_mod-bus_usb_usb.o: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -DGRUB_FILE=\"bus/usb/usb.c\" -MD -c -o $@ $<
-include usb_mod-bus_usb_usb.d

clean-module-usb_mod-bus_usb_usb-extra.1:
	rm -f cmd-usb_mod-bus_usb_usb.lst fs-usb_mod-bus_usb_usb.lst partmap-usb_mod-bus_usb_usb.lst handler-usb_mod-bus_usb_usb.lst parttool-usb_mod-bus_usb_usb.lst video-usb_mod-bus_usb_usb.lst terminal-usb_mod-bus_usb_usb.lst

CLEAN_MODULE_TARGETS += clean-module-usb_mod-bus_usb_usb-extra.1

COMMANDFILES += cmd-usb_mod-bus_usb_usb.lst
FSFILES += fs-usb_mod-bus_usb_usb.lst
PARTTOOLFILES += parttool-usb_mod-bus_usb_usb.lst
PARTMAPFILES += partmap-usb_mod-bus_usb_usb.lst
HANDLERFILES += handler-usb_mod-bus_usb_usb.lst
TERMINALFILES += terminal-usb_mod-bus_usb_usb.lst
VIDEOFILES += video-usb_mod-bus_usb_usb.lst

cmd-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh usb > $@ || (rm -f $@; exit 1)

fs-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh usb > $@ || (rm -f $@; exit 1)

parttool-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh usb > $@ || (rm -f $@; exit 1)

partmap-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh usb > $@ || (rm -f $@; exit 1)

handler-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh usb > $@ || (rm -f $@; exit 1)

terminal-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh usb > $@ || (rm -f $@; exit 1)

video-usb_mod-bus_usb_usb.lst: bus/usb/usb.c $(bus/usb/usb.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ibus/usb -I$(srcdir)/bus/usb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh usb > $@ || (rm -f $@; exit 1)

usb_mod_CFLAGS = $(COMMON_CFLAGS)
usb_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For usbtest.mod
pkglib_MODULES += usbtest.mod
usbtest_mod_SOURCES = commands/usbtest.c

clean-module-usbtest.mod.1:
	rm -f usbtest.mod mod-usbtest.o mod-usbtest.c pre-usbtest.o usbtest_mod-commands_usbtest.o und-usbtest.lst

CLEAN_MODULE_TARGETS += clean-module-usbtest.mod.1

clean-module-usbtest.mod-symbol.1:
	rm -f def-usbtest.lst

CLEAN_MODULE_TARGETS += clean-module-usbtest.mod-symbol.1
DEFSYMFILES += def-usbtest.lst
mostlyclean-module-usbtest.mod.1:
	rm -f usbtest_mod-commands_usbtest.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-usbtest.mod.1
UNDSYMFILES += und-usbtest.lst

ifeq ($(TARGET_NO_MODULES), yes)
usbtest.mod: pre-usbtest.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usbtest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usbtest.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
usbtest.mod: pre-usbtest.o mod-usbtest.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usbtest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usbtest.o mod-usbtest.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
usbtest.mod: pre-usbtest.o mod-usbtest.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(usbtest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-usbtest.o mod-usbtest.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-usbtest.o: $(usbtest_mod_DEPENDENCIES) usbtest_mod-commands_usbtest.o
	-rm -f $@
	$(TARGET_CC) $(usbtest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ usbtest_mod-commands_usbtest.o

mod-usbtest.o: mod-usbtest.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -DGRUB_FILE=\"mod-usbtest.c\" -c -o $@ $<

mod-usbtest.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'usbtest' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-usbtest.lst: pre-usbtest.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 usbtest/' > $@
else
def-usbtest.lst: pre-usbtest.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 usbtest/' > $@
endif

und-usbtest.lst: pre-usbtest.o
	echo 'usbtest' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

usbtest_mod-commands_usbtest.o: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -DGRUB_FILE=\"commands/usbtest.c\" -MD -c -o $@ $<
-include usbtest_mod-commands_usbtest.d

clean-module-usbtest_mod-commands_usbtest-extra.1:
	rm -f cmd-usbtest_mod-commands_usbtest.lst fs-usbtest_mod-commands_usbtest.lst partmap-usbtest_mod-commands_usbtest.lst handler-usbtest_mod-commands_usbtest.lst parttool-usbtest_mod-commands_usbtest.lst video-usbtest_mod-commands_usbtest.lst terminal-usbtest_mod-commands_usbtest.lst

CLEAN_MODULE_TARGETS += clean-module-usbtest_mod-commands_usbtest-extra.1

COMMANDFILES += cmd-usbtest_mod-commands_usbtest.lst
FSFILES += fs-usbtest_mod-commands_usbtest.lst
PARTTOOLFILES += parttool-usbtest_mod-commands_usbtest.lst
PARTMAPFILES += partmap-usbtest_mod-commands_usbtest.lst
HANDLERFILES += handler-usbtest_mod-commands_usbtest.lst
TERMINALFILES += terminal-usbtest_mod-commands_usbtest.lst
VIDEOFILES += video-usbtest_mod-commands_usbtest.lst

cmd-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh usbtest > $@ || (rm -f $@; exit 1)

fs-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh usbtest > $@ || (rm -f $@; exit 1)

parttool-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh usbtest > $@ || (rm -f $@; exit 1)

partmap-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh usbtest > $@ || (rm -f $@; exit 1)

handler-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh usbtest > $@ || (rm -f $@; exit 1)

terminal-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh usbtest > $@ || (rm -f $@; exit 1)

video-usbtest_mod-commands_usbtest.lst: commands/usbtest.c $(commands/usbtest.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbtest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh usbtest > $@ || (rm -f $@; exit 1)

usbtest_mod_CFLAGS = $(COMMON_CFLAGS)
usbtest_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For usbms.mod
pkglib_MODULES += usbms.mod
usbms_mod_SOURCES = disk/usbms.c

clean-module-usbms.mod.1:
	rm -f usbms.mod mod-usbms.o mod-usbms.c pre-usbms.o usbms_mod-disk_usbms.o und-usbms.lst

CLEAN_MODULE_TARGETS += clean-module-usbms.mod.1

clean-module-usbms.mod-symbol.1:
	rm -f def-usbms.lst

CLEAN_MODULE_TARGETS += clean-module-usbms.mod-symbol.1
DEFSYMFILES += def-usbms.lst
mostlyclean-module-usbms.mod.1:
	rm -f usbms_mod-disk_usbms.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-usbms.mod.1
UNDSYMFILES += und-usbms.lst

ifeq ($(TARGET_NO_MODULES), yes)
usbms.mod: pre-usbms.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usbms_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usbms.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
usbms.mod: pre-usbms.o mod-usbms.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(usbms_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-usbms.o mod-usbms.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
usbms.mod: pre-usbms.o mod-usbms.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(usbms_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-usbms.o mod-usbms.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-usbms.o: $(usbms_mod_DEPENDENCIES) usbms_mod-disk_usbms.o
	-rm -f $@
	$(TARGET_CC) $(usbms_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ usbms_mod-disk_usbms.o

mod-usbms.o: mod-usbms.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -DGRUB_FILE=\"mod-usbms.c\" -c -o $@ $<

mod-usbms.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'usbms' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-usbms.lst: pre-usbms.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 usbms/' > $@
else
def-usbms.lst: pre-usbms.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 usbms/' > $@
endif

und-usbms.lst: pre-usbms.o
	echo 'usbms' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

usbms_mod-disk_usbms.o: disk/usbms.c $(disk/usbms.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -DGRUB_FILE=\"disk/usbms.c\" -MD -c -o $@ $<
-include usbms_mod-disk_usbms.d

clean-module-usbms_mod-disk_usbms-extra.1:
	rm -f cmd-usbms_mod-disk_usbms.lst fs-usbms_mod-disk_usbms.lst partmap-usbms_mod-disk_usbms.lst handler-usbms_mod-disk_usbms.lst parttool-usbms_mod-disk_usbms.lst video-usbms_mod-disk_usbms.lst terminal-usbms_mod-disk_usbms.lst

CLEAN_MODULE_TARGETS += clean-module-usbms_mod-disk_usbms-extra.1

COMMANDFILES += cmd-usbms_mod-disk_usbms.lst
FSFILES += fs-usbms_mod-disk_usbms.lst
PARTTOOLFILES += parttool-usbms_mod-disk_usbms.lst
PARTMAPFILES += partmap-usbms_mod-disk_usbms.lst
HANDLERFILES += handler-usbms_mod-disk_usbms.lst
TERMINALFILES += terminal-usbms_mod-disk_usbms.lst
VIDEOFILES += video-usbms_mod-disk_usbms.lst

cmd-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh usbms > $@ || (rm -f $@; exit 1)

fs-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh usbms > $@ || (rm -f $@; exit 1)

parttool-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh usbms > $@ || (rm -f $@; exit 1)

partmap-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh usbms > $@ || (rm -f $@; exit 1)

handler-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh usbms > $@ || (rm -f $@; exit 1)

terminal-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh usbms > $@ || (rm -f $@; exit 1)

video-usbms_mod-disk_usbms.lst: disk/usbms.c $(disk/usbms.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(usbms_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh usbms > $@ || (rm -f $@; exit 1)

usbms_mod_CFLAGS = $(COMMON_CFLAGS)
usbms_mod_LDFLAGS = $(COMMON_LDFLAGS)

grub_emu_LDFLAGS += $(LIBUSB)
endif

ifeq ($(enable_grub_emu_sdl), yes)
pkglib_MODULES += sdl.mod
sdl_mod_SOURCES = video/emu/sdl.c

clean-module-sdl.mod.1:
	rm -f sdl.mod mod-sdl.o mod-sdl.c pre-sdl.o sdl_mod-video_emu_sdl.o und-sdl.lst

CLEAN_MODULE_TARGETS += clean-module-sdl.mod.1

clean-module-sdl.mod-symbol.1:
	rm -f def-sdl.lst

CLEAN_MODULE_TARGETS += clean-module-sdl.mod-symbol.1
DEFSYMFILES += def-sdl.lst
mostlyclean-module-sdl.mod.1:
	rm -f sdl_mod-video_emu_sdl.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-sdl.mod.1
UNDSYMFILES += und-sdl.lst

ifeq ($(TARGET_NO_MODULES), yes)
sdl.mod: pre-sdl.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(sdl_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-sdl.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
sdl.mod: pre-sdl.o mod-sdl.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(sdl_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-sdl.o mod-sdl.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
sdl.mod: pre-sdl.o mod-sdl.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(sdl_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-sdl.o mod-sdl.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-sdl.o: $(sdl_mod_DEPENDENCIES) sdl_mod-video_emu_sdl.o
	-rm -f $@
	$(TARGET_CC) $(sdl_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ sdl_mod-video_emu_sdl.o

mod-sdl.o: mod-sdl.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(sdl_mod_CFLAGS) -DGRUB_FILE=\"mod-sdl.c\" -c -o $@ $<

mod-sdl.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'sdl' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-sdl.lst: pre-sdl.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 sdl/' > $@
else
def-sdl.lst: pre-sdl.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 sdl/' > $@
endif

und-sdl.lst: pre-sdl.o
	echo 'sdl' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

sdl_mod-video_emu_sdl.o: video/emu/sdl.c $(video/emu/sdl.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/emu -I$(srcdir)/video/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sdl_mod_CFLAGS) -DGRUB_FILE=\"video/emu/sdl.c\" -MD -c -o $@ $<
-include sdl_mod-video_emu_sdl.d

clean-module-sdl_mod-video_emu_sdl-extra.1:
	rm -f cmd-sdl_mod-video_emu_sdl.lst fs-sdl_mod-video_emu_sdl.lst partmap-sdl_mod-video_emu_sdl.lst handler-sdl_mod-video_emu_sdl.lst parttool-sdl_mod-video_emu_sdl.lst video-sdl_mod-video_emu_sdl.lst terminal-sdl_mod-video_emu_sdl.lst

CLEAN_MODULE_TARGETS += clean-module-sdl_mod-video_emu_sdl-extra.1

COMMANDFILES += cmd-sdl_mod-video_emu_sdl.lst
FSFILES += fs-sdl_mod-video_emu_sdl.lst
PARTTOOLFILES += parttool-sdl_mod-video_emu_sdl.lst
PARTMAPFILES += partmap-sdl_mod-video_emu_sdl.lst
HANDLERFILES += handler-sdl_mod-video_emu_sdl.lst
TERMINALFILES += terminal-sdl_mod-video_emu_sdl.lst
VIDEOFILES += video-sdl_mod-video_emu_sdl.lst

cmd-sdl_mod-video_emu_sdl.lst: video/emu/sdl.c $(video/emu/sdl.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/emu -I$(srcdir)/video/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sdl_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh sdl > $@ || (rm -f $@; exit 1)

fs-sdl_mod-video_emu_sdl.lst: video/emu/sdl.c $(video/emu/sdl.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/emu -I$(srcdir)/video/emu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(sdl_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh sdl > $@ || (rm -f $@; exit 1)

parttool-sdl_mod-video_emu_sdl.lst: video/emu/sdl.c $(video/emu/sdl.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/emu -I$(srcdir)/video/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sdl_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh sdl > $@ || (rm -f $@; exit 1)

partmap-sdl_mod-video_emu_sdl.lst: video/emu/sdl.c $(video/emu/sdl.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/emu -I$(srcdir)/video/emu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(sdl_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh sdl > $@ || (rm -f $@; exit 1)

handler-sdl_mod-video_emu_sdl.lst: video/emu/sdl.c $(video/emu/sdl.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/emu -I$(srcdir)/video/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sdl_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh sdl > $@ || (rm -f $@; exit 1)

terminal-sdl_mod-video_emu_sdl.lst: video/emu/sdl.c $(video/emu/sdl.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/emu -I$(srcdir)/video/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sdl_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh sdl > $@ || (rm -f $@; exit 1)

video-sdl_mod-video_emu_sdl.lst: video/emu/sdl.c $(video/emu/sdl.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/emu -I$(srcdir)/video/emu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(sdl_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh sdl > $@ || (rm -f $@; exit 1)

sdl_mod_CFLAGS = 
sdl_mod_LDFLAGS = $(COMMON_LDFLAGS)
grub_emu_LDFLAGS += $(LIBSDL)
kernel_img_HEADERS += sdl.h
endif

ifeq ($(enable_grub_emu_pci), yes)
pkglib_MODULES += pci.mod
pci_mod_SOURCES = bus/emu/pci.c commands/lspci.c

clean-module-pci.mod.1:
	rm -f pci.mod mod-pci.o mod-pci.c pre-pci.o pci_mod-bus_emu_pci.o pci_mod-commands_lspci.o und-pci.lst

CLEAN_MODULE_TARGETS += clean-module-pci.mod.1

clean-module-pci.mod-symbol.1:
	rm -f def-pci.lst

CLEAN_MODULE_TARGETS += clean-module-pci.mod-symbol.1
DEFSYMFILES += def-pci.lst
mostlyclean-module-pci.mod.1:
	rm -f pci_mod-bus_emu_pci.d pci_mod-commands_lspci.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-pci.mod.1
UNDSYMFILES += und-pci.lst

ifeq ($(TARGET_NO_MODULES), yes)
pci.mod: pre-pci.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(pci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-pci.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
pci.mod: pre-pci.o mod-pci.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(pci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-pci.o mod-pci.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
pci.mod: pre-pci.o mod-pci.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(pci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-pci.o mod-pci.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-pci.o: $(pci_mod_DEPENDENCIES) pci_mod-bus_emu_pci.o pci_mod-commands_lspci.o
	-rm -f $@
	$(TARGET_CC) $(pci_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pci_mod-bus_emu_pci.o pci_mod-commands_lspci.o

mod-pci.o: mod-pci.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -DGRUB_FILE=\"mod-pci.c\" -c -o $@ $<

mod-pci.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'pci' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-pci.lst: pre-pci.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 pci/' > $@
else
def-pci.lst: pre-pci.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 pci/' > $@
endif

und-pci.lst: pre-pci.o
	echo 'pci' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

pci_mod-bus_emu_pci.o: bus/emu/pci.c $(bus/emu/pci.c_DEPENDENCIES)
	$(TARGET_CC) -Ibus/emu -I$(srcdir)/bus/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -DGRUB_FILE=\"bus/emu/pci.c\" -MD -c -o $@ $<
-include pci_mod-bus_emu_pci.d

clean-module-pci_mod-bus_emu_pci-extra.1:
	rm -f cmd-pci_mod-bus_emu_pci.lst fs-pci_mod-bus_emu_pci.lst partmap-pci_mod-bus_emu_pci.lst handler-pci_mod-bus_emu_pci.lst parttool-pci_mod-bus_emu_pci.lst video-pci_mod-bus_emu_pci.lst terminal-pci_mod-bus_emu_pci.lst

CLEAN_MODULE_TARGETS += clean-module-pci_mod-bus_emu_pci-extra.1

COMMANDFILES += cmd-pci_mod-bus_emu_pci.lst
FSFILES += fs-pci_mod-bus_emu_pci.lst
PARTTOOLFILES += parttool-pci_mod-bus_emu_pci.lst
PARTMAPFILES += partmap-pci_mod-bus_emu_pci.lst
HANDLERFILES += handler-pci_mod-bus_emu_pci.lst
TERMINALFILES += terminal-pci_mod-bus_emu_pci.lst
VIDEOFILES += video-pci_mod-bus_emu_pci.lst

cmd-pci_mod-bus_emu_pci.lst: bus/emu/pci.c $(bus/emu/pci.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/emu -I$(srcdir)/bus/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh pci > $@ || (rm -f $@; exit 1)

fs-pci_mod-bus_emu_pci.lst: bus/emu/pci.c $(bus/emu/pci.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ibus/emu -I$(srcdir)/bus/emu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh pci > $@ || (rm -f $@; exit 1)

parttool-pci_mod-bus_emu_pci.lst: bus/emu/pci.c $(bus/emu/pci.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ibus/emu -I$(srcdir)/bus/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh pci > $@ || (rm -f $@; exit 1)

partmap-pci_mod-bus_emu_pci.lst: bus/emu/pci.c $(bus/emu/pci.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ibus/emu -I$(srcdir)/bus/emu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh pci > $@ || (rm -f $@; exit 1)

handler-pci_mod-bus_emu_pci.lst: bus/emu/pci.c $(bus/emu/pci.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ibus/emu -I$(srcdir)/bus/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh pci > $@ || (rm -f $@; exit 1)

terminal-pci_mod-bus_emu_pci.lst: bus/emu/pci.c $(bus/emu/pci.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ibus/emu -I$(srcdir)/bus/emu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh pci > $@ || (rm -f $@; exit 1)

video-pci_mod-bus_emu_pci.lst: bus/emu/pci.c $(bus/emu/pci.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ibus/emu -I$(srcdir)/bus/emu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh pci > $@ || (rm -f $@; exit 1)

pci_mod-commands_lspci.o: commands/lspci.c $(commands/lspci.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -DGRUB_FILE=\"commands/lspci.c\" -MD -c -o $@ $<
-include pci_mod-commands_lspci.d

clean-module-pci_mod-commands_lspci-extra.1:
	rm -f cmd-pci_mod-commands_lspci.lst fs-pci_mod-commands_lspci.lst partmap-pci_mod-commands_lspci.lst handler-pci_mod-commands_lspci.lst parttool-pci_mod-commands_lspci.lst video-pci_mod-commands_lspci.lst terminal-pci_mod-commands_lspci.lst

CLEAN_MODULE_TARGETS += clean-module-pci_mod-commands_lspci-extra.1

COMMANDFILES += cmd-pci_mod-commands_lspci.lst
FSFILES += fs-pci_mod-commands_lspci.lst
PARTTOOLFILES += parttool-pci_mod-commands_lspci.lst
PARTMAPFILES += partmap-pci_mod-commands_lspci.lst
HANDLERFILES += handler-pci_mod-commands_lspci.lst
TERMINALFILES += terminal-pci_mod-commands_lspci.lst
VIDEOFILES += video-pci_mod-commands_lspci.lst

cmd-pci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh pci > $@ || (rm -f $@; exit 1)

fs-pci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh pci > $@ || (rm -f $@; exit 1)

parttool-pci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh pci > $@ || (rm -f $@; exit 1)

partmap-pci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh pci > $@ || (rm -f $@; exit 1)

handler-pci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh pci > $@ || (rm -f $@; exit 1)

terminal-pci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh pci > $@ || (rm -f $@; exit 1)

video-pci_mod-commands_lspci.lst: commands/lspci.c $(commands/lspci.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(pci_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh pci > $@ || (rm -f $@; exit 1)

pci_mod_LDFLAGS = $(COMMON_LDFLAGS)
grub_emu_LDFLAGS += $(LIBPCIACCESS)
kernel_img_HEADERS += libpciaccess.h
endif

include $(srcdir)/conf/common.mk

grub_emu_init.h: genemuinitheader.sh $(pkglib_MODULES)
	rm -f $@; echo $(pkglib_MODULES) | sh $(srcdir)/genemuinitheader.sh $(NM)  > $@
DISTCLEANFILES += grub_emu_init.h

grub_emu_init.c: genemuinit.sh $(pkglib_MODULES) grub_emu_init.h
	rm -f $@; echo $(pkglib_MODULES) | sh $(srcdir)/genemuinit.sh $(NM) > $@
DISTCLEANFILES += grub_emu_init.c

CLEANFILES += grub-emu
ifneq ($(TARGET_NO_MODULES), yes)
grub-emu: $(pkglib_PROGRAMS)
	$(CC) -o $@ $^ $(grub_emu_LDFLAGS) $(LDFLAGS)
else
grub-emu: $(pkglib_MODULES) $(pkglib_PROGRAMS)
	$(CC) -o $@ $^ $(grub_emu_LDFLAGS) $(LDFLAGS)
endif
GRUB_EMU=grub-emu

CLEANFILES += kernel.img $(kernel_img_OBJECTS)
ifeq ($(kernel_img_RELOCATABLE),yes)
kernel.img: $(kernel_img_DEPENDENCIES) $(kernel_img_OBJECTS)
	$(TARGET_CC) -Wl,-r,-d -o $@ $(kernel_img_OBJECTS) $(TARGET_LDFLAGS) $(kernel_img_LDFLAGS)
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K start -R .note -R .comment $@; fi
else
kernel.img: $(kernel_img_DEPENDENCIES) $(kernel_img_OBJECTS)
	$(TARGET_CC) -o $@ $(kernel_img_OBJECTS) $(TARGET_LDFLAGS) $(kernel_img_LDFLAGS)
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) -R .rel.dyn -R .reginfo -R .note -R .comment $@; fi
endif

