# -*- makefile -*-
# Generated by genmk.rb, please don't edit!

# Used by various components.  These rules need to precede them.
script/lexer.c_DEPENDENCIES = grub_script.tab.h grub_script.yy.h

sbin_UTILITIES += grub-mkdevicemap
grub_mkdevicemap_SOURCES = gnulib/progname.c util/grub-mkdevicemap.c \
	util/deviceiter.c \
	util/misc.c kern/emu/misc.c \
	kern/env.c kern/err.c kern/list.c kern/misc.c kern/emu/mm.c

clean-utility-grub-mkdevicemap.1:
	rm -f grub-mkdevicemap$(EXEEXT) grub_mkdevicemap-gnulib_progname.o grub_mkdevicemap-util_grub_mkdevicemap.o grub_mkdevicemap-util_deviceiter.o grub_mkdevicemap-util_misc.o grub_mkdevicemap-kern_emu_misc.o grub_mkdevicemap-kern_env.o grub_mkdevicemap-kern_err.o grub_mkdevicemap-kern_list.o grub_mkdevicemap-kern_misc.o grub_mkdevicemap-kern_emu_mm.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-mkdevicemap.1

mostlyclean-utility-grub-mkdevicemap.1:
	rm -f grub_mkdevicemap-gnulib_progname.d grub_mkdevicemap-util_grub_mkdevicemap.d grub_mkdevicemap-util_deviceiter.d grub_mkdevicemap-util_misc.d grub_mkdevicemap-kern_emu_misc.d grub_mkdevicemap-kern_env.d grub_mkdevicemap-kern_err.d grub_mkdevicemap-kern_list.d grub_mkdevicemap-kern_misc.d grub_mkdevicemap-kern_emu_mm.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-mkdevicemap.1

grub_mkdevicemap_OBJECTS += grub_mkdevicemap-gnulib_progname.o grub_mkdevicemap-util_grub_mkdevicemap.o grub_mkdevicemap-util_deviceiter.o grub_mkdevicemap-util_misc.o grub_mkdevicemap-kern_emu_misc.o grub_mkdevicemap-kern_env.o grub_mkdevicemap-kern_err.o grub_mkdevicemap-kern_list.o grub_mkdevicemap-kern_misc.o grub_mkdevicemap-kern_emu_mm.o

grub_mkdevicemap-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-gnulib_progname.d

grub_mkdevicemap-util_grub_mkdevicemap.o: util/grub-mkdevicemap.c $(util/grub-mkdevicemap.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"util/grub-mkdevicemap.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-util_grub_mkdevicemap.d

grub_mkdevicemap-util_deviceiter.o: util/deviceiter.c $(util/deviceiter.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"util/deviceiter.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-util_deviceiter.d

grub_mkdevicemap-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-util_misc.d

grub_mkdevicemap-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-kern_emu_misc.d

grub_mkdevicemap-kern_env.o: kern/env.c $(kern/env.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"kern/env.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-kern_env.d

grub_mkdevicemap-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-kern_err.d

grub_mkdevicemap-kern_list.o: kern/list.c $(kern/list.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"kern/list.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-kern_list.d

grub_mkdevicemap-kern_misc.o: kern/misc.c $(kern/misc.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"kern/misc.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-kern_misc.d

grub_mkdevicemap-kern_emu_mm.o: kern/emu/mm.c $(kern/emu/mm.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"kern/emu/mm.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-kern_emu_mm.d


ifeq ($(target_cpu)-$(platform), sparc64-ieee1275)
grub_mkdevicemap_SOURCES += util/ieee1275/ofpath.c util/ieee1275/devicemap.c

clean-utility-grub-mkdevicemap.2:
	rm -f grub-mkdevicemap$(EXEEXT) grub_mkdevicemap-util_ieee1275_ofpath.o grub_mkdevicemap-util_ieee1275_devicemap.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-mkdevicemap.2

mostlyclean-utility-grub-mkdevicemap.2:
	rm -f grub_mkdevicemap-util_ieee1275_ofpath.d grub_mkdevicemap-util_ieee1275_devicemap.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-mkdevicemap.2

grub_mkdevicemap_OBJECTS += grub_mkdevicemap-util_ieee1275_ofpath.o grub_mkdevicemap-util_ieee1275_devicemap.o

grub_mkdevicemap-util_ieee1275_ofpath.o: util/ieee1275/ofpath.c $(util/ieee1275/ofpath.c_DEPENDENCIES)
	$(CC) -Iutil/ieee1275 -I$(srcdir)/util/ieee1275 $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"util/ieee1275/ofpath.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-util_ieee1275_ofpath.d

grub_mkdevicemap-util_ieee1275_devicemap.o: util/ieee1275/devicemap.c $(util/ieee1275/devicemap.c_DEPENDENCIES)
	$(CC) -Iutil/ieee1275 -I$(srcdir)/util/ieee1275 $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"util/ieee1275/devicemap.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-util_ieee1275_devicemap.d

else
grub_mkdevicemap_SOURCES += util/devicemap.c

clean-utility-grub-mkdevicemap.3:
	rm -f grub-mkdevicemap$(EXEEXT) grub_mkdevicemap-util_devicemap.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-mkdevicemap.3

mostlyclean-utility-grub-mkdevicemap.3:
	rm -f grub_mkdevicemap-util_devicemap.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-mkdevicemap.3

grub_mkdevicemap_OBJECTS += grub_mkdevicemap-util_devicemap.o

grub_mkdevicemap-util_devicemap.o: util/devicemap.c $(util/devicemap.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkdevicemap_CFLAGS) -DGRUB_FILE=\"util/devicemap.c\" -MD -c -o $@ $<
-include grub_mkdevicemap-util_devicemap.d

endif

# For grub-mkimage.
bin_UTILITIES += grub-mkimage
grub_mkimage_SOURCES = gnulib/progname.c util/grub-mkimage.c util/misc.c \
	util/resolve.c kern/emu/misc.c lib/LzmaEnc.c lib/LzFind.c

clean-utility-grub-mkimage.1:
	rm -f grub-mkimage$(EXEEXT) grub_mkimage-gnulib_progname.o grub_mkimage-util_grub_mkimage.o grub_mkimage-util_misc.o grub_mkimage-util_resolve.o grub_mkimage-kern_emu_misc.o grub_mkimage-lib_LzmaEnc.o grub_mkimage-lib_LzFind.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-mkimage.1

mostlyclean-utility-grub-mkimage.1:
	rm -f grub_mkimage-gnulib_progname.d grub_mkimage-util_grub_mkimage.d grub_mkimage-util_misc.d grub_mkimage-util_resolve.d grub_mkimage-kern_emu_misc.d grub_mkimage-lib_LzmaEnc.d grub_mkimage-lib_LzFind.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-mkimage.1

grub_mkimage_OBJECTS += grub_mkimage-gnulib_progname.o grub_mkimage-util_grub_mkimage.o grub_mkimage-util_misc.o grub_mkimage-util_resolve.o grub_mkimage-kern_emu_misc.o grub_mkimage-lib_LzmaEnc.o grub_mkimage-lib_LzFind.o

grub_mkimage-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkimage_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_mkimage-gnulib_progname.d

grub_mkimage-util_grub_mkimage.o: util/grub-mkimage.c $(util/grub-mkimage.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkimage_CFLAGS) -DGRUB_FILE=\"util/grub-mkimage.c\" -MD -c -o $@ $<
-include grub_mkimage-util_grub_mkimage.d

grub_mkimage-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkimage_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_mkimage-util_misc.d

grub_mkimage-util_resolve.o: util/resolve.c $(util/resolve.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkimage_CFLAGS) -DGRUB_FILE=\"util/resolve.c\" -MD -c -o $@ $<
-include grub_mkimage-util_resolve.d

grub_mkimage-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkimage_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_mkimage-kern_emu_misc.d

grub_mkimage-lib_LzmaEnc.o: lib/LzmaEnc.c $(lib/LzmaEnc.c_DEPENDENCIES)
	$(CC) -Ilib -I$(srcdir)/lib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkimage_CFLAGS) -DGRUB_FILE=\"lib/LzmaEnc.c\" -MD -c -o $@ $<
-include grub_mkimage-lib_LzmaEnc.d

grub_mkimage-lib_LzFind.o: lib/LzFind.c $(lib/LzFind.c_DEPENDENCIES)
	$(CC) -Ilib -I$(srcdir)/lib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkimage_CFLAGS) -DGRUB_FILE=\"lib/LzFind.c\" -MD -c -o $@ $<
-include grub_mkimage-lib_LzFind.d

util/grub-mkimage.c_DEPENDENCIES = Makefile

# For grub-probe.
sbin_UTILITIES += grub-probe
util/grub-probe.c_DEPENDENCIES = grub_probe_init.h
grub_probe_SOURCES = gnulib/progname.c util/grub-probe.c	\
	kern/emu/hostdisk.c util/misc.c kern/emu/misc.c kern/emu/getroot.c kern/emu/mm.c	\
	kern/device.c kern/disk.c kern/err.c kern/misc.c	\
	kern/partition.c kern/file.c kern/list.c	\
	\
	fs/affs.c fs/cpio.c fs/fat.c fs/ext2.c fs/hfs.c		\
	fs/hfsplus.c fs/iso9660.c fs/udf.c fs/jfs.c fs/minix.c	\
	fs/nilfs2.c fs/ntfs.c fs/ntfscomp.c fs/reiserfs.c	\
	fs/sfs.c fs/ufs.c fs/ufs2.c fs/xfs.c fs/afs.c		\
	fs/afs_be.c fs/befs.c fs/befs_be.c fs/tar.c		\
	\
	$(GRUB_CONTRIB)/zfs/zfs.c \
	$(GRUB_CONTRIB)/zfs/zfs_lzjb.c \
	$(GRUB_CONTRIB)/zfs/zfs_sha256.c \
	$(GRUB_CONTRIB)/zfs/zfs_fletcher.c \
	\
	partmap/msdos.c partmap/bsdlabel.c partmap/apple.c \
	partmap/sun.c partmap/sunpc.c partmap/gpt.c \
	kern/fs.c kern/env.c fs/fshelp.c			\
	disk/raid.c disk/raid5_recover.c disk/raid6_recover.c	\
	disk/mdraid_linux.c disk/lvm.c grub_probe_init.c

clean-utility-grub-probe.1:
	rm -f grub-probe$(EXEEXT) grub_probe-gnulib_progname.o grub_probe-util_grub_probe.o grub_probe-kern_emu_hostdisk.o grub_probe-util_misc.o grub_probe-kern_emu_misc.o grub_probe-kern_emu_getroot.o grub_probe-kern_emu_mm.o grub_probe-kern_device.o grub_probe-kern_disk.o grub_probe-kern_err.o grub_probe-kern_misc.o grub_probe-kern_partition.o grub_probe-kern_file.o grub_probe-kern_list.o grub_probe-fs_affs.o grub_probe-fs_cpio.o grub_probe-fs_fat.o grub_probe-fs_ext2.o grub_probe-fs_hfs.o grub_probe-fs_hfsplus.o grub_probe-fs_iso9660.o grub_probe-fs_udf.o grub_probe-fs_jfs.o grub_probe-fs_minix.o grub_probe-fs_nilfs2.o grub_probe-fs_ntfs.o grub_probe-fs_ntfscomp.o grub_probe-fs_reiserfs.o grub_probe-fs_sfs.o grub_probe-fs_ufs.o grub_probe-fs_ufs2.o grub_probe-fs_xfs.o grub_probe-fs_afs.o grub_probe-fs_afs_be.o grub_probe-fs_befs.o grub_probe-fs_befs_be.o grub_probe-fs_tar.o grub_probe-__GRUB_CONTRIB__zfs_zfs.o grub_probe-__GRUB_CONTRIB__zfs_zfs_lzjb.o grub_probe-__GRUB_CONTRIB__zfs_zfs_sha256.o grub_probe-__GRUB_CONTRIB__zfs_zfs_fletcher.o grub_probe-partmap_msdos.o grub_probe-partmap_bsdlabel.o grub_probe-partmap_apple.o grub_probe-partmap_sun.o grub_probe-partmap_sunpc.o grub_probe-partmap_gpt.o grub_probe-kern_fs.o grub_probe-kern_env.o grub_probe-fs_fshelp.o grub_probe-disk_raid.o grub_probe-disk_raid5_recover.o grub_probe-disk_raid6_recover.o grub_probe-disk_mdraid_linux.o grub_probe-disk_lvm.o grub_probe-grub_probe_init.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-probe.1

mostlyclean-utility-grub-probe.1:
	rm -f grub_probe-gnulib_progname.d grub_probe-util_grub_probe.d grub_probe-kern_emu_hostdisk.d grub_probe-util_misc.d grub_probe-kern_emu_misc.d grub_probe-kern_emu_getroot.d grub_probe-kern_emu_mm.d grub_probe-kern_device.d grub_probe-kern_disk.d grub_probe-kern_err.d grub_probe-kern_misc.d grub_probe-kern_partition.d grub_probe-kern_file.d grub_probe-kern_list.d grub_probe-fs_affs.d grub_probe-fs_cpio.d grub_probe-fs_fat.d grub_probe-fs_ext2.d grub_probe-fs_hfs.d grub_probe-fs_hfsplus.d grub_probe-fs_iso9660.d grub_probe-fs_udf.d grub_probe-fs_jfs.d grub_probe-fs_minix.d grub_probe-fs_nilfs2.d grub_probe-fs_ntfs.d grub_probe-fs_ntfscomp.d grub_probe-fs_reiserfs.d grub_probe-fs_sfs.d grub_probe-fs_ufs.d grub_probe-fs_ufs2.d grub_probe-fs_xfs.d grub_probe-fs_afs.d grub_probe-fs_afs_be.d grub_probe-fs_befs.d grub_probe-fs_befs_be.d grub_probe-fs_tar.d grub_probe-__GRUB_CONTRIB__zfs_zfs.d grub_probe-__GRUB_CONTRIB__zfs_zfs_lzjb.d grub_probe-__GRUB_CONTRIB__zfs_zfs_sha256.d grub_probe-__GRUB_CONTRIB__zfs_zfs_fletcher.d grub_probe-partmap_msdos.d grub_probe-partmap_bsdlabel.d grub_probe-partmap_apple.d grub_probe-partmap_sun.d grub_probe-partmap_sunpc.d grub_probe-partmap_gpt.d grub_probe-kern_fs.d grub_probe-kern_env.d grub_probe-fs_fshelp.d grub_probe-disk_raid.d grub_probe-disk_raid5_recover.d grub_probe-disk_raid6_recover.d grub_probe-disk_mdraid_linux.d grub_probe-disk_lvm.d grub_probe-grub_probe_init.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-probe.1

grub_probe_OBJECTS += grub_probe-gnulib_progname.o grub_probe-util_grub_probe.o grub_probe-kern_emu_hostdisk.o grub_probe-util_misc.o grub_probe-kern_emu_misc.o grub_probe-kern_emu_getroot.o grub_probe-kern_emu_mm.o grub_probe-kern_device.o grub_probe-kern_disk.o grub_probe-kern_err.o grub_probe-kern_misc.o grub_probe-kern_partition.o grub_probe-kern_file.o grub_probe-kern_list.o grub_probe-fs_affs.o grub_probe-fs_cpio.o grub_probe-fs_fat.o grub_probe-fs_ext2.o grub_probe-fs_hfs.o grub_probe-fs_hfsplus.o grub_probe-fs_iso9660.o grub_probe-fs_udf.o grub_probe-fs_jfs.o grub_probe-fs_minix.o grub_probe-fs_nilfs2.o grub_probe-fs_ntfs.o grub_probe-fs_ntfscomp.o grub_probe-fs_reiserfs.o grub_probe-fs_sfs.o grub_probe-fs_ufs.o grub_probe-fs_ufs2.o grub_probe-fs_xfs.o grub_probe-fs_afs.o grub_probe-fs_afs_be.o grub_probe-fs_befs.o grub_probe-fs_befs_be.o grub_probe-fs_tar.o grub_probe-__GRUB_CONTRIB__zfs_zfs.o grub_probe-__GRUB_CONTRIB__zfs_zfs_lzjb.o grub_probe-__GRUB_CONTRIB__zfs_zfs_sha256.o grub_probe-__GRUB_CONTRIB__zfs_zfs_fletcher.o grub_probe-partmap_msdos.o grub_probe-partmap_bsdlabel.o grub_probe-partmap_apple.o grub_probe-partmap_sun.o grub_probe-partmap_sunpc.o grub_probe-partmap_gpt.o grub_probe-kern_fs.o grub_probe-kern_env.o grub_probe-fs_fshelp.o grub_probe-disk_raid.o grub_probe-disk_raid5_recover.o grub_probe-disk_raid6_recover.o grub_probe-disk_mdraid_linux.o grub_probe-disk_lvm.o grub_probe-grub_probe_init.o

grub_probe-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_probe-gnulib_progname.d

grub_probe-util_grub_probe.o: util/grub-probe.c $(util/grub-probe.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"util/grub-probe.c\" -MD -c -o $@ $<
-include grub_probe-util_grub_probe.d

grub_probe-kern_emu_hostdisk.o: kern/emu/hostdisk.c $(kern/emu/hostdisk.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/emu/hostdisk.c\" -MD -c -o $@ $<
-include grub_probe-kern_emu_hostdisk.d

grub_probe-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_probe-util_misc.d

grub_probe-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_probe-kern_emu_misc.d

grub_probe-kern_emu_getroot.o: kern/emu/getroot.c $(kern/emu/getroot.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/emu/getroot.c\" -MD -c -o $@ $<
-include grub_probe-kern_emu_getroot.d

grub_probe-kern_emu_mm.o: kern/emu/mm.c $(kern/emu/mm.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/emu/mm.c\" -MD -c -o $@ $<
-include grub_probe-kern_emu_mm.d

grub_probe-kern_device.o: kern/device.c $(kern/device.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/device.c\" -MD -c -o $@ $<
-include grub_probe-kern_device.d

grub_probe-kern_disk.o: kern/disk.c $(kern/disk.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/disk.c\" -MD -c -o $@ $<
-include grub_probe-kern_disk.d

grub_probe-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<
-include grub_probe-kern_err.d

grub_probe-kern_misc.o: kern/misc.c $(kern/misc.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/misc.c\" -MD -c -o $@ $<
-include grub_probe-kern_misc.d

grub_probe-kern_partition.o: kern/partition.c $(kern/partition.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/partition.c\" -MD -c -o $@ $<
-include grub_probe-kern_partition.d

grub_probe-kern_file.o: kern/file.c $(kern/file.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/file.c\" -MD -c -o $@ $<
-include grub_probe-kern_file.d

grub_probe-kern_list.o: kern/list.c $(kern/list.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/list.c\" -MD -c -o $@ $<
-include grub_probe-kern_list.d

grub_probe-fs_affs.o: fs/affs.c $(fs/affs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/affs.c\" -MD -c -o $@ $<
-include grub_probe-fs_affs.d

grub_probe-fs_cpio.o: fs/cpio.c $(fs/cpio.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/cpio.c\" -MD -c -o $@ $<
-include grub_probe-fs_cpio.d

grub_probe-fs_fat.o: fs/fat.c $(fs/fat.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/fat.c\" -MD -c -o $@ $<
-include grub_probe-fs_fat.d

grub_probe-fs_ext2.o: fs/ext2.c $(fs/ext2.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/ext2.c\" -MD -c -o $@ $<
-include grub_probe-fs_ext2.d

grub_probe-fs_hfs.o: fs/hfs.c $(fs/hfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/hfs.c\" -MD -c -o $@ $<
-include grub_probe-fs_hfs.d

grub_probe-fs_hfsplus.o: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/hfsplus.c\" -MD -c -o $@ $<
-include grub_probe-fs_hfsplus.d

grub_probe-fs_iso9660.o: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/iso9660.c\" -MD -c -o $@ $<
-include grub_probe-fs_iso9660.d

grub_probe-fs_udf.o: fs/udf.c $(fs/udf.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/udf.c\" -MD -c -o $@ $<
-include grub_probe-fs_udf.d

grub_probe-fs_jfs.o: fs/jfs.c $(fs/jfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/jfs.c\" -MD -c -o $@ $<
-include grub_probe-fs_jfs.d

grub_probe-fs_minix.o: fs/minix.c $(fs/minix.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/minix.c\" -MD -c -o $@ $<
-include grub_probe-fs_minix.d

grub_probe-fs_nilfs2.o: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/nilfs2.c\" -MD -c -o $@ $<
-include grub_probe-fs_nilfs2.d

grub_probe-fs_ntfs.o: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/ntfs.c\" -MD -c -o $@ $<
-include grub_probe-fs_ntfs.d

grub_probe-fs_ntfscomp.o: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/ntfscomp.c\" -MD -c -o $@ $<
-include grub_probe-fs_ntfscomp.d

grub_probe-fs_reiserfs.o: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/reiserfs.c\" -MD -c -o $@ $<
-include grub_probe-fs_reiserfs.d

grub_probe-fs_sfs.o: fs/sfs.c $(fs/sfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/sfs.c\" -MD -c -o $@ $<
-include grub_probe-fs_sfs.d

grub_probe-fs_ufs.o: fs/ufs.c $(fs/ufs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/ufs.c\" -MD -c -o $@ $<
-include grub_probe-fs_ufs.d

grub_probe-fs_ufs2.o: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/ufs2.c\" -MD -c -o $@ $<
-include grub_probe-fs_ufs2.d

grub_probe-fs_xfs.o: fs/xfs.c $(fs/xfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/xfs.c\" -MD -c -o $@ $<
-include grub_probe-fs_xfs.d

grub_probe-fs_afs.o: fs/afs.c $(fs/afs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/afs.c\" -MD -c -o $@ $<
-include grub_probe-fs_afs.d

grub_probe-fs_afs_be.o: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/afs_be.c\" -MD -c -o $@ $<
-include grub_probe-fs_afs_be.d

grub_probe-fs_befs.o: fs/befs.c $(fs/befs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/befs.c\" -MD -c -o $@ $<
-include grub_probe-fs_befs.d

grub_probe-fs_befs_be.o: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/befs_be.c\" -MD -c -o $@ $<
-include grub_probe-fs_befs_be.d

grub_probe-fs_tar.o: fs/tar.c $(fs/tar.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/tar.c\" -MD -c -o $@ $<
-include grub_probe-fs_tar.d

grub_probe-__GRUB_CONTRIB__zfs_zfs.o: $(GRUB_CONTRIB)/zfs/zfs.c $($(GRUB_CONTRIB)/zfs/zfs.c_DEPENDENCIES)
	$(CC) -I$(GRUB_CONTRIB)/zfs -I$(srcdir)/$(GRUB_CONTRIB)/zfs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"$(GRUB_CONTRIB)/zfs/zfs.c\" -MD -c -o $@ $<
-include grub_probe-__GRUB_CONTRIB__zfs_zfs.d

grub_probe-__GRUB_CONTRIB__zfs_zfs_lzjb.o: $(GRUB_CONTRIB)/zfs/zfs_lzjb.c $($(GRUB_CONTRIB)/zfs/zfs_lzjb.c_DEPENDENCIES)
	$(CC) -I$(GRUB_CONTRIB)/zfs -I$(srcdir)/$(GRUB_CONTRIB)/zfs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"$(GRUB_CONTRIB)/zfs/zfs_lzjb.c\" -MD -c -o $@ $<
-include grub_probe-__GRUB_CONTRIB__zfs_zfs_lzjb.d

grub_probe-__GRUB_CONTRIB__zfs_zfs_sha256.o: $(GRUB_CONTRIB)/zfs/zfs_sha256.c $($(GRUB_CONTRIB)/zfs/zfs_sha256.c_DEPENDENCIES)
	$(CC) -I$(GRUB_CONTRIB)/zfs -I$(srcdir)/$(GRUB_CONTRIB)/zfs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"$(GRUB_CONTRIB)/zfs/zfs_sha256.c\" -MD -c -o $@ $<
-include grub_probe-__GRUB_CONTRIB__zfs_zfs_sha256.d

grub_probe-__GRUB_CONTRIB__zfs_zfs_fletcher.o: $(GRUB_CONTRIB)/zfs/zfs_fletcher.c $($(GRUB_CONTRIB)/zfs/zfs_fletcher.c_DEPENDENCIES)
	$(CC) -I$(GRUB_CONTRIB)/zfs -I$(srcdir)/$(GRUB_CONTRIB)/zfs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"$(GRUB_CONTRIB)/zfs/zfs_fletcher.c\" -MD -c -o $@ $<
-include grub_probe-__GRUB_CONTRIB__zfs_zfs_fletcher.d

grub_probe-partmap_msdos.o: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"partmap/msdos.c\" -MD -c -o $@ $<
-include grub_probe-partmap_msdos.d

grub_probe-partmap_bsdlabel.o: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"partmap/bsdlabel.c\" -MD -c -o $@ $<
-include grub_probe-partmap_bsdlabel.d

grub_probe-partmap_apple.o: partmap/apple.c $(partmap/apple.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"partmap/apple.c\" -MD -c -o $@ $<
-include grub_probe-partmap_apple.d

grub_probe-partmap_sun.o: partmap/sun.c $(partmap/sun.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"partmap/sun.c\" -MD -c -o $@ $<
-include grub_probe-partmap_sun.d

grub_probe-partmap_sunpc.o: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"partmap/sunpc.c\" -MD -c -o $@ $<
-include grub_probe-partmap_sunpc.d

grub_probe-partmap_gpt.o: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"partmap/gpt.c\" -MD -c -o $@ $<
-include grub_probe-partmap_gpt.d

grub_probe-kern_fs.o: kern/fs.c $(kern/fs.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/fs.c\" -MD -c -o $@ $<
-include grub_probe-kern_fs.d

grub_probe-kern_env.o: kern/env.c $(kern/env.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"kern/env.c\" -MD -c -o $@ $<
-include grub_probe-kern_env.d

grub_probe-fs_fshelp.o: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"fs/fshelp.c\" -MD -c -o $@ $<
-include grub_probe-fs_fshelp.d

grub_probe-disk_raid.o: disk/raid.c $(disk/raid.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"disk/raid.c\" -MD -c -o $@ $<
-include grub_probe-disk_raid.d

grub_probe-disk_raid5_recover.o: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"disk/raid5_recover.c\" -MD -c -o $@ $<
-include grub_probe-disk_raid5_recover.d

grub_probe-disk_raid6_recover.o: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"disk/raid6_recover.c\" -MD -c -o $@ $<
-include grub_probe-disk_raid6_recover.d

grub_probe-disk_mdraid_linux.o: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"disk/mdraid_linux.c\" -MD -c -o $@ $<
-include grub_probe-disk_mdraid_linux.d

grub_probe-disk_lvm.o: disk/lvm.c $(disk/lvm.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"disk/lvm.c\" -MD -c -o $@ $<
-include grub_probe-disk_lvm.d

grub_probe-grub_probe_init.o: grub_probe_init.c $(grub_probe_init.c_DEPENDENCIES)
	$(CC) -I. -I$(srcdir)/. $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_probe_CFLAGS) -DGRUB_FILE=\"grub_probe_init.c\" -MD -c -o $@ $<
-include grub_probe-grub_probe_init.d

grub_probe_CFLAGS = -I$(GRUB_CONTRIB)/zfs/include

ifeq ($(enable_grub_fstest), yes)
bin_UTILITIES += grub-fstest
endif

# For grub-fstest.
util/grub-fstest.c_DEPENDENCIES = grub_fstest_init.h
grub_fstest_SOURCES = gnulib/progname.c util/grub-fstest.c kern/emu/hostfs.c \
	util/misc.c kern/emu/misc.c kern/emu/mm.c 	\
	kern/file.c kern/device.c kern/disk.c kern/err.c kern/misc.c	\
	disk/host.c disk/loopback.c kern/list.c kern/command.c		\
	lib/arg.c commands/extcmd.c normal/datetime.c normal/misc.c	\
	lib/hexdump.c lib/crc.c commands/blocklist.c commands/ls.c 	\
	\
	fs/affs.c fs/cpio.c fs/fat.c fs/ext2.c fs/hfs.c			\
	fs/hfsplus.c fs/iso9660.c fs/udf.c fs/jfs.c fs/minix.c		\
	fs/nilfs2.c fs/ntfs.c fs/ntfscomp.c fs/reiserfs.c fs/sfs.c	\
	fs/ufs.c fs/ufs2.c fs/xfs.c fs/afs.c fs/afs_be.c fs/befs.c 	\
	fs/befs_be.c fs/tar.c			\
	\
	$(GRUB_CONTRIB)/zfs/zfs.c \
	$(GRUB_CONTRIB)/zfs/zfs_lzjb.c \
	$(GRUB_CONTRIB)/zfs/zfs_sha256.c \
	$(GRUB_CONTRIB)/zfs/zfs_fletcher.c \
	\
	kern/partition.c partmap/msdos.c partmap/bsdlabel.c 		\
	partmap/apple.c partmap/sun.c partmap/sunpc.c partmap/gpt.c	\
	kern/fs.c kern/env.c fs/fshelp.c disk/raid.c			\
	disk/raid5_recover.c disk/raid6_recover.c 			\
	disk/mdraid_linux.c disk/dmraid_nvidia.c disk/lvm.c 		\
	grub_fstest_init.c

clean-utility-grub-fstest.1:
	rm -f grub-fstest$(EXEEXT) grub_fstest-gnulib_progname.o grub_fstest-util_grub_fstest.o grub_fstest-kern_emu_hostfs.o grub_fstest-util_misc.o grub_fstest-kern_emu_misc.o grub_fstest-kern_emu_mm.o grub_fstest-kern_file.o grub_fstest-kern_device.o grub_fstest-kern_disk.o grub_fstest-kern_err.o grub_fstest-kern_misc.o grub_fstest-disk_host.o grub_fstest-disk_loopback.o grub_fstest-kern_list.o grub_fstest-kern_command.o grub_fstest-lib_arg.o grub_fstest-commands_extcmd.o grub_fstest-normal_datetime.o grub_fstest-normal_misc.o grub_fstest-lib_hexdump.o grub_fstest-lib_crc.o grub_fstest-commands_blocklist.o grub_fstest-commands_ls.o grub_fstest-fs_affs.o grub_fstest-fs_cpio.o grub_fstest-fs_fat.o grub_fstest-fs_ext2.o grub_fstest-fs_hfs.o grub_fstest-fs_hfsplus.o grub_fstest-fs_iso9660.o grub_fstest-fs_udf.o grub_fstest-fs_jfs.o grub_fstest-fs_minix.o grub_fstest-fs_nilfs2.o grub_fstest-fs_ntfs.o grub_fstest-fs_ntfscomp.o grub_fstest-fs_reiserfs.o grub_fstest-fs_sfs.o grub_fstest-fs_ufs.o grub_fstest-fs_ufs2.o grub_fstest-fs_xfs.o grub_fstest-fs_afs.o grub_fstest-fs_afs_be.o grub_fstest-fs_befs.o grub_fstest-fs_befs_be.o grub_fstest-fs_tar.o grub_fstest-__GRUB_CONTRIB__zfs_zfs.o grub_fstest-__GRUB_CONTRIB__zfs_zfs_lzjb.o grub_fstest-__GRUB_CONTRIB__zfs_zfs_sha256.o grub_fstest-__GRUB_CONTRIB__zfs_zfs_fletcher.o grub_fstest-kern_partition.o grub_fstest-partmap_msdos.o grub_fstest-partmap_bsdlabel.o grub_fstest-partmap_apple.o grub_fstest-partmap_sun.o grub_fstest-partmap_sunpc.o grub_fstest-partmap_gpt.o grub_fstest-kern_fs.o grub_fstest-kern_env.o grub_fstest-fs_fshelp.o grub_fstest-disk_raid.o grub_fstest-disk_raid5_recover.o grub_fstest-disk_raid6_recover.o grub_fstest-disk_mdraid_linux.o grub_fstest-disk_dmraid_nvidia.o grub_fstest-disk_lvm.o grub_fstest-grub_fstest_init.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-fstest.1

mostlyclean-utility-grub-fstest.1:
	rm -f grub_fstest-gnulib_progname.d grub_fstest-util_grub_fstest.d grub_fstest-kern_emu_hostfs.d grub_fstest-util_misc.d grub_fstest-kern_emu_misc.d grub_fstest-kern_emu_mm.d grub_fstest-kern_file.d grub_fstest-kern_device.d grub_fstest-kern_disk.d grub_fstest-kern_err.d grub_fstest-kern_misc.d grub_fstest-disk_host.d grub_fstest-disk_loopback.d grub_fstest-kern_list.d grub_fstest-kern_command.d grub_fstest-lib_arg.d grub_fstest-commands_extcmd.d grub_fstest-normal_datetime.d grub_fstest-normal_misc.d grub_fstest-lib_hexdump.d grub_fstest-lib_crc.d grub_fstest-commands_blocklist.d grub_fstest-commands_ls.d grub_fstest-fs_affs.d grub_fstest-fs_cpio.d grub_fstest-fs_fat.d grub_fstest-fs_ext2.d grub_fstest-fs_hfs.d grub_fstest-fs_hfsplus.d grub_fstest-fs_iso9660.d grub_fstest-fs_udf.d grub_fstest-fs_jfs.d grub_fstest-fs_minix.d grub_fstest-fs_nilfs2.d grub_fstest-fs_ntfs.d grub_fstest-fs_ntfscomp.d grub_fstest-fs_reiserfs.d grub_fstest-fs_sfs.d grub_fstest-fs_ufs.d grub_fstest-fs_ufs2.d grub_fstest-fs_xfs.d grub_fstest-fs_afs.d grub_fstest-fs_afs_be.d grub_fstest-fs_befs.d grub_fstest-fs_befs_be.d grub_fstest-fs_tar.d grub_fstest-__GRUB_CONTRIB__zfs_zfs.d grub_fstest-__GRUB_CONTRIB__zfs_zfs_lzjb.d grub_fstest-__GRUB_CONTRIB__zfs_zfs_sha256.d grub_fstest-__GRUB_CONTRIB__zfs_zfs_fletcher.d grub_fstest-kern_partition.d grub_fstest-partmap_msdos.d grub_fstest-partmap_bsdlabel.d grub_fstest-partmap_apple.d grub_fstest-partmap_sun.d grub_fstest-partmap_sunpc.d grub_fstest-partmap_gpt.d grub_fstest-kern_fs.d grub_fstest-kern_env.d grub_fstest-fs_fshelp.d grub_fstest-disk_raid.d grub_fstest-disk_raid5_recover.d grub_fstest-disk_raid6_recover.d grub_fstest-disk_mdraid_linux.d grub_fstest-disk_dmraid_nvidia.d grub_fstest-disk_lvm.d grub_fstest-grub_fstest_init.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-fstest.1

grub_fstest_OBJECTS += grub_fstest-gnulib_progname.o grub_fstest-util_grub_fstest.o grub_fstest-kern_emu_hostfs.o grub_fstest-util_misc.o grub_fstest-kern_emu_misc.o grub_fstest-kern_emu_mm.o grub_fstest-kern_file.o grub_fstest-kern_device.o grub_fstest-kern_disk.o grub_fstest-kern_err.o grub_fstest-kern_misc.o grub_fstest-disk_host.o grub_fstest-disk_loopback.o grub_fstest-kern_list.o grub_fstest-kern_command.o grub_fstest-lib_arg.o grub_fstest-commands_extcmd.o grub_fstest-normal_datetime.o grub_fstest-normal_misc.o grub_fstest-lib_hexdump.o grub_fstest-lib_crc.o grub_fstest-commands_blocklist.o grub_fstest-commands_ls.o grub_fstest-fs_affs.o grub_fstest-fs_cpio.o grub_fstest-fs_fat.o grub_fstest-fs_ext2.o grub_fstest-fs_hfs.o grub_fstest-fs_hfsplus.o grub_fstest-fs_iso9660.o grub_fstest-fs_udf.o grub_fstest-fs_jfs.o grub_fstest-fs_minix.o grub_fstest-fs_nilfs2.o grub_fstest-fs_ntfs.o grub_fstest-fs_ntfscomp.o grub_fstest-fs_reiserfs.o grub_fstest-fs_sfs.o grub_fstest-fs_ufs.o grub_fstest-fs_ufs2.o grub_fstest-fs_xfs.o grub_fstest-fs_afs.o grub_fstest-fs_afs_be.o grub_fstest-fs_befs.o grub_fstest-fs_befs_be.o grub_fstest-fs_tar.o grub_fstest-__GRUB_CONTRIB__zfs_zfs.o grub_fstest-__GRUB_CONTRIB__zfs_zfs_lzjb.o grub_fstest-__GRUB_CONTRIB__zfs_zfs_sha256.o grub_fstest-__GRUB_CONTRIB__zfs_zfs_fletcher.o grub_fstest-kern_partition.o grub_fstest-partmap_msdos.o grub_fstest-partmap_bsdlabel.o grub_fstest-partmap_apple.o grub_fstest-partmap_sun.o grub_fstest-partmap_sunpc.o grub_fstest-partmap_gpt.o grub_fstest-kern_fs.o grub_fstest-kern_env.o grub_fstest-fs_fshelp.o grub_fstest-disk_raid.o grub_fstest-disk_raid5_recover.o grub_fstest-disk_raid6_recover.o grub_fstest-disk_mdraid_linux.o grub_fstest-disk_dmraid_nvidia.o grub_fstest-disk_lvm.o grub_fstest-grub_fstest_init.o

grub_fstest-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_fstest-gnulib_progname.d

grub_fstest-util_grub_fstest.o: util/grub-fstest.c $(util/grub-fstest.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"util/grub-fstest.c\" -MD -c -o $@ $<
-include grub_fstest-util_grub_fstest.d

grub_fstest-kern_emu_hostfs.o: kern/emu/hostfs.c $(kern/emu/hostfs.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/emu/hostfs.c\" -MD -c -o $@ $<
-include grub_fstest-kern_emu_hostfs.d

grub_fstest-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_fstest-util_misc.d

grub_fstest-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_fstest-kern_emu_misc.d

grub_fstest-kern_emu_mm.o: kern/emu/mm.c $(kern/emu/mm.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/emu/mm.c\" -MD -c -o $@ $<
-include grub_fstest-kern_emu_mm.d

grub_fstest-kern_file.o: kern/file.c $(kern/file.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/file.c\" -MD -c -o $@ $<
-include grub_fstest-kern_file.d

grub_fstest-kern_device.o: kern/device.c $(kern/device.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/device.c\" -MD -c -o $@ $<
-include grub_fstest-kern_device.d

grub_fstest-kern_disk.o: kern/disk.c $(kern/disk.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/disk.c\" -MD -c -o $@ $<
-include grub_fstest-kern_disk.d

grub_fstest-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<
-include grub_fstest-kern_err.d

grub_fstest-kern_misc.o: kern/misc.c $(kern/misc.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/misc.c\" -MD -c -o $@ $<
-include grub_fstest-kern_misc.d

grub_fstest-disk_host.o: disk/host.c $(disk/host.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"disk/host.c\" -MD -c -o $@ $<
-include grub_fstest-disk_host.d

grub_fstest-disk_loopback.o: disk/loopback.c $(disk/loopback.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"disk/loopback.c\" -MD -c -o $@ $<
-include grub_fstest-disk_loopback.d

grub_fstest-kern_list.o: kern/list.c $(kern/list.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/list.c\" -MD -c -o $@ $<
-include grub_fstest-kern_list.d

grub_fstest-kern_command.o: kern/command.c $(kern/command.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/command.c\" -MD -c -o $@ $<
-include grub_fstest-kern_command.d

grub_fstest-lib_arg.o: lib/arg.c $(lib/arg.c_DEPENDENCIES)
	$(CC) -Ilib -I$(srcdir)/lib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"lib/arg.c\" -MD -c -o $@ $<
-include grub_fstest-lib_arg.d

grub_fstest-commands_extcmd.o: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES)
	$(CC) -Icommands -I$(srcdir)/commands $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"commands/extcmd.c\" -MD -c -o $@ $<
-include grub_fstest-commands_extcmd.d

grub_fstest-normal_datetime.o: normal/datetime.c $(normal/datetime.c_DEPENDENCIES)
	$(CC) -Inormal -I$(srcdir)/normal $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"normal/datetime.c\" -MD -c -o $@ $<
-include grub_fstest-normal_datetime.d

grub_fstest-normal_misc.o: normal/misc.c $(normal/misc.c_DEPENDENCIES)
	$(CC) -Inormal -I$(srcdir)/normal $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"normal/misc.c\" -MD -c -o $@ $<
-include grub_fstest-normal_misc.d

grub_fstest-lib_hexdump.o: lib/hexdump.c $(lib/hexdump.c_DEPENDENCIES)
	$(CC) -Ilib -I$(srcdir)/lib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"lib/hexdump.c\" -MD -c -o $@ $<
-include grub_fstest-lib_hexdump.d

grub_fstest-lib_crc.o: lib/crc.c $(lib/crc.c_DEPENDENCIES)
	$(CC) -Ilib -I$(srcdir)/lib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"lib/crc.c\" -MD -c -o $@ $<
-include grub_fstest-lib_crc.d

grub_fstest-commands_blocklist.o: commands/blocklist.c $(commands/blocklist.c_DEPENDENCIES)
	$(CC) -Icommands -I$(srcdir)/commands $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"commands/blocklist.c\" -MD -c -o $@ $<
-include grub_fstest-commands_blocklist.d

grub_fstest-commands_ls.o: commands/ls.c $(commands/ls.c_DEPENDENCIES)
	$(CC) -Icommands -I$(srcdir)/commands $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"commands/ls.c\" -MD -c -o $@ $<
-include grub_fstest-commands_ls.d

grub_fstest-fs_affs.o: fs/affs.c $(fs/affs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/affs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_affs.d

grub_fstest-fs_cpio.o: fs/cpio.c $(fs/cpio.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/cpio.c\" -MD -c -o $@ $<
-include grub_fstest-fs_cpio.d

grub_fstest-fs_fat.o: fs/fat.c $(fs/fat.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/fat.c\" -MD -c -o $@ $<
-include grub_fstest-fs_fat.d

grub_fstest-fs_ext2.o: fs/ext2.c $(fs/ext2.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/ext2.c\" -MD -c -o $@ $<
-include grub_fstest-fs_ext2.d

grub_fstest-fs_hfs.o: fs/hfs.c $(fs/hfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/hfs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_hfs.d

grub_fstest-fs_hfsplus.o: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/hfsplus.c\" -MD -c -o $@ $<
-include grub_fstest-fs_hfsplus.d

grub_fstest-fs_iso9660.o: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/iso9660.c\" -MD -c -o $@ $<
-include grub_fstest-fs_iso9660.d

grub_fstest-fs_udf.o: fs/udf.c $(fs/udf.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/udf.c\" -MD -c -o $@ $<
-include grub_fstest-fs_udf.d

grub_fstest-fs_jfs.o: fs/jfs.c $(fs/jfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/jfs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_jfs.d

grub_fstest-fs_minix.o: fs/minix.c $(fs/minix.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/minix.c\" -MD -c -o $@ $<
-include grub_fstest-fs_minix.d

grub_fstest-fs_nilfs2.o: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/nilfs2.c\" -MD -c -o $@ $<
-include grub_fstest-fs_nilfs2.d

grub_fstest-fs_ntfs.o: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/ntfs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_ntfs.d

grub_fstest-fs_ntfscomp.o: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/ntfscomp.c\" -MD -c -o $@ $<
-include grub_fstest-fs_ntfscomp.d

grub_fstest-fs_reiserfs.o: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/reiserfs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_reiserfs.d

grub_fstest-fs_sfs.o: fs/sfs.c $(fs/sfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/sfs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_sfs.d

grub_fstest-fs_ufs.o: fs/ufs.c $(fs/ufs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/ufs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_ufs.d

grub_fstest-fs_ufs2.o: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/ufs2.c\" -MD -c -o $@ $<
-include grub_fstest-fs_ufs2.d

grub_fstest-fs_xfs.o: fs/xfs.c $(fs/xfs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/xfs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_xfs.d

grub_fstest-fs_afs.o: fs/afs.c $(fs/afs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/afs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_afs.d

grub_fstest-fs_afs_be.o: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/afs_be.c\" -MD -c -o $@ $<
-include grub_fstest-fs_afs_be.d

grub_fstest-fs_befs.o: fs/befs.c $(fs/befs.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/befs.c\" -MD -c -o $@ $<
-include grub_fstest-fs_befs.d

grub_fstest-fs_befs_be.o: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/befs_be.c\" -MD -c -o $@ $<
-include grub_fstest-fs_befs_be.d

grub_fstest-fs_tar.o: fs/tar.c $(fs/tar.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/tar.c\" -MD -c -o $@ $<
-include grub_fstest-fs_tar.d

grub_fstest-__GRUB_CONTRIB__zfs_zfs.o: $(GRUB_CONTRIB)/zfs/zfs.c $($(GRUB_CONTRIB)/zfs/zfs.c_DEPENDENCIES)
	$(CC) -I$(GRUB_CONTRIB)/zfs -I$(srcdir)/$(GRUB_CONTRIB)/zfs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"$(GRUB_CONTRIB)/zfs/zfs.c\" -MD -c -o $@ $<
-include grub_fstest-__GRUB_CONTRIB__zfs_zfs.d

grub_fstest-__GRUB_CONTRIB__zfs_zfs_lzjb.o: $(GRUB_CONTRIB)/zfs/zfs_lzjb.c $($(GRUB_CONTRIB)/zfs/zfs_lzjb.c_DEPENDENCIES)
	$(CC) -I$(GRUB_CONTRIB)/zfs -I$(srcdir)/$(GRUB_CONTRIB)/zfs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"$(GRUB_CONTRIB)/zfs/zfs_lzjb.c\" -MD -c -o $@ $<
-include grub_fstest-__GRUB_CONTRIB__zfs_zfs_lzjb.d

grub_fstest-__GRUB_CONTRIB__zfs_zfs_sha256.o: $(GRUB_CONTRIB)/zfs/zfs_sha256.c $($(GRUB_CONTRIB)/zfs/zfs_sha256.c_DEPENDENCIES)
	$(CC) -I$(GRUB_CONTRIB)/zfs -I$(srcdir)/$(GRUB_CONTRIB)/zfs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"$(GRUB_CONTRIB)/zfs/zfs_sha256.c\" -MD -c -o $@ $<
-include grub_fstest-__GRUB_CONTRIB__zfs_zfs_sha256.d

grub_fstest-__GRUB_CONTRIB__zfs_zfs_fletcher.o: $(GRUB_CONTRIB)/zfs/zfs_fletcher.c $($(GRUB_CONTRIB)/zfs/zfs_fletcher.c_DEPENDENCIES)
	$(CC) -I$(GRUB_CONTRIB)/zfs -I$(srcdir)/$(GRUB_CONTRIB)/zfs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"$(GRUB_CONTRIB)/zfs/zfs_fletcher.c\" -MD -c -o $@ $<
-include grub_fstest-__GRUB_CONTRIB__zfs_zfs_fletcher.d

grub_fstest-kern_partition.o: kern/partition.c $(kern/partition.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/partition.c\" -MD -c -o $@ $<
-include grub_fstest-kern_partition.d

grub_fstest-partmap_msdos.o: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"partmap/msdos.c\" -MD -c -o $@ $<
-include grub_fstest-partmap_msdos.d

grub_fstest-partmap_bsdlabel.o: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"partmap/bsdlabel.c\" -MD -c -o $@ $<
-include grub_fstest-partmap_bsdlabel.d

grub_fstest-partmap_apple.o: partmap/apple.c $(partmap/apple.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"partmap/apple.c\" -MD -c -o $@ $<
-include grub_fstest-partmap_apple.d

grub_fstest-partmap_sun.o: partmap/sun.c $(partmap/sun.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"partmap/sun.c\" -MD -c -o $@ $<
-include grub_fstest-partmap_sun.d

grub_fstest-partmap_sunpc.o: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"partmap/sunpc.c\" -MD -c -o $@ $<
-include grub_fstest-partmap_sunpc.d

grub_fstest-partmap_gpt.o: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES)
	$(CC) -Ipartmap -I$(srcdir)/partmap $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"partmap/gpt.c\" -MD -c -o $@ $<
-include grub_fstest-partmap_gpt.d

grub_fstest-kern_fs.o: kern/fs.c $(kern/fs.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/fs.c\" -MD -c -o $@ $<
-include grub_fstest-kern_fs.d

grub_fstest-kern_env.o: kern/env.c $(kern/env.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"kern/env.c\" -MD -c -o $@ $<
-include grub_fstest-kern_env.d

grub_fstest-fs_fshelp.o: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES)
	$(CC) -Ifs -I$(srcdir)/fs $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"fs/fshelp.c\" -MD -c -o $@ $<
-include grub_fstest-fs_fshelp.d

grub_fstest-disk_raid.o: disk/raid.c $(disk/raid.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"disk/raid.c\" -MD -c -o $@ $<
-include grub_fstest-disk_raid.d

grub_fstest-disk_raid5_recover.o: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"disk/raid5_recover.c\" -MD -c -o $@ $<
-include grub_fstest-disk_raid5_recover.d

grub_fstest-disk_raid6_recover.o: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"disk/raid6_recover.c\" -MD -c -o $@ $<
-include grub_fstest-disk_raid6_recover.d

grub_fstest-disk_mdraid_linux.o: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"disk/mdraid_linux.c\" -MD -c -o $@ $<
-include grub_fstest-disk_mdraid_linux.d

grub_fstest-disk_dmraid_nvidia.o: disk/dmraid_nvidia.c $(disk/dmraid_nvidia.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"disk/dmraid_nvidia.c\" -MD -c -o $@ $<
-include grub_fstest-disk_dmraid_nvidia.d

grub_fstest-disk_lvm.o: disk/lvm.c $(disk/lvm.c_DEPENDENCIES)
	$(CC) -Idisk -I$(srcdir)/disk $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"disk/lvm.c\" -MD -c -o $@ $<
-include grub_fstest-disk_lvm.d

grub_fstest-grub_fstest_init.o: grub_fstest_init.c $(grub_fstest_init.c_DEPENDENCIES)
	$(CC) -I. -I$(srcdir)/. $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_fstest_CFLAGS) -DGRUB_FILE=\"grub_fstest_init.c\" -MD -c -o $@ $<
-include grub_fstest-grub_fstest_init.d


# For grub-mkfont.
ifeq ($(enable_grub_mkfont), yes)
bin_UTILITIES += grub-mkfont
grub_mkfont_SOURCES = gnulib/progname.c util/grub-mkfont.c util/misc.c \
	unidata.c kern/emu/misc.c

clean-utility-grub-mkfont.1:
	rm -f grub-mkfont$(EXEEXT) grub_mkfont-gnulib_progname.o grub_mkfont-util_grub_mkfont.o grub_mkfont-util_misc.o grub_mkfont-unidata.o grub_mkfont-kern_emu_misc.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-mkfont.1

mostlyclean-utility-grub-mkfont.1:
	rm -f grub_mkfont-gnulib_progname.d grub_mkfont-util_grub_mkfont.d grub_mkfont-util_misc.d grub_mkfont-unidata.d grub_mkfont-kern_emu_misc.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-mkfont.1

grub_mkfont_OBJECTS += grub_mkfont-gnulib_progname.o grub_mkfont-util_grub_mkfont.o grub_mkfont-util_misc.o grub_mkfont-unidata.o grub_mkfont-kern_emu_misc.o

grub_mkfont-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkfont_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_mkfont-gnulib_progname.d

grub_mkfont-util_grub_mkfont.o: util/grub-mkfont.c $(util/grub-mkfont.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkfont_CFLAGS) -DGRUB_FILE=\"util/grub-mkfont.c\" -MD -c -o $@ $<
-include grub_mkfont-util_grub_mkfont.d

grub_mkfont-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkfont_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_mkfont-util_misc.d

grub_mkfont-unidata.o: unidata.c $(unidata.c_DEPENDENCIES)
	$(CC) -I. -I$(srcdir)/. $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkfont_CFLAGS) -DGRUB_FILE=\"unidata.c\" -MD -c -o $@ $<
-include grub_mkfont-unidata.d

grub_mkfont-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkfont_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_mkfont-kern_emu_misc.d

grub_mkfont_CFLAGS = $(freetype_cflags)
grub_mkfont_LDFLAGS = $(freetype_libs)
endif

# For grub-mkrelpath.
bin_UTILITIES += grub-mkrelpath
grub_mkrelpath_SOURCES = gnulib/progname.c util/grub-mkrelpath.c util/misc.c kern/emu/misc.c

clean-utility-grub-mkrelpath.1:
	rm -f grub-mkrelpath$(EXEEXT) grub_mkrelpath-gnulib_progname.o grub_mkrelpath-util_grub_mkrelpath.o grub_mkrelpath-util_misc.o grub_mkrelpath-kern_emu_misc.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-mkrelpath.1

mostlyclean-utility-grub-mkrelpath.1:
	rm -f grub_mkrelpath-gnulib_progname.d grub_mkrelpath-util_grub_mkrelpath.d grub_mkrelpath-util_misc.d grub_mkrelpath-kern_emu_misc.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-mkrelpath.1

grub_mkrelpath_OBJECTS += grub_mkrelpath-gnulib_progname.o grub_mkrelpath-util_grub_mkrelpath.o grub_mkrelpath-util_misc.o grub_mkrelpath-kern_emu_misc.o

grub_mkrelpath-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkrelpath_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_mkrelpath-gnulib_progname.d

grub_mkrelpath-util_grub_mkrelpath.o: util/grub-mkrelpath.c $(util/grub-mkrelpath.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkrelpath_CFLAGS) -DGRUB_FILE=\"util/grub-mkrelpath.c\" -MD -c -o $@ $<
-include grub_mkrelpath-util_grub_mkrelpath.d

grub_mkrelpath-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkrelpath_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_mkrelpath-util_misc.d

grub_mkrelpath-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkrelpath_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_mkrelpath-kern_emu_misc.d


bin_UTILITIES += grub-bin2h
grub_bin2h_SOURCES = gnulib/progname.c util/bin2h.c

clean-utility-grub-bin2h.1:
	rm -f grub-bin2h$(EXEEXT) grub_bin2h-gnulib_progname.o grub_bin2h-util_bin2h.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-bin2h.1

mostlyclean-utility-grub-bin2h.1:
	rm -f grub_bin2h-gnulib_progname.d grub_bin2h-util_bin2h.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-bin2h.1

grub_bin2h_OBJECTS += grub_bin2h-gnulib_progname.o grub_bin2h-util_bin2h.o

grub_bin2h-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_bin2h_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_bin2h-gnulib_progname.d

grub_bin2h-util_bin2h.o: util/bin2h.c $(util/bin2h.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_bin2h_CFLAGS) -DGRUB_FILE=\"util/bin2h.c\" -MD -c -o $@ $<
-include grub_bin2h-util_bin2h.d


# For the lexer.
grub_script.yy.c grub_script.yy.h: script/yylex.l
	$(LEX) -o grub_script.yy.c --header-file=grub_script.yy.h $(srcdir)/script/yylex.l
DISTCLEANFILES += grub_script.yy.c grub_script.yy.h

# For grub-script-check.
bin_UTILITIES += grub-script-check
grub_script_check_SOURCES = gnulib/progname.c gnulib/getdelim.c gnulib/getline.c \
	util/grub-script-check.c util/misc.c kern/emu/misc.c kern/emu/mm.c \
	script/main.c script/script.c script/function.c script/lexer.c \
	kern/err.c kern/list.c \
	kern/misc.c kern/env.c grub_script.tab.c \
	grub_script.yy.c

clean-utility-grub-script-check.1:
	rm -f grub-script-check$(EXEEXT) grub_script_check-gnulib_progname.o grub_script_check-gnulib_getdelim.o grub_script_check-gnulib_getline.o grub_script_check-util_grub_script_check.o grub_script_check-util_misc.o grub_script_check-kern_emu_misc.o grub_script_check-kern_emu_mm.o grub_script_check-script_main.o grub_script_check-script_script.o grub_script_check-script_function.o grub_script_check-script_lexer.o grub_script_check-kern_err.o grub_script_check-kern_list.o grub_script_check-kern_misc.o grub_script_check-kern_env.o grub_script_check-grub_script_tab.o grub_script_check-grub_script_yy.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-script-check.1

mostlyclean-utility-grub-script-check.1:
	rm -f grub_script_check-gnulib_progname.d grub_script_check-gnulib_getdelim.d grub_script_check-gnulib_getline.d grub_script_check-util_grub_script_check.d grub_script_check-util_misc.d grub_script_check-kern_emu_misc.d grub_script_check-kern_emu_mm.d grub_script_check-script_main.d grub_script_check-script_script.d grub_script_check-script_function.d grub_script_check-script_lexer.d grub_script_check-kern_err.d grub_script_check-kern_list.d grub_script_check-kern_misc.d grub_script_check-kern_env.d grub_script_check-grub_script_tab.d grub_script_check-grub_script_yy.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-script-check.1

grub_script_check_OBJECTS += grub_script_check-gnulib_progname.o grub_script_check-gnulib_getdelim.o grub_script_check-gnulib_getline.o grub_script_check-util_grub_script_check.o grub_script_check-util_misc.o grub_script_check-kern_emu_misc.o grub_script_check-kern_emu_mm.o grub_script_check-script_main.o grub_script_check-script_script.o grub_script_check-script_function.o grub_script_check-script_lexer.o grub_script_check-kern_err.o grub_script_check-kern_list.o grub_script_check-kern_misc.o grub_script_check-kern_env.o grub_script_check-grub_script_tab.o grub_script_check-grub_script_yy.o

grub_script_check-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_script_check-gnulib_progname.d

grub_script_check-gnulib_getdelim.o: gnulib/getdelim.c $(gnulib/getdelim.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"gnulib/getdelim.c\" -MD -c -o $@ $<
-include grub_script_check-gnulib_getdelim.d

grub_script_check-gnulib_getline.o: gnulib/getline.c $(gnulib/getline.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"gnulib/getline.c\" -MD -c -o $@ $<
-include grub_script_check-gnulib_getline.d

grub_script_check-util_grub_script_check.o: util/grub-script-check.c $(util/grub-script-check.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"util/grub-script-check.c\" -MD -c -o $@ $<
-include grub_script_check-util_grub_script_check.d

grub_script_check-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_script_check-util_misc.d

grub_script_check-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_script_check-kern_emu_misc.d

grub_script_check-kern_emu_mm.o: kern/emu/mm.c $(kern/emu/mm.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"kern/emu/mm.c\" -MD -c -o $@ $<
-include grub_script_check-kern_emu_mm.d

grub_script_check-script_main.o: script/main.c $(script/main.c_DEPENDENCIES)
	$(CC) -Iscript -I$(srcdir)/script $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"script/main.c\" -MD -c -o $@ $<
-include grub_script_check-script_main.d

grub_script_check-script_script.o: script/script.c $(script/script.c_DEPENDENCIES)
	$(CC) -Iscript -I$(srcdir)/script $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"script/script.c\" -MD -c -o $@ $<
-include grub_script_check-script_script.d

grub_script_check-script_function.o: script/function.c $(script/function.c_DEPENDENCIES)
	$(CC) -Iscript -I$(srcdir)/script $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"script/function.c\" -MD -c -o $@ $<
-include grub_script_check-script_function.d

grub_script_check-script_lexer.o: script/lexer.c $(script/lexer.c_DEPENDENCIES)
	$(CC) -Iscript -I$(srcdir)/script $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"script/lexer.c\" -MD -c -o $@ $<
-include grub_script_check-script_lexer.d

grub_script_check-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<
-include grub_script_check-kern_err.d

grub_script_check-kern_list.o: kern/list.c $(kern/list.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"kern/list.c\" -MD -c -o $@ $<
-include grub_script_check-kern_list.d

grub_script_check-kern_misc.o: kern/misc.c $(kern/misc.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"kern/misc.c\" -MD -c -o $@ $<
-include grub_script_check-kern_misc.d

grub_script_check-kern_env.o: kern/env.c $(kern/env.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"kern/env.c\" -MD -c -o $@ $<
-include grub_script_check-kern_env.d

grub_script_check-grub_script_tab.o: grub_script.tab.c $(grub_script.tab.c_DEPENDENCIES)
	$(CC) -I. -I$(srcdir)/. $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"grub_script.tab.c\" -MD -c -o $@ $<
-include grub_script_check-grub_script_tab.d

grub_script_check-grub_script_yy.o: grub_script.yy.c $(grub_script.yy.c_DEPENDENCIES)
	$(CC) -I. -I$(srcdir)/. $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_script_check_CFLAGS) -DGRUB_FILE=\"grub_script.yy.c\" -MD -c -o $@ $<
-include grub_script_check-grub_script_yy.d

grub_script_check_CFLAGS = $(GNULIB_UTIL_CFLAGS)
grub_script_check_DEPENDENCIES = grub_script.tab.h
MOSTLYCLEANFILES += symlist.c kernel_syms.lst
DEFSYMFILES += kernel_syms.lst

kernel_img_HEADERS += boot.h cache.h device.h disk.h dl.h elf.h elfload.h \
	env.h err.h file.h fs.h kernel.h loader.h misc.h mm.h net.h parser.h \
	partition.h msdos_partition.h reader.h symbol.h term.h time.h types.h \
	list.h command.h i18n.h env_private.h libgcc.h

ifneq ($(platform), emu)
kernel_img_HEADERS += machine/memory.h machine/loader.h
endif

symlist.c: $(addprefix include/grub/,$(kernel_img_HEADERS)) config.h gensymlist.sh
	/bin/sh gensymlist.sh $(filter %.h,$^) > $@ || (rm -f $@; exit 1)

kernel_syms.lst: $(addprefix include/grub/,$(kernel_img_HEADERS)) config.h genkernsyms.sh
	/bin/sh genkernsyms.sh $(filter %.h,$^) > $@ || (rm -f $@; exit 1)

# For the parser.
grub_script.tab.c grub_script.tab.h: script/parser.y
	$(YACC) -d -p grub_script_yy -b grub_script $(srcdir)/script/parser.y
DISTCLEANFILES += grub_script.tab.c grub_script.tab.h

# For grub-probe.
grub_probe_init.lst: geninit.sh $(filter-out grub_probe_init.c,$(grub_probe_SOURCES))
	rm -f $@; grep GRUB_MOD_INIT $(filter %.c,$^) /dev/null > $@
DISTCLEANFILES += grub_probe_init.lst

grub_probe_init.h: grub_probe_init.lst $(filter-out grub_probe_init.c,$(grub_probe_SOURCES)) geninitheader.sh
	rm -f $@; sh $(srcdir)/geninitheader.sh $< > $@
DISTCLEANFILES += grub_probe_init.h

grub_probe_init.c: grub_probe_init.lst $(filter-out grub_probe_init.c,$(grub_probe_SOURCES)) geninit.sh grub_probe_init.h
	rm -f $@; sh $(srcdir)/geninit.sh $< $(filter %.c,$^) > $@
DISTCLEANFILES += grub_probe_init.c

# For grub-setup.
grub_setup_init.lst: geninit.sh $(filter-out grub_setup_init.c,$(grub_setup_SOURCES))
	rm -f $@; grep GRUB_MOD_INIT $(filter %.c,$^) /dev/null > $@
DISTCLEANFILES += grub_setup_init.lst

grub_setup_init.h: grub_setup_init.lst $(filter-out grub_setup_init.c,$(grub_setup_SOURCES)) geninitheader.sh
	rm -f $@; sh $(srcdir)/geninitheader.sh $< > $@
DISTCLEANFILES += grub_setup_init.h

grub_setup_init.c: grub_setup_init.lst $(filter-out grub_setup_init.c,$(grub_setup_SOURCES)) geninit.sh grub_setup_init.h
	rm -f $@; sh $(srcdir)/geninit.sh $< $(filter %.c,$^) > $@
DISTCLEANFILES += grub_setup_init.c

# For grub-fstest.
grub_fstest_init.lst: geninit.sh $(filter-out grub_fstest_init.c,$(grub_fstest_SOURCES))
	rm -f $@; grep GRUB_MOD_INIT $(filter %.c,$^) /dev/null > $@
DISTCLEANFILES += grub_fstest_init.lst

grub_fstest_init.h: grub_fstest_init.lst $(filter-out grub_fstest_init.c,$(grub_fstest_SOURCES)) geninitheader.sh
	rm -f $@; sh $(srcdir)/geninitheader.sh $< > $@
DISTCLEANFILES += grub_fstest_init.h

grub_fstest_init.c: grub_fstest_init.lst $(filter-out grub_fstest_init.c,$(grub_fstest_SOURCES)) geninit.sh grub_fstest_init.h
	rm -f $@; sh $(srcdir)/geninit.sh $< $(filter %.c,$^) > $@
DISTCLEANFILES += grub_fstest_init.c

# for grub-editenv
bin_UTILITIES += grub-editenv
grub_editenv_SOURCES = gnulib/progname.c util/grub-editenv.c lib/envblk.c util/misc.c kern/emu/misc.c kern/emu/mm.c kern/misc.c kern/err.c

clean-utility-grub-editenv.1:
	rm -f grub-editenv$(EXEEXT) grub_editenv-gnulib_progname.o grub_editenv-util_grub_editenv.o grub_editenv-lib_envblk.o grub_editenv-util_misc.o grub_editenv-kern_emu_misc.o grub_editenv-kern_emu_mm.o grub_editenv-kern_misc.o grub_editenv-kern_err.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-editenv.1

mostlyclean-utility-grub-editenv.1:
	rm -f grub_editenv-gnulib_progname.d grub_editenv-util_grub_editenv.d grub_editenv-lib_envblk.d grub_editenv-util_misc.d grub_editenv-kern_emu_misc.d grub_editenv-kern_emu_mm.d grub_editenv-kern_misc.d grub_editenv-kern_err.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-editenv.1

grub_editenv_OBJECTS += grub_editenv-gnulib_progname.o grub_editenv-util_grub_editenv.o grub_editenv-lib_envblk.o grub_editenv-util_misc.o grub_editenv-kern_emu_misc.o grub_editenv-kern_emu_mm.o grub_editenv-kern_misc.o grub_editenv-kern_err.o

grub_editenv-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_editenv_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_editenv-gnulib_progname.d

grub_editenv-util_grub_editenv.o: util/grub-editenv.c $(util/grub-editenv.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_editenv_CFLAGS) -DGRUB_FILE=\"util/grub-editenv.c\" -MD -c -o $@ $<
-include grub_editenv-util_grub_editenv.d

grub_editenv-lib_envblk.o: lib/envblk.c $(lib/envblk.c_DEPENDENCIES)
	$(CC) -Ilib -I$(srcdir)/lib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_editenv_CFLAGS) -DGRUB_FILE=\"lib/envblk.c\" -MD -c -o $@ $<
-include grub_editenv-lib_envblk.d

grub_editenv-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_editenv_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_editenv-util_misc.d

grub_editenv-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_editenv_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_editenv-kern_emu_misc.d

grub_editenv-kern_emu_mm.o: kern/emu/mm.c $(kern/emu/mm.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_editenv_CFLAGS) -DGRUB_FILE=\"kern/emu/mm.c\" -MD -c -o $@ $<
-include grub_editenv-kern_emu_mm.d

grub_editenv-kern_misc.o: kern/misc.c $(kern/misc.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_editenv_CFLAGS) -DGRUB_FILE=\"kern/misc.c\" -MD -c -o $@ $<
-include grub_editenv-kern_misc.d

grub_editenv-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_editenv_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<
-include grub_editenv-kern_err.d

CLEANFILES += grub-editenv

# Needed for genmk.rb to work
ifeq (0,1)
bin_UTILITIES += grub-macho2img grub-pe2elf
endif

grub_pe2elf_SOURCES = gnulib/progname.c util/grub-pe2elf.c util/misc.c kern/emu/misc.c

clean-utility-grub-pe2elf.1:
	rm -f grub-pe2elf$(EXEEXT) grub_pe2elf-gnulib_progname.o grub_pe2elf-util_grub_pe2elf.o grub_pe2elf-util_misc.o grub_pe2elf-kern_emu_misc.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-pe2elf.1

mostlyclean-utility-grub-pe2elf.1:
	rm -f grub_pe2elf-gnulib_progname.d grub_pe2elf-util_grub_pe2elf.d grub_pe2elf-util_misc.d grub_pe2elf-kern_emu_misc.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-pe2elf.1

grub_pe2elf_OBJECTS += grub_pe2elf-gnulib_progname.o grub_pe2elf-util_grub_pe2elf.o grub_pe2elf-util_misc.o grub_pe2elf-kern_emu_misc.o

grub_pe2elf-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_pe2elf_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_pe2elf-gnulib_progname.d

grub_pe2elf-util_grub_pe2elf.o: util/grub-pe2elf.c $(util/grub-pe2elf.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_pe2elf_CFLAGS) -DGRUB_FILE=\"util/grub-pe2elf.c\" -MD -c -o $@ $<
-include grub_pe2elf-util_grub_pe2elf.d

grub_pe2elf-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_pe2elf_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_pe2elf-util_misc.d

grub_pe2elf-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_pe2elf_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_pe2elf-kern_emu_misc.d

CLEANFILES += grub-pe2elf

grub_macho2img_SOURCES = util/grub-macho2img.c

clean-utility-grub-macho2img.1:
	rm -f grub-macho2img$(EXEEXT) grub_macho2img-util_grub_macho2img.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-macho2img.1

mostlyclean-utility-grub-macho2img.1:
	rm -f grub_macho2img-util_grub_macho2img.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-macho2img.1

grub_macho2img_OBJECTS += grub_macho2img-util_grub_macho2img.o

grub_macho2img-util_grub_macho2img.o: util/grub-macho2img.c $(util/grub-macho2img.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_macho2img_CFLAGS) -DGRUB_FILE=\"util/grub-macho2img.c\" -MD -c -o $@ $<
-include grub_macho2img-util_grub_macho2img.d

CLEANFILES += grub-macho2img

# For grub-mkconfig
grub-mkconfig: util/grub-mkconfig.in config.status
	./config.status --file=$@:$<
	chmod +x $@
sbin_SCRIPTS += grub-mkconfig
CLEANFILES += grub-mkconfig

grub-mkconfig_lib: util/grub-mkconfig_lib.in config.status
	./config.status --file=$@:$<
	chmod +x $@
lib_SCRIPTS += grub-mkconfig_lib
CLEANFILES += grub-mkconfig_lib

update-grub_lib: util/update-grub_lib.in config.status
	./config.status --file=$@:$<
	chmod +x $@
lib_SCRIPTS += update-grub_lib
CLEANFILES += update-grub_lib

grub-gettext_lib: util/grub-gettext_lib.in config.status
	./config.status --file=$@:$<
	chmod +x $@
lib_DATA += grub-gettext_lib
CLEANFILES += grub-gettext_lib

%: util/grub.d/%.in config.status
	./config.status --file=$@:$<
	chmod +x $@
grub-mkconfig_SCRIPTS = 00_header 30_os-prober 40_custom 41_custom
ifneq (, $(host_kernel))
grub-mkconfig_SCRIPTS += 10_$(host_kernel)
endif
ifeq (linux, $(host_kernel))
grub-mkconfig_SCRIPTS += 20_linux_xen
endif

CLEANFILES += $(grub-mkconfig_SCRIPTS)

grub-mkconfig_DATA += util/grub.d/README

# For grub-set-default.
grub-set-default: util/grub-set-default.in config.status
	./config.status --file=$@:$<
	chmod +x $@
sbin_SCRIPTS += grub-set-default
CLEANFILES += grub-set-default

# For grub-reboot.
grub-reboot: util/grub-reboot.in config.status
	./config.status --file=$@:$<
	chmod +x $@
sbin_SCRIPTS += grub-reboot
CLEANFILES += grub-reboot

# Filing systems.
pkglib_MODULES += fshelp.mod fat.mod ufs1.mod ufs2.mod ext2.mod ntfs.mod \
	ntfscomp.mod minix.mod hfs.mod jfs.mod iso9660.mod xfs.mod	\
	affs.mod sfs.mod hfsplus.mod reiserfs.mod cpio.mod tar.mod	\
	udf.mod	afs.mod afs_be.mod befs.mod befs_be.mod

# For fshelp.mod.
fshelp_mod_SOURCES = fs/fshelp.c

clean-module-fshelp.mod.1:
	rm -f fshelp.mod mod-fshelp.o mod-fshelp.c pre-fshelp.o fshelp_mod-fs_fshelp.o und-fshelp.lst

CLEAN_MODULE_TARGETS += clean-module-fshelp.mod.1

clean-module-fshelp.mod-symbol.1:
	rm -f def-fshelp.lst

CLEAN_MODULE_TARGETS += clean-module-fshelp.mod-symbol.1
DEFSYMFILES += def-fshelp.lst
mostlyclean-module-fshelp.mod.1:
	rm -f fshelp_mod-fs_fshelp.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-fshelp.mod.1
UNDSYMFILES += und-fshelp.lst

ifeq ($(TARGET_NO_MODULES), yes)
fshelp.mod: pre-fshelp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(fshelp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-fshelp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
fshelp.mod: pre-fshelp.o mod-fshelp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(fshelp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-fshelp.o mod-fshelp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
fshelp.mod: pre-fshelp.o mod-fshelp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(fshelp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-fshelp.o mod-fshelp.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-fshelp.o: $(fshelp_mod_DEPENDENCIES) fshelp_mod-fs_fshelp.o
	-rm -f $@
	$(TARGET_CC) $(fshelp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ fshelp_mod-fs_fshelp.o

mod-fshelp.o: mod-fshelp.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(fshelp_mod_CFLAGS) -DGRUB_FILE=\"mod-fshelp.c\" -c -o $@ $<

mod-fshelp.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'fshelp' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-fshelp.lst: pre-fshelp.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 fshelp/' > $@
else
def-fshelp.lst: pre-fshelp.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 fshelp/' > $@
endif

und-fshelp.lst: pre-fshelp.o
	echo 'fshelp' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

fshelp_mod-fs_fshelp.o: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fshelp_mod_CFLAGS) -DGRUB_FILE=\"fs/fshelp.c\" -MD -c -o $@ $<
-include fshelp_mod-fs_fshelp.d

clean-module-fshelp_mod-fs_fshelp-extra.1:
	rm -f cmd-fshelp_mod-fs_fshelp.lst fs-fshelp_mod-fs_fshelp.lst partmap-fshelp_mod-fs_fshelp.lst handler-fshelp_mod-fs_fshelp.lst parttool-fshelp_mod-fs_fshelp.lst video-fshelp_mod-fs_fshelp.lst terminal-fshelp_mod-fs_fshelp.lst

CLEAN_MODULE_TARGETS += clean-module-fshelp_mod-fs_fshelp-extra.1

COMMANDFILES += cmd-fshelp_mod-fs_fshelp.lst
FSFILES += fs-fshelp_mod-fs_fshelp.lst
PARTTOOLFILES += parttool-fshelp_mod-fs_fshelp.lst
PARTMAPFILES += partmap-fshelp_mod-fs_fshelp.lst
HANDLERFILES += handler-fshelp_mod-fs_fshelp.lst
TERMINALFILES += terminal-fshelp_mod-fs_fshelp.lst
VIDEOFILES += video-fshelp_mod-fs_fshelp.lst

cmd-fshelp_mod-fs_fshelp.lst: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fshelp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh fshelp > $@ || (rm -f $@; exit 1)

fs-fshelp_mod-fs_fshelp.lst: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(fshelp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh fshelp > $@ || (rm -f $@; exit 1)

parttool-fshelp_mod-fs_fshelp.lst: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fshelp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh fshelp > $@ || (rm -f $@; exit 1)

partmap-fshelp_mod-fs_fshelp.lst: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(fshelp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh fshelp > $@ || (rm -f $@; exit 1)

handler-fshelp_mod-fs_fshelp.lst: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fshelp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh fshelp > $@ || (rm -f $@; exit 1)

terminal-fshelp_mod-fs_fshelp.lst: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fshelp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh fshelp > $@ || (rm -f $@; exit 1)

video-fshelp_mod-fs_fshelp.lst: fs/fshelp.c $(fs/fshelp.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(fshelp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh fshelp > $@ || (rm -f $@; exit 1)

fshelp_mod_CFLAGS = $(COMMON_CFLAGS)
fshelp_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For fat.mod.
fat_mod_SOURCES = fs/fat.c

clean-module-fat.mod.1:
	rm -f fat.mod mod-fat.o mod-fat.c pre-fat.o fat_mod-fs_fat.o und-fat.lst

CLEAN_MODULE_TARGETS += clean-module-fat.mod.1

clean-module-fat.mod-symbol.1:
	rm -f def-fat.lst

CLEAN_MODULE_TARGETS += clean-module-fat.mod-symbol.1
DEFSYMFILES += def-fat.lst
mostlyclean-module-fat.mod.1:
	rm -f fat_mod-fs_fat.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-fat.mod.1
UNDSYMFILES += und-fat.lst

ifeq ($(TARGET_NO_MODULES), yes)
fat.mod: pre-fat.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(fat_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-fat.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
fat.mod: pre-fat.o mod-fat.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(fat_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-fat.o mod-fat.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
fat.mod: pre-fat.o mod-fat.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(fat_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-fat.o mod-fat.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-fat.o: $(fat_mod_DEPENDENCIES) fat_mod-fs_fat.o
	-rm -f $@
	$(TARGET_CC) $(fat_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ fat_mod-fs_fat.o

mod-fat.o: mod-fat.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(fat_mod_CFLAGS) -DGRUB_FILE=\"mod-fat.c\" -c -o $@ $<

mod-fat.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'fat' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-fat.lst: pre-fat.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 fat/' > $@
else
def-fat.lst: pre-fat.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 fat/' > $@
endif

und-fat.lst: pre-fat.o
	echo 'fat' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

fat_mod-fs_fat.o: fs/fat.c $(fs/fat.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fat_mod_CFLAGS) -DGRUB_FILE=\"fs/fat.c\" -MD -c -o $@ $<
-include fat_mod-fs_fat.d

clean-module-fat_mod-fs_fat-extra.1:
	rm -f cmd-fat_mod-fs_fat.lst fs-fat_mod-fs_fat.lst partmap-fat_mod-fs_fat.lst handler-fat_mod-fs_fat.lst parttool-fat_mod-fs_fat.lst video-fat_mod-fs_fat.lst terminal-fat_mod-fs_fat.lst

CLEAN_MODULE_TARGETS += clean-module-fat_mod-fs_fat-extra.1

COMMANDFILES += cmd-fat_mod-fs_fat.lst
FSFILES += fs-fat_mod-fs_fat.lst
PARTTOOLFILES += parttool-fat_mod-fs_fat.lst
PARTMAPFILES += partmap-fat_mod-fs_fat.lst
HANDLERFILES += handler-fat_mod-fs_fat.lst
TERMINALFILES += terminal-fat_mod-fs_fat.lst
VIDEOFILES += video-fat_mod-fs_fat.lst

cmd-fat_mod-fs_fat.lst: fs/fat.c $(fs/fat.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh fat > $@ || (rm -f $@; exit 1)

fs-fat_mod-fs_fat.lst: fs/fat.c $(fs/fat.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(fat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh fat > $@ || (rm -f $@; exit 1)

parttool-fat_mod-fs_fat.lst: fs/fat.c $(fs/fat.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh fat > $@ || (rm -f $@; exit 1)

partmap-fat_mod-fs_fat.lst: fs/fat.c $(fs/fat.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(fat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh fat > $@ || (rm -f $@; exit 1)

handler-fat_mod-fs_fat.lst: fs/fat.c $(fs/fat.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh fat > $@ || (rm -f $@; exit 1)

terminal-fat_mod-fs_fat.lst: fs/fat.c $(fs/fat.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(fat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh fat > $@ || (rm -f $@; exit 1)

video-fat_mod-fs_fat.lst: fs/fat.c $(fs/fat.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(fat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh fat > $@ || (rm -f $@; exit 1)

fat_mod_CFLAGS = $(COMMON_CFLAGS)
fat_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For ufs1.mod.
ufs1_mod_SOURCES = fs/ufs.c

clean-module-ufs1.mod.1:
	rm -f ufs1.mod mod-ufs1.o mod-ufs1.c pre-ufs1.o ufs1_mod-fs_ufs.o und-ufs1.lst

CLEAN_MODULE_TARGETS += clean-module-ufs1.mod.1

clean-module-ufs1.mod-symbol.1:
	rm -f def-ufs1.lst

CLEAN_MODULE_TARGETS += clean-module-ufs1.mod-symbol.1
DEFSYMFILES += def-ufs1.lst
mostlyclean-module-ufs1.mod.1:
	rm -f ufs1_mod-fs_ufs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-ufs1.mod.1
UNDSYMFILES += und-ufs1.lst

ifeq ($(TARGET_NO_MODULES), yes)
ufs1.mod: pre-ufs1.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ufs1_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ufs1.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
ufs1.mod: pre-ufs1.o mod-ufs1.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ufs1_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ufs1.o mod-ufs1.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ufs1.mod: pre-ufs1.o mod-ufs1.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(ufs1_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-ufs1.o mod-ufs1.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-ufs1.o: $(ufs1_mod_DEPENDENCIES) ufs1_mod-fs_ufs.o
	-rm -f $@
	$(TARGET_CC) $(ufs1_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ ufs1_mod-fs_ufs.o

mod-ufs1.o: mod-ufs1.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(ufs1_mod_CFLAGS) -DGRUB_FILE=\"mod-ufs1.c\" -c -o $@ $<

mod-ufs1.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'ufs1' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-ufs1.lst: pre-ufs1.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 ufs1/' > $@
else
def-ufs1.lst: pre-ufs1.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 ufs1/' > $@
endif

und-ufs1.lst: pre-ufs1.o
	echo 'ufs1' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

ufs1_mod-fs_ufs.o: fs/ufs.c $(fs/ufs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs1_mod_CFLAGS) -DGRUB_FILE=\"fs/ufs.c\" -MD -c -o $@ $<
-include ufs1_mod-fs_ufs.d

clean-module-ufs1_mod-fs_ufs-extra.1:
	rm -f cmd-ufs1_mod-fs_ufs.lst fs-ufs1_mod-fs_ufs.lst partmap-ufs1_mod-fs_ufs.lst handler-ufs1_mod-fs_ufs.lst parttool-ufs1_mod-fs_ufs.lst video-ufs1_mod-fs_ufs.lst terminal-ufs1_mod-fs_ufs.lst

CLEAN_MODULE_TARGETS += clean-module-ufs1_mod-fs_ufs-extra.1

COMMANDFILES += cmd-ufs1_mod-fs_ufs.lst
FSFILES += fs-ufs1_mod-fs_ufs.lst
PARTTOOLFILES += parttool-ufs1_mod-fs_ufs.lst
PARTMAPFILES += partmap-ufs1_mod-fs_ufs.lst
HANDLERFILES += handler-ufs1_mod-fs_ufs.lst
TERMINALFILES += terminal-ufs1_mod-fs_ufs.lst
VIDEOFILES += video-ufs1_mod-fs_ufs.lst

cmd-ufs1_mod-fs_ufs.lst: fs/ufs.c $(fs/ufs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs1_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh ufs1 > $@ || (rm -f $@; exit 1)

fs-ufs1_mod-fs_ufs.lst: fs/ufs.c $(fs/ufs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ufs1_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh ufs1 > $@ || (rm -f $@; exit 1)

parttool-ufs1_mod-fs_ufs.lst: fs/ufs.c $(fs/ufs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs1_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh ufs1 > $@ || (rm -f $@; exit 1)

partmap-ufs1_mod-fs_ufs.lst: fs/ufs.c $(fs/ufs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ufs1_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh ufs1 > $@ || (rm -f $@; exit 1)

handler-ufs1_mod-fs_ufs.lst: fs/ufs.c $(fs/ufs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs1_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh ufs1 > $@ || (rm -f $@; exit 1)

terminal-ufs1_mod-fs_ufs.lst: fs/ufs.c $(fs/ufs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs1_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh ufs1 > $@ || (rm -f $@; exit 1)

video-ufs1_mod-fs_ufs.lst: fs/ufs.c $(fs/ufs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ufs1_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh ufs1 > $@ || (rm -f $@; exit 1)

ufs1_mod_CFLAGS = $(COMMON_CFLAGS)
ufs1_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For ufs2.mod.
ufs2_mod_SOURCES = fs/ufs2.c

clean-module-ufs2.mod.1:
	rm -f ufs2.mod mod-ufs2.o mod-ufs2.c pre-ufs2.o ufs2_mod-fs_ufs2.o und-ufs2.lst

CLEAN_MODULE_TARGETS += clean-module-ufs2.mod.1

clean-module-ufs2.mod-symbol.1:
	rm -f def-ufs2.lst

CLEAN_MODULE_TARGETS += clean-module-ufs2.mod-symbol.1
DEFSYMFILES += def-ufs2.lst
mostlyclean-module-ufs2.mod.1:
	rm -f ufs2_mod-fs_ufs2.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-ufs2.mod.1
UNDSYMFILES += und-ufs2.lst

ifeq ($(TARGET_NO_MODULES), yes)
ufs2.mod: pre-ufs2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ufs2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ufs2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
ufs2.mod: pre-ufs2.o mod-ufs2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ufs2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ufs2.o mod-ufs2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ufs2.mod: pre-ufs2.o mod-ufs2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(ufs2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-ufs2.o mod-ufs2.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-ufs2.o: $(ufs2_mod_DEPENDENCIES) ufs2_mod-fs_ufs2.o
	-rm -f $@
	$(TARGET_CC) $(ufs2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ ufs2_mod-fs_ufs2.o

mod-ufs2.o: mod-ufs2.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(ufs2_mod_CFLAGS) -DGRUB_FILE=\"mod-ufs2.c\" -c -o $@ $<

mod-ufs2.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'ufs2' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-ufs2.lst: pre-ufs2.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 ufs2/' > $@
else
def-ufs2.lst: pre-ufs2.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 ufs2/' > $@
endif

und-ufs2.lst: pre-ufs2.o
	echo 'ufs2' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

ufs2_mod-fs_ufs2.o: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs2_mod_CFLAGS) -DGRUB_FILE=\"fs/ufs2.c\" -MD -c -o $@ $<
-include ufs2_mod-fs_ufs2.d

clean-module-ufs2_mod-fs_ufs2-extra.1:
	rm -f cmd-ufs2_mod-fs_ufs2.lst fs-ufs2_mod-fs_ufs2.lst partmap-ufs2_mod-fs_ufs2.lst handler-ufs2_mod-fs_ufs2.lst parttool-ufs2_mod-fs_ufs2.lst video-ufs2_mod-fs_ufs2.lst terminal-ufs2_mod-fs_ufs2.lst

CLEAN_MODULE_TARGETS += clean-module-ufs2_mod-fs_ufs2-extra.1

COMMANDFILES += cmd-ufs2_mod-fs_ufs2.lst
FSFILES += fs-ufs2_mod-fs_ufs2.lst
PARTTOOLFILES += parttool-ufs2_mod-fs_ufs2.lst
PARTMAPFILES += partmap-ufs2_mod-fs_ufs2.lst
HANDLERFILES += handler-ufs2_mod-fs_ufs2.lst
TERMINALFILES += terminal-ufs2_mod-fs_ufs2.lst
VIDEOFILES += video-ufs2_mod-fs_ufs2.lst

cmd-ufs2_mod-fs_ufs2.lst: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh ufs2 > $@ || (rm -f $@; exit 1)

fs-ufs2_mod-fs_ufs2.lst: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ufs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh ufs2 > $@ || (rm -f $@; exit 1)

parttool-ufs2_mod-fs_ufs2.lst: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh ufs2 > $@ || (rm -f $@; exit 1)

partmap-ufs2_mod-fs_ufs2.lst: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ufs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh ufs2 > $@ || (rm -f $@; exit 1)

handler-ufs2_mod-fs_ufs2.lst: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh ufs2 > $@ || (rm -f $@; exit 1)

terminal-ufs2_mod-fs_ufs2.lst: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ufs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh ufs2 > $@ || (rm -f $@; exit 1)

video-ufs2_mod-fs_ufs2.lst: fs/ufs2.c $(fs/ufs2.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ufs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh ufs2 > $@ || (rm -f $@; exit 1)

ufs2_mod_CFLAGS = $(COMMON_CFLAGS)
ufs2_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For ext2.mod.
ext2_mod_SOURCES = fs/ext2.c

clean-module-ext2.mod.1:
	rm -f ext2.mod mod-ext2.o mod-ext2.c pre-ext2.o ext2_mod-fs_ext2.o und-ext2.lst

CLEAN_MODULE_TARGETS += clean-module-ext2.mod.1

clean-module-ext2.mod-symbol.1:
	rm -f def-ext2.lst

CLEAN_MODULE_TARGETS += clean-module-ext2.mod-symbol.1
DEFSYMFILES += def-ext2.lst
mostlyclean-module-ext2.mod.1:
	rm -f ext2_mod-fs_ext2.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-ext2.mod.1
UNDSYMFILES += und-ext2.lst

ifeq ($(TARGET_NO_MODULES), yes)
ext2.mod: pre-ext2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ext2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ext2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
ext2.mod: pre-ext2.o mod-ext2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ext2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ext2.o mod-ext2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ext2.mod: pre-ext2.o mod-ext2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(ext2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-ext2.o mod-ext2.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-ext2.o: $(ext2_mod_DEPENDENCIES) ext2_mod-fs_ext2.o
	-rm -f $@
	$(TARGET_CC) $(ext2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ ext2_mod-fs_ext2.o

mod-ext2.o: mod-ext2.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(ext2_mod_CFLAGS) -DGRUB_FILE=\"mod-ext2.c\" -c -o $@ $<

mod-ext2.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'ext2' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-ext2.lst: pre-ext2.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 ext2/' > $@
else
def-ext2.lst: pre-ext2.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 ext2/' > $@
endif

und-ext2.lst: pre-ext2.o
	echo 'ext2' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

ext2_mod-fs_ext2.o: fs/ext2.c $(fs/ext2.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ext2_mod_CFLAGS) -DGRUB_FILE=\"fs/ext2.c\" -MD -c -o $@ $<
-include ext2_mod-fs_ext2.d

clean-module-ext2_mod-fs_ext2-extra.1:
	rm -f cmd-ext2_mod-fs_ext2.lst fs-ext2_mod-fs_ext2.lst partmap-ext2_mod-fs_ext2.lst handler-ext2_mod-fs_ext2.lst parttool-ext2_mod-fs_ext2.lst video-ext2_mod-fs_ext2.lst terminal-ext2_mod-fs_ext2.lst

CLEAN_MODULE_TARGETS += clean-module-ext2_mod-fs_ext2-extra.1

COMMANDFILES += cmd-ext2_mod-fs_ext2.lst
FSFILES += fs-ext2_mod-fs_ext2.lst
PARTTOOLFILES += parttool-ext2_mod-fs_ext2.lst
PARTMAPFILES += partmap-ext2_mod-fs_ext2.lst
HANDLERFILES += handler-ext2_mod-fs_ext2.lst
TERMINALFILES += terminal-ext2_mod-fs_ext2.lst
VIDEOFILES += video-ext2_mod-fs_ext2.lst

cmd-ext2_mod-fs_ext2.lst: fs/ext2.c $(fs/ext2.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ext2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh ext2 > $@ || (rm -f $@; exit 1)

fs-ext2_mod-fs_ext2.lst: fs/ext2.c $(fs/ext2.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ext2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh ext2 > $@ || (rm -f $@; exit 1)

parttool-ext2_mod-fs_ext2.lst: fs/ext2.c $(fs/ext2.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ext2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh ext2 > $@ || (rm -f $@; exit 1)

partmap-ext2_mod-fs_ext2.lst: fs/ext2.c $(fs/ext2.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ext2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh ext2 > $@ || (rm -f $@; exit 1)

handler-ext2_mod-fs_ext2.lst: fs/ext2.c $(fs/ext2.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ext2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh ext2 > $@ || (rm -f $@; exit 1)

terminal-ext2_mod-fs_ext2.lst: fs/ext2.c $(fs/ext2.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ext2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh ext2 > $@ || (rm -f $@; exit 1)

video-ext2_mod-fs_ext2.lst: fs/ext2.c $(fs/ext2.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ext2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh ext2 > $@ || (rm -f $@; exit 1)

ext2_mod_CFLAGS = $(COMMON_CFLAGS)
ext2_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For ntfs.mod.
ntfs_mod_SOURCES = fs/ntfs.c

clean-module-ntfs.mod.1:
	rm -f ntfs.mod mod-ntfs.o mod-ntfs.c pre-ntfs.o ntfs_mod-fs_ntfs.o und-ntfs.lst

CLEAN_MODULE_TARGETS += clean-module-ntfs.mod.1

clean-module-ntfs.mod-symbol.1:
	rm -f def-ntfs.lst

CLEAN_MODULE_TARGETS += clean-module-ntfs.mod-symbol.1
DEFSYMFILES += def-ntfs.lst
mostlyclean-module-ntfs.mod.1:
	rm -f ntfs_mod-fs_ntfs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-ntfs.mod.1
UNDSYMFILES += und-ntfs.lst

ifeq ($(TARGET_NO_MODULES), yes)
ntfs.mod: pre-ntfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ntfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ntfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
ntfs.mod: pre-ntfs.o mod-ntfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ntfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ntfs.o mod-ntfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ntfs.mod: pre-ntfs.o mod-ntfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(ntfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-ntfs.o mod-ntfs.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-ntfs.o: $(ntfs_mod_DEPENDENCIES) ntfs_mod-fs_ntfs.o
	-rm -f $@
	$(TARGET_CC) $(ntfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ ntfs_mod-fs_ntfs.o

mod-ntfs.o: mod-ntfs.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(ntfs_mod_CFLAGS) -DGRUB_FILE=\"mod-ntfs.c\" -c -o $@ $<

mod-ntfs.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'ntfs' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-ntfs.lst: pre-ntfs.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 ntfs/' > $@
else
def-ntfs.lst: pre-ntfs.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 ntfs/' > $@
endif

und-ntfs.lst: pre-ntfs.o
	echo 'ntfs' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

ntfs_mod-fs_ntfs.o: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfs_mod_CFLAGS) -DGRUB_FILE=\"fs/ntfs.c\" -MD -c -o $@ $<
-include ntfs_mod-fs_ntfs.d

clean-module-ntfs_mod-fs_ntfs-extra.1:
	rm -f cmd-ntfs_mod-fs_ntfs.lst fs-ntfs_mod-fs_ntfs.lst partmap-ntfs_mod-fs_ntfs.lst handler-ntfs_mod-fs_ntfs.lst parttool-ntfs_mod-fs_ntfs.lst video-ntfs_mod-fs_ntfs.lst terminal-ntfs_mod-fs_ntfs.lst

CLEAN_MODULE_TARGETS += clean-module-ntfs_mod-fs_ntfs-extra.1

COMMANDFILES += cmd-ntfs_mod-fs_ntfs.lst
FSFILES += fs-ntfs_mod-fs_ntfs.lst
PARTTOOLFILES += parttool-ntfs_mod-fs_ntfs.lst
PARTMAPFILES += partmap-ntfs_mod-fs_ntfs.lst
HANDLERFILES += handler-ntfs_mod-fs_ntfs.lst
TERMINALFILES += terminal-ntfs_mod-fs_ntfs.lst
VIDEOFILES += video-ntfs_mod-fs_ntfs.lst

cmd-ntfs_mod-fs_ntfs.lst: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh ntfs > $@ || (rm -f $@; exit 1)

fs-ntfs_mod-fs_ntfs.lst: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ntfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh ntfs > $@ || (rm -f $@; exit 1)

parttool-ntfs_mod-fs_ntfs.lst: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh ntfs > $@ || (rm -f $@; exit 1)

partmap-ntfs_mod-fs_ntfs.lst: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ntfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh ntfs > $@ || (rm -f $@; exit 1)

handler-ntfs_mod-fs_ntfs.lst: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh ntfs > $@ || (rm -f $@; exit 1)

terminal-ntfs_mod-fs_ntfs.lst: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh ntfs > $@ || (rm -f $@; exit 1)

video-ntfs_mod-fs_ntfs.lst: fs/ntfs.c $(fs/ntfs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ntfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh ntfs > $@ || (rm -f $@; exit 1)

ntfs_mod_CFLAGS = $(COMMON_CFLAGS)
ntfs_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For ntfscomp.mod.
ntfscomp_mod_SOURCES = fs/ntfscomp.c

clean-module-ntfscomp.mod.1:
	rm -f ntfscomp.mod mod-ntfscomp.o mod-ntfscomp.c pre-ntfscomp.o ntfscomp_mod-fs_ntfscomp.o und-ntfscomp.lst

CLEAN_MODULE_TARGETS += clean-module-ntfscomp.mod.1

clean-module-ntfscomp.mod-symbol.1:
	rm -f def-ntfscomp.lst

CLEAN_MODULE_TARGETS += clean-module-ntfscomp.mod-symbol.1
DEFSYMFILES += def-ntfscomp.lst
mostlyclean-module-ntfscomp.mod.1:
	rm -f ntfscomp_mod-fs_ntfscomp.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-ntfscomp.mod.1
UNDSYMFILES += und-ntfscomp.lst

ifeq ($(TARGET_NO_MODULES), yes)
ntfscomp.mod: pre-ntfscomp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ntfscomp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ntfscomp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
ntfscomp.mod: pre-ntfscomp.o mod-ntfscomp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ntfscomp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ntfscomp.o mod-ntfscomp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ntfscomp.mod: pre-ntfscomp.o mod-ntfscomp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(ntfscomp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-ntfscomp.o mod-ntfscomp.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-ntfscomp.o: $(ntfscomp_mod_DEPENDENCIES) ntfscomp_mod-fs_ntfscomp.o
	-rm -f $@
	$(TARGET_CC) $(ntfscomp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ ntfscomp_mod-fs_ntfscomp.o

mod-ntfscomp.o: mod-ntfscomp.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(ntfscomp_mod_CFLAGS) -DGRUB_FILE=\"mod-ntfscomp.c\" -c -o $@ $<

mod-ntfscomp.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'ntfscomp' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-ntfscomp.lst: pre-ntfscomp.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 ntfscomp/' > $@
else
def-ntfscomp.lst: pre-ntfscomp.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 ntfscomp/' > $@
endif

und-ntfscomp.lst: pre-ntfscomp.o
	echo 'ntfscomp' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

ntfscomp_mod-fs_ntfscomp.o: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfscomp_mod_CFLAGS) -DGRUB_FILE=\"fs/ntfscomp.c\" -MD -c -o $@ $<
-include ntfscomp_mod-fs_ntfscomp.d

clean-module-ntfscomp_mod-fs_ntfscomp-extra.1:
	rm -f cmd-ntfscomp_mod-fs_ntfscomp.lst fs-ntfscomp_mod-fs_ntfscomp.lst partmap-ntfscomp_mod-fs_ntfscomp.lst handler-ntfscomp_mod-fs_ntfscomp.lst parttool-ntfscomp_mod-fs_ntfscomp.lst video-ntfscomp_mod-fs_ntfscomp.lst terminal-ntfscomp_mod-fs_ntfscomp.lst

CLEAN_MODULE_TARGETS += clean-module-ntfscomp_mod-fs_ntfscomp-extra.1

COMMANDFILES += cmd-ntfscomp_mod-fs_ntfscomp.lst
FSFILES += fs-ntfscomp_mod-fs_ntfscomp.lst
PARTTOOLFILES += parttool-ntfscomp_mod-fs_ntfscomp.lst
PARTMAPFILES += partmap-ntfscomp_mod-fs_ntfscomp.lst
HANDLERFILES += handler-ntfscomp_mod-fs_ntfscomp.lst
TERMINALFILES += terminal-ntfscomp_mod-fs_ntfscomp.lst
VIDEOFILES += video-ntfscomp_mod-fs_ntfscomp.lst

cmd-ntfscomp_mod-fs_ntfscomp.lst: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfscomp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh ntfscomp > $@ || (rm -f $@; exit 1)

fs-ntfscomp_mod-fs_ntfscomp.lst: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ntfscomp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh ntfscomp > $@ || (rm -f $@; exit 1)

parttool-ntfscomp_mod-fs_ntfscomp.lst: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfscomp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh ntfscomp > $@ || (rm -f $@; exit 1)

partmap-ntfscomp_mod-fs_ntfscomp.lst: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ntfscomp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh ntfscomp > $@ || (rm -f $@; exit 1)

handler-ntfscomp_mod-fs_ntfscomp.lst: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfscomp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh ntfscomp > $@ || (rm -f $@; exit 1)

terminal-ntfscomp_mod-fs_ntfscomp.lst: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ntfscomp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh ntfscomp > $@ || (rm -f $@; exit 1)

video-ntfscomp_mod-fs_ntfscomp.lst: fs/ntfscomp.c $(fs/ntfscomp.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ntfscomp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh ntfscomp > $@ || (rm -f $@; exit 1)

ntfscomp_mod_CFLAGS = $(COMMON_CFLAGS)
ntfscomp_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For minix.mod.
minix_mod_SOURCES = fs/minix.c

clean-module-minix.mod.1:
	rm -f minix.mod mod-minix.o mod-minix.c pre-minix.o minix_mod-fs_minix.o und-minix.lst

CLEAN_MODULE_TARGETS += clean-module-minix.mod.1

clean-module-minix.mod-symbol.1:
	rm -f def-minix.lst

CLEAN_MODULE_TARGETS += clean-module-minix.mod-symbol.1
DEFSYMFILES += def-minix.lst
mostlyclean-module-minix.mod.1:
	rm -f minix_mod-fs_minix.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-minix.mod.1
UNDSYMFILES += und-minix.lst

ifeq ($(TARGET_NO_MODULES), yes)
minix.mod: pre-minix.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(minix_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-minix.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
minix.mod: pre-minix.o mod-minix.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(minix_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-minix.o mod-minix.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
minix.mod: pre-minix.o mod-minix.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(minix_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-minix.o mod-minix.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-minix.o: $(minix_mod_DEPENDENCIES) minix_mod-fs_minix.o
	-rm -f $@
	$(TARGET_CC) $(minix_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ minix_mod-fs_minix.o

mod-minix.o: mod-minix.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(minix_mod_CFLAGS) -DGRUB_FILE=\"mod-minix.c\" -c -o $@ $<

mod-minix.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'minix' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-minix.lst: pre-minix.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 minix/' > $@
else
def-minix.lst: pre-minix.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 minix/' > $@
endif

und-minix.lst: pre-minix.o
	echo 'minix' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

minix_mod-fs_minix.o: fs/minix.c $(fs/minix.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minix_mod_CFLAGS) -DGRUB_FILE=\"fs/minix.c\" -MD -c -o $@ $<
-include minix_mod-fs_minix.d

clean-module-minix_mod-fs_minix-extra.1:
	rm -f cmd-minix_mod-fs_minix.lst fs-minix_mod-fs_minix.lst partmap-minix_mod-fs_minix.lst handler-minix_mod-fs_minix.lst parttool-minix_mod-fs_minix.lst video-minix_mod-fs_minix.lst terminal-minix_mod-fs_minix.lst

CLEAN_MODULE_TARGETS += clean-module-minix_mod-fs_minix-extra.1

COMMANDFILES += cmd-minix_mod-fs_minix.lst
FSFILES += fs-minix_mod-fs_minix.lst
PARTTOOLFILES += parttool-minix_mod-fs_minix.lst
PARTMAPFILES += partmap-minix_mod-fs_minix.lst
HANDLERFILES += handler-minix_mod-fs_minix.lst
TERMINALFILES += terminal-minix_mod-fs_minix.lst
VIDEOFILES += video-minix_mod-fs_minix.lst

cmd-minix_mod-fs_minix.lst: fs/minix.c $(fs/minix.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minix_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh minix > $@ || (rm -f $@; exit 1)

fs-minix_mod-fs_minix.lst: fs/minix.c $(fs/minix.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(minix_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh minix > $@ || (rm -f $@; exit 1)

parttool-minix_mod-fs_minix.lst: fs/minix.c $(fs/minix.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minix_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh minix > $@ || (rm -f $@; exit 1)

partmap-minix_mod-fs_minix.lst: fs/minix.c $(fs/minix.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(minix_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh minix > $@ || (rm -f $@; exit 1)

handler-minix_mod-fs_minix.lst: fs/minix.c $(fs/minix.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minix_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh minix > $@ || (rm -f $@; exit 1)

terminal-minix_mod-fs_minix.lst: fs/minix.c $(fs/minix.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minix_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh minix > $@ || (rm -f $@; exit 1)

video-minix_mod-fs_minix.lst: fs/minix.c $(fs/minix.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(minix_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh minix > $@ || (rm -f $@; exit 1)

minix_mod_CFLAGS = $(COMMON_CFLAGS)
minix_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For nilfs2.mod.
pkglib_MODULES += nilfs2.mod
nilfs2_mod_SOURCES = fs/nilfs2.c

clean-module-nilfs2.mod.1:
	rm -f nilfs2.mod mod-nilfs2.o mod-nilfs2.c pre-nilfs2.o nilfs2_mod-fs_nilfs2.o und-nilfs2.lst

CLEAN_MODULE_TARGETS += clean-module-nilfs2.mod.1

clean-module-nilfs2.mod-symbol.1:
	rm -f def-nilfs2.lst

CLEAN_MODULE_TARGETS += clean-module-nilfs2.mod-symbol.1
DEFSYMFILES += def-nilfs2.lst
mostlyclean-module-nilfs2.mod.1:
	rm -f nilfs2_mod-fs_nilfs2.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-nilfs2.mod.1
UNDSYMFILES += und-nilfs2.lst

ifeq ($(TARGET_NO_MODULES), yes)
nilfs2.mod: pre-nilfs2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(nilfs2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-nilfs2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
nilfs2.mod: pre-nilfs2.o mod-nilfs2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(nilfs2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-nilfs2.o mod-nilfs2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
nilfs2.mod: pre-nilfs2.o mod-nilfs2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(nilfs2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-nilfs2.o mod-nilfs2.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-nilfs2.o: $(nilfs2_mod_DEPENDENCIES) nilfs2_mod-fs_nilfs2.o
	-rm -f $@
	$(TARGET_CC) $(nilfs2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ nilfs2_mod-fs_nilfs2.o

mod-nilfs2.o: mod-nilfs2.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(nilfs2_mod_CFLAGS) -DGRUB_FILE=\"mod-nilfs2.c\" -c -o $@ $<

mod-nilfs2.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'nilfs2' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-nilfs2.lst: pre-nilfs2.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 nilfs2/' > $@
else
def-nilfs2.lst: pre-nilfs2.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 nilfs2/' > $@
endif

und-nilfs2.lst: pre-nilfs2.o
	echo 'nilfs2' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

nilfs2_mod-fs_nilfs2.o: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(nilfs2_mod_CFLAGS) -DGRUB_FILE=\"fs/nilfs2.c\" -MD -c -o $@ $<
-include nilfs2_mod-fs_nilfs2.d

clean-module-nilfs2_mod-fs_nilfs2-extra.1:
	rm -f cmd-nilfs2_mod-fs_nilfs2.lst fs-nilfs2_mod-fs_nilfs2.lst partmap-nilfs2_mod-fs_nilfs2.lst handler-nilfs2_mod-fs_nilfs2.lst parttool-nilfs2_mod-fs_nilfs2.lst video-nilfs2_mod-fs_nilfs2.lst terminal-nilfs2_mod-fs_nilfs2.lst

CLEAN_MODULE_TARGETS += clean-module-nilfs2_mod-fs_nilfs2-extra.1

COMMANDFILES += cmd-nilfs2_mod-fs_nilfs2.lst
FSFILES += fs-nilfs2_mod-fs_nilfs2.lst
PARTTOOLFILES += parttool-nilfs2_mod-fs_nilfs2.lst
PARTMAPFILES += partmap-nilfs2_mod-fs_nilfs2.lst
HANDLERFILES += handler-nilfs2_mod-fs_nilfs2.lst
TERMINALFILES += terminal-nilfs2_mod-fs_nilfs2.lst
VIDEOFILES += video-nilfs2_mod-fs_nilfs2.lst

cmd-nilfs2_mod-fs_nilfs2.lst: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(nilfs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh nilfs2 > $@ || (rm -f $@; exit 1)

fs-nilfs2_mod-fs_nilfs2.lst: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(nilfs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh nilfs2 > $@ || (rm -f $@; exit 1)

parttool-nilfs2_mod-fs_nilfs2.lst: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(nilfs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh nilfs2 > $@ || (rm -f $@; exit 1)

partmap-nilfs2_mod-fs_nilfs2.lst: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(nilfs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh nilfs2 > $@ || (rm -f $@; exit 1)

handler-nilfs2_mod-fs_nilfs2.lst: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(nilfs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh nilfs2 > $@ || (rm -f $@; exit 1)

terminal-nilfs2_mod-fs_nilfs2.lst: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(nilfs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh nilfs2 > $@ || (rm -f $@; exit 1)

video-nilfs2_mod-fs_nilfs2.lst: fs/nilfs2.c $(fs/nilfs2.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(nilfs2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh nilfs2 > $@ || (rm -f $@; exit 1)

nilfs2_mod_CFLAGS = $(COMMON_CFLAGS)
nilfs2_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For hfs.mod.
hfs_mod_SOURCES = fs/hfs.c

clean-module-hfs.mod.1:
	rm -f hfs.mod mod-hfs.o mod-hfs.c pre-hfs.o hfs_mod-fs_hfs.o und-hfs.lst

CLEAN_MODULE_TARGETS += clean-module-hfs.mod.1

clean-module-hfs.mod-symbol.1:
	rm -f def-hfs.lst

CLEAN_MODULE_TARGETS += clean-module-hfs.mod-symbol.1
DEFSYMFILES += def-hfs.lst
mostlyclean-module-hfs.mod.1:
	rm -f hfs_mod-fs_hfs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-hfs.mod.1
UNDSYMFILES += und-hfs.lst

ifeq ($(TARGET_NO_MODULES), yes)
hfs.mod: pre-hfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
hfs.mod: pre-hfs.o mod-hfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hfs.o mod-hfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
hfs.mod: pre-hfs.o mod-hfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(hfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-hfs.o mod-hfs.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-hfs.o: $(hfs_mod_DEPENDENCIES) hfs_mod-fs_hfs.o
	-rm -f $@
	$(TARGET_CC) $(hfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ hfs_mod-fs_hfs.o

mod-hfs.o: mod-hfs.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(hfs_mod_CFLAGS) -DGRUB_FILE=\"mod-hfs.c\" -c -o $@ $<

mod-hfs.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'hfs' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-hfs.lst: pre-hfs.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 hfs/' > $@
else
def-hfs.lst: pre-hfs.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 hfs/' > $@
endif

und-hfs.lst: pre-hfs.o
	echo 'hfs' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

hfs_mod-fs_hfs.o: fs/hfs.c $(fs/hfs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfs_mod_CFLAGS) -DGRUB_FILE=\"fs/hfs.c\" -MD -c -o $@ $<
-include hfs_mod-fs_hfs.d

clean-module-hfs_mod-fs_hfs-extra.1:
	rm -f cmd-hfs_mod-fs_hfs.lst fs-hfs_mod-fs_hfs.lst partmap-hfs_mod-fs_hfs.lst handler-hfs_mod-fs_hfs.lst parttool-hfs_mod-fs_hfs.lst video-hfs_mod-fs_hfs.lst terminal-hfs_mod-fs_hfs.lst

CLEAN_MODULE_TARGETS += clean-module-hfs_mod-fs_hfs-extra.1

COMMANDFILES += cmd-hfs_mod-fs_hfs.lst
FSFILES += fs-hfs_mod-fs_hfs.lst
PARTTOOLFILES += parttool-hfs_mod-fs_hfs.lst
PARTMAPFILES += partmap-hfs_mod-fs_hfs.lst
HANDLERFILES += handler-hfs_mod-fs_hfs.lst
TERMINALFILES += terminal-hfs_mod-fs_hfs.lst
VIDEOFILES += video-hfs_mod-fs_hfs.lst

cmd-hfs_mod-fs_hfs.lst: fs/hfs.c $(fs/hfs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh hfs > $@ || (rm -f $@; exit 1)

fs-hfs_mod-fs_hfs.lst: fs/hfs.c $(fs/hfs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh hfs > $@ || (rm -f $@; exit 1)

parttool-hfs_mod-fs_hfs.lst: fs/hfs.c $(fs/hfs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh hfs > $@ || (rm -f $@; exit 1)

partmap-hfs_mod-fs_hfs.lst: fs/hfs.c $(fs/hfs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh hfs > $@ || (rm -f $@; exit 1)

handler-hfs_mod-fs_hfs.lst: fs/hfs.c $(fs/hfs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh hfs > $@ || (rm -f $@; exit 1)

terminal-hfs_mod-fs_hfs.lst: fs/hfs.c $(fs/hfs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh hfs > $@ || (rm -f $@; exit 1)

video-hfs_mod-fs_hfs.lst: fs/hfs.c $(fs/hfs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh hfs > $@ || (rm -f $@; exit 1)

hfs_mod_CFLAGS = $(COMMON_CFLAGS)
hfs_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For jfs.mod.
jfs_mod_SOURCES = fs/jfs.c

clean-module-jfs.mod.1:
	rm -f jfs.mod mod-jfs.o mod-jfs.c pre-jfs.o jfs_mod-fs_jfs.o und-jfs.lst

CLEAN_MODULE_TARGETS += clean-module-jfs.mod.1

clean-module-jfs.mod-symbol.1:
	rm -f def-jfs.lst

CLEAN_MODULE_TARGETS += clean-module-jfs.mod-symbol.1
DEFSYMFILES += def-jfs.lst
mostlyclean-module-jfs.mod.1:
	rm -f jfs_mod-fs_jfs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-jfs.mod.1
UNDSYMFILES += und-jfs.lst

ifeq ($(TARGET_NO_MODULES), yes)
jfs.mod: pre-jfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(jfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-jfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
jfs.mod: pre-jfs.o mod-jfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(jfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-jfs.o mod-jfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
jfs.mod: pre-jfs.o mod-jfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(jfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-jfs.o mod-jfs.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-jfs.o: $(jfs_mod_DEPENDENCIES) jfs_mod-fs_jfs.o
	-rm -f $@
	$(TARGET_CC) $(jfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ jfs_mod-fs_jfs.o

mod-jfs.o: mod-jfs.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(jfs_mod_CFLAGS) -DGRUB_FILE=\"mod-jfs.c\" -c -o $@ $<

mod-jfs.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'jfs' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-jfs.lst: pre-jfs.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 jfs/' > $@
else
def-jfs.lst: pre-jfs.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 jfs/' > $@
endif

und-jfs.lst: pre-jfs.o
	echo 'jfs' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

jfs_mod-fs_jfs.o: fs/jfs.c $(fs/jfs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jfs_mod_CFLAGS) -DGRUB_FILE=\"fs/jfs.c\" -MD -c -o $@ $<
-include jfs_mod-fs_jfs.d

clean-module-jfs_mod-fs_jfs-extra.1:
	rm -f cmd-jfs_mod-fs_jfs.lst fs-jfs_mod-fs_jfs.lst partmap-jfs_mod-fs_jfs.lst handler-jfs_mod-fs_jfs.lst parttool-jfs_mod-fs_jfs.lst video-jfs_mod-fs_jfs.lst terminal-jfs_mod-fs_jfs.lst

CLEAN_MODULE_TARGETS += clean-module-jfs_mod-fs_jfs-extra.1

COMMANDFILES += cmd-jfs_mod-fs_jfs.lst
FSFILES += fs-jfs_mod-fs_jfs.lst
PARTTOOLFILES += parttool-jfs_mod-fs_jfs.lst
PARTMAPFILES += partmap-jfs_mod-fs_jfs.lst
HANDLERFILES += handler-jfs_mod-fs_jfs.lst
TERMINALFILES += terminal-jfs_mod-fs_jfs.lst
VIDEOFILES += video-jfs_mod-fs_jfs.lst

cmd-jfs_mod-fs_jfs.lst: fs/jfs.c $(fs/jfs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh jfs > $@ || (rm -f $@; exit 1)

fs-jfs_mod-fs_jfs.lst: fs/jfs.c $(fs/jfs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(jfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh jfs > $@ || (rm -f $@; exit 1)

parttool-jfs_mod-fs_jfs.lst: fs/jfs.c $(fs/jfs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh jfs > $@ || (rm -f $@; exit 1)

partmap-jfs_mod-fs_jfs.lst: fs/jfs.c $(fs/jfs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(jfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh jfs > $@ || (rm -f $@; exit 1)

handler-jfs_mod-fs_jfs.lst: fs/jfs.c $(fs/jfs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh jfs > $@ || (rm -f $@; exit 1)

terminal-jfs_mod-fs_jfs.lst: fs/jfs.c $(fs/jfs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh jfs > $@ || (rm -f $@; exit 1)

video-jfs_mod-fs_jfs.lst: fs/jfs.c $(fs/jfs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(jfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh jfs > $@ || (rm -f $@; exit 1)

jfs_mod_CFLAGS = $(COMMON_CFLAGS)
jfs_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For iso9660.mod.
iso9660_mod_SOURCES = fs/iso9660.c

clean-module-iso9660.mod.1:
	rm -f iso9660.mod mod-iso9660.o mod-iso9660.c pre-iso9660.o iso9660_mod-fs_iso9660.o und-iso9660.lst

CLEAN_MODULE_TARGETS += clean-module-iso9660.mod.1

clean-module-iso9660.mod-symbol.1:
	rm -f def-iso9660.lst

CLEAN_MODULE_TARGETS += clean-module-iso9660.mod-symbol.1
DEFSYMFILES += def-iso9660.lst
mostlyclean-module-iso9660.mod.1:
	rm -f iso9660_mod-fs_iso9660.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-iso9660.mod.1
UNDSYMFILES += und-iso9660.lst

ifeq ($(TARGET_NO_MODULES), yes)
iso9660.mod: pre-iso9660.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(iso9660_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-iso9660.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
iso9660.mod: pre-iso9660.o mod-iso9660.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(iso9660_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-iso9660.o mod-iso9660.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
iso9660.mod: pre-iso9660.o mod-iso9660.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(iso9660_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-iso9660.o mod-iso9660.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-iso9660.o: $(iso9660_mod_DEPENDENCIES) iso9660_mod-fs_iso9660.o
	-rm -f $@
	$(TARGET_CC) $(iso9660_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ iso9660_mod-fs_iso9660.o

mod-iso9660.o: mod-iso9660.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(iso9660_mod_CFLAGS) -DGRUB_FILE=\"mod-iso9660.c\" -c -o $@ $<

mod-iso9660.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'iso9660' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-iso9660.lst: pre-iso9660.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 iso9660/' > $@
else
def-iso9660.lst: pre-iso9660.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 iso9660/' > $@
endif

und-iso9660.lst: pre-iso9660.o
	echo 'iso9660' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

iso9660_mod-fs_iso9660.o: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(iso9660_mod_CFLAGS) -DGRUB_FILE=\"fs/iso9660.c\" -MD -c -o $@ $<
-include iso9660_mod-fs_iso9660.d

clean-module-iso9660_mod-fs_iso9660-extra.1:
	rm -f cmd-iso9660_mod-fs_iso9660.lst fs-iso9660_mod-fs_iso9660.lst partmap-iso9660_mod-fs_iso9660.lst handler-iso9660_mod-fs_iso9660.lst parttool-iso9660_mod-fs_iso9660.lst video-iso9660_mod-fs_iso9660.lst terminal-iso9660_mod-fs_iso9660.lst

CLEAN_MODULE_TARGETS += clean-module-iso9660_mod-fs_iso9660-extra.1

COMMANDFILES += cmd-iso9660_mod-fs_iso9660.lst
FSFILES += fs-iso9660_mod-fs_iso9660.lst
PARTTOOLFILES += parttool-iso9660_mod-fs_iso9660.lst
PARTMAPFILES += partmap-iso9660_mod-fs_iso9660.lst
HANDLERFILES += handler-iso9660_mod-fs_iso9660.lst
TERMINALFILES += terminal-iso9660_mod-fs_iso9660.lst
VIDEOFILES += video-iso9660_mod-fs_iso9660.lst

cmd-iso9660_mod-fs_iso9660.lst: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(iso9660_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh iso9660 > $@ || (rm -f $@; exit 1)

fs-iso9660_mod-fs_iso9660.lst: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(iso9660_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh iso9660 > $@ || (rm -f $@; exit 1)

parttool-iso9660_mod-fs_iso9660.lst: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(iso9660_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh iso9660 > $@ || (rm -f $@; exit 1)

partmap-iso9660_mod-fs_iso9660.lst: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(iso9660_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh iso9660 > $@ || (rm -f $@; exit 1)

handler-iso9660_mod-fs_iso9660.lst: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(iso9660_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh iso9660 > $@ || (rm -f $@; exit 1)

terminal-iso9660_mod-fs_iso9660.lst: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(iso9660_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh iso9660 > $@ || (rm -f $@; exit 1)

video-iso9660_mod-fs_iso9660.lst: fs/iso9660.c $(fs/iso9660.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(iso9660_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh iso9660 > $@ || (rm -f $@; exit 1)

iso9660_mod_CFLAGS = $(COMMON_CFLAGS)
iso9660_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For xfs.mod.
xfs_mod_SOURCES = fs/xfs.c

clean-module-xfs.mod.1:
	rm -f xfs.mod mod-xfs.o mod-xfs.c pre-xfs.o xfs_mod-fs_xfs.o und-xfs.lst

CLEAN_MODULE_TARGETS += clean-module-xfs.mod.1

clean-module-xfs.mod-symbol.1:
	rm -f def-xfs.lst

CLEAN_MODULE_TARGETS += clean-module-xfs.mod-symbol.1
DEFSYMFILES += def-xfs.lst
mostlyclean-module-xfs.mod.1:
	rm -f xfs_mod-fs_xfs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-xfs.mod.1
UNDSYMFILES += und-xfs.lst

ifeq ($(TARGET_NO_MODULES), yes)
xfs.mod: pre-xfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(xfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-xfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
xfs.mod: pre-xfs.o mod-xfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(xfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-xfs.o mod-xfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
xfs.mod: pre-xfs.o mod-xfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(xfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-xfs.o mod-xfs.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-xfs.o: $(xfs_mod_DEPENDENCIES) xfs_mod-fs_xfs.o
	-rm -f $@
	$(TARGET_CC) $(xfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ xfs_mod-fs_xfs.o

mod-xfs.o: mod-xfs.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(xfs_mod_CFLAGS) -DGRUB_FILE=\"mod-xfs.c\" -c -o $@ $<

mod-xfs.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'xfs' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-xfs.lst: pre-xfs.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 xfs/' > $@
else
def-xfs.lst: pre-xfs.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 xfs/' > $@
endif

und-xfs.lst: pre-xfs.o
	echo 'xfs' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

xfs_mod-fs_xfs.o: fs/xfs.c $(fs/xfs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xfs_mod_CFLAGS) -DGRUB_FILE=\"fs/xfs.c\" -MD -c -o $@ $<
-include xfs_mod-fs_xfs.d

clean-module-xfs_mod-fs_xfs-extra.1:
	rm -f cmd-xfs_mod-fs_xfs.lst fs-xfs_mod-fs_xfs.lst partmap-xfs_mod-fs_xfs.lst handler-xfs_mod-fs_xfs.lst parttool-xfs_mod-fs_xfs.lst video-xfs_mod-fs_xfs.lst terminal-xfs_mod-fs_xfs.lst

CLEAN_MODULE_TARGETS += clean-module-xfs_mod-fs_xfs-extra.1

COMMANDFILES += cmd-xfs_mod-fs_xfs.lst
FSFILES += fs-xfs_mod-fs_xfs.lst
PARTTOOLFILES += parttool-xfs_mod-fs_xfs.lst
PARTMAPFILES += partmap-xfs_mod-fs_xfs.lst
HANDLERFILES += handler-xfs_mod-fs_xfs.lst
TERMINALFILES += terminal-xfs_mod-fs_xfs.lst
VIDEOFILES += video-xfs_mod-fs_xfs.lst

cmd-xfs_mod-fs_xfs.lst: fs/xfs.c $(fs/xfs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh xfs > $@ || (rm -f $@; exit 1)

fs-xfs_mod-fs_xfs.lst: fs/xfs.c $(fs/xfs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh xfs > $@ || (rm -f $@; exit 1)

parttool-xfs_mod-fs_xfs.lst: fs/xfs.c $(fs/xfs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh xfs > $@ || (rm -f $@; exit 1)

partmap-xfs_mod-fs_xfs.lst: fs/xfs.c $(fs/xfs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh xfs > $@ || (rm -f $@; exit 1)

handler-xfs_mod-fs_xfs.lst: fs/xfs.c $(fs/xfs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh xfs > $@ || (rm -f $@; exit 1)

terminal-xfs_mod-fs_xfs.lst: fs/xfs.c $(fs/xfs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh xfs > $@ || (rm -f $@; exit 1)

video-xfs_mod-fs_xfs.lst: fs/xfs.c $(fs/xfs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh xfs > $@ || (rm -f $@; exit 1)

xfs_mod_CFLAGS = $(COMMON_CFLAGS)
xfs_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For affs.mod.
affs_mod_SOURCES = fs/affs.c

clean-module-affs.mod.1:
	rm -f affs.mod mod-affs.o mod-affs.c pre-affs.o affs_mod-fs_affs.o und-affs.lst

CLEAN_MODULE_TARGETS += clean-module-affs.mod.1

clean-module-affs.mod-symbol.1:
	rm -f def-affs.lst

CLEAN_MODULE_TARGETS += clean-module-affs.mod-symbol.1
DEFSYMFILES += def-affs.lst
mostlyclean-module-affs.mod.1:
	rm -f affs_mod-fs_affs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-affs.mod.1
UNDSYMFILES += und-affs.lst

ifeq ($(TARGET_NO_MODULES), yes)
affs.mod: pre-affs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(affs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-affs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
affs.mod: pre-affs.o mod-affs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(affs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-affs.o mod-affs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
affs.mod: pre-affs.o mod-affs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(affs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-affs.o mod-affs.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-affs.o: $(affs_mod_DEPENDENCIES) affs_mod-fs_affs.o
	-rm -f $@
	$(TARGET_CC) $(affs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ affs_mod-fs_affs.o

mod-affs.o: mod-affs.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(affs_mod_CFLAGS) -DGRUB_FILE=\"mod-affs.c\" -c -o $@ $<

mod-affs.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'affs' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-affs.lst: pre-affs.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 affs/' > $@
else
def-affs.lst: pre-affs.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 affs/' > $@
endif

und-affs.lst: pre-affs.o
	echo 'affs' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

affs_mod-fs_affs.o: fs/affs.c $(fs/affs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(affs_mod_CFLAGS) -DGRUB_FILE=\"fs/affs.c\" -MD -c -o $@ $<
-include affs_mod-fs_affs.d

clean-module-affs_mod-fs_affs-extra.1:
	rm -f cmd-affs_mod-fs_affs.lst fs-affs_mod-fs_affs.lst partmap-affs_mod-fs_affs.lst handler-affs_mod-fs_affs.lst parttool-affs_mod-fs_affs.lst video-affs_mod-fs_affs.lst terminal-affs_mod-fs_affs.lst

CLEAN_MODULE_TARGETS += clean-module-affs_mod-fs_affs-extra.1

COMMANDFILES += cmd-affs_mod-fs_affs.lst
FSFILES += fs-affs_mod-fs_affs.lst
PARTTOOLFILES += parttool-affs_mod-fs_affs.lst
PARTMAPFILES += partmap-affs_mod-fs_affs.lst
HANDLERFILES += handler-affs_mod-fs_affs.lst
TERMINALFILES += terminal-affs_mod-fs_affs.lst
VIDEOFILES += video-affs_mod-fs_affs.lst

cmd-affs_mod-fs_affs.lst: fs/affs.c $(fs/affs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(affs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh affs > $@ || (rm -f $@; exit 1)

fs-affs_mod-fs_affs.lst: fs/affs.c $(fs/affs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(affs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh affs > $@ || (rm -f $@; exit 1)

parttool-affs_mod-fs_affs.lst: fs/affs.c $(fs/affs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(affs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh affs > $@ || (rm -f $@; exit 1)

partmap-affs_mod-fs_affs.lst: fs/affs.c $(fs/affs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(affs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh affs > $@ || (rm -f $@; exit 1)

handler-affs_mod-fs_affs.lst: fs/affs.c $(fs/affs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(affs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh affs > $@ || (rm -f $@; exit 1)

terminal-affs_mod-fs_affs.lst: fs/affs.c $(fs/affs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(affs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh affs > $@ || (rm -f $@; exit 1)

video-affs_mod-fs_affs.lst: fs/affs.c $(fs/affs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(affs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh affs > $@ || (rm -f $@; exit 1)

affs_mod_CFLAGS = $(COMMON_CFLAGS)
affs_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For sfs.mod.
sfs_mod_SOURCES = fs/sfs.c

clean-module-sfs.mod.1:
	rm -f sfs.mod mod-sfs.o mod-sfs.c pre-sfs.o sfs_mod-fs_sfs.o und-sfs.lst

CLEAN_MODULE_TARGETS += clean-module-sfs.mod.1

clean-module-sfs.mod-symbol.1:
	rm -f def-sfs.lst

CLEAN_MODULE_TARGETS += clean-module-sfs.mod-symbol.1
DEFSYMFILES += def-sfs.lst
mostlyclean-module-sfs.mod.1:
	rm -f sfs_mod-fs_sfs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-sfs.mod.1
UNDSYMFILES += und-sfs.lst

ifeq ($(TARGET_NO_MODULES), yes)
sfs.mod: pre-sfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(sfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-sfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
sfs.mod: pre-sfs.o mod-sfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(sfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-sfs.o mod-sfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
sfs.mod: pre-sfs.o mod-sfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(sfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-sfs.o mod-sfs.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-sfs.o: $(sfs_mod_DEPENDENCIES) sfs_mod-fs_sfs.o
	-rm -f $@
	$(TARGET_CC) $(sfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ sfs_mod-fs_sfs.o

mod-sfs.o: mod-sfs.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(sfs_mod_CFLAGS) -DGRUB_FILE=\"mod-sfs.c\" -c -o $@ $<

mod-sfs.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'sfs' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-sfs.lst: pre-sfs.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 sfs/' > $@
else
def-sfs.lst: pre-sfs.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 sfs/' > $@
endif

und-sfs.lst: pre-sfs.o
	echo 'sfs' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

sfs_mod-fs_sfs.o: fs/sfs.c $(fs/sfs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sfs_mod_CFLAGS) -DGRUB_FILE=\"fs/sfs.c\" -MD -c -o $@ $<
-include sfs_mod-fs_sfs.d

clean-module-sfs_mod-fs_sfs-extra.1:
	rm -f cmd-sfs_mod-fs_sfs.lst fs-sfs_mod-fs_sfs.lst partmap-sfs_mod-fs_sfs.lst handler-sfs_mod-fs_sfs.lst parttool-sfs_mod-fs_sfs.lst video-sfs_mod-fs_sfs.lst terminal-sfs_mod-fs_sfs.lst

CLEAN_MODULE_TARGETS += clean-module-sfs_mod-fs_sfs-extra.1

COMMANDFILES += cmd-sfs_mod-fs_sfs.lst
FSFILES += fs-sfs_mod-fs_sfs.lst
PARTTOOLFILES += parttool-sfs_mod-fs_sfs.lst
PARTMAPFILES += partmap-sfs_mod-fs_sfs.lst
HANDLERFILES += handler-sfs_mod-fs_sfs.lst
TERMINALFILES += terminal-sfs_mod-fs_sfs.lst
VIDEOFILES += video-sfs_mod-fs_sfs.lst

cmd-sfs_mod-fs_sfs.lst: fs/sfs.c $(fs/sfs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh sfs > $@ || (rm -f $@; exit 1)

fs-sfs_mod-fs_sfs.lst: fs/sfs.c $(fs/sfs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(sfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh sfs > $@ || (rm -f $@; exit 1)

parttool-sfs_mod-fs_sfs.lst: fs/sfs.c $(fs/sfs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh sfs > $@ || (rm -f $@; exit 1)

partmap-sfs_mod-fs_sfs.lst: fs/sfs.c $(fs/sfs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(sfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh sfs > $@ || (rm -f $@; exit 1)

handler-sfs_mod-fs_sfs.lst: fs/sfs.c $(fs/sfs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh sfs > $@ || (rm -f $@; exit 1)

terminal-sfs_mod-fs_sfs.lst: fs/sfs.c $(fs/sfs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh sfs > $@ || (rm -f $@; exit 1)

video-sfs_mod-fs_sfs.lst: fs/sfs.c $(fs/sfs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(sfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh sfs > $@ || (rm -f $@; exit 1)

sfs_mod_CFLAGS = $(COMMON_CFLAGS)
sfs_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For hfsplus.mod.
hfsplus_mod_SOURCES = fs/hfsplus.c

clean-module-hfsplus.mod.1:
	rm -f hfsplus.mod mod-hfsplus.o mod-hfsplus.c pre-hfsplus.o hfsplus_mod-fs_hfsplus.o und-hfsplus.lst

CLEAN_MODULE_TARGETS += clean-module-hfsplus.mod.1

clean-module-hfsplus.mod-symbol.1:
	rm -f def-hfsplus.lst

CLEAN_MODULE_TARGETS += clean-module-hfsplus.mod-symbol.1
DEFSYMFILES += def-hfsplus.lst
mostlyclean-module-hfsplus.mod.1:
	rm -f hfsplus_mod-fs_hfsplus.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-hfsplus.mod.1
UNDSYMFILES += und-hfsplus.lst

ifeq ($(TARGET_NO_MODULES), yes)
hfsplus.mod: pre-hfsplus.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hfsplus_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hfsplus.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
hfsplus.mod: pre-hfsplus.o mod-hfsplus.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hfsplus_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hfsplus.o mod-hfsplus.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
hfsplus.mod: pre-hfsplus.o mod-hfsplus.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(hfsplus_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-hfsplus.o mod-hfsplus.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-hfsplus.o: $(hfsplus_mod_DEPENDENCIES) hfsplus_mod-fs_hfsplus.o
	-rm -f $@
	$(TARGET_CC) $(hfsplus_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ hfsplus_mod-fs_hfsplus.o

mod-hfsplus.o: mod-hfsplus.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(hfsplus_mod_CFLAGS) -DGRUB_FILE=\"mod-hfsplus.c\" -c -o $@ $<

mod-hfsplus.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'hfsplus' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-hfsplus.lst: pre-hfsplus.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 hfsplus/' > $@
else
def-hfsplus.lst: pre-hfsplus.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 hfsplus/' > $@
endif

und-hfsplus.lst: pre-hfsplus.o
	echo 'hfsplus' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

hfsplus_mod-fs_hfsplus.o: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfsplus_mod_CFLAGS) -DGRUB_FILE=\"fs/hfsplus.c\" -MD -c -o $@ $<
-include hfsplus_mod-fs_hfsplus.d

clean-module-hfsplus_mod-fs_hfsplus-extra.1:
	rm -f cmd-hfsplus_mod-fs_hfsplus.lst fs-hfsplus_mod-fs_hfsplus.lst partmap-hfsplus_mod-fs_hfsplus.lst handler-hfsplus_mod-fs_hfsplus.lst parttool-hfsplus_mod-fs_hfsplus.lst video-hfsplus_mod-fs_hfsplus.lst terminal-hfsplus_mod-fs_hfsplus.lst

CLEAN_MODULE_TARGETS += clean-module-hfsplus_mod-fs_hfsplus-extra.1

COMMANDFILES += cmd-hfsplus_mod-fs_hfsplus.lst
FSFILES += fs-hfsplus_mod-fs_hfsplus.lst
PARTTOOLFILES += parttool-hfsplus_mod-fs_hfsplus.lst
PARTMAPFILES += partmap-hfsplus_mod-fs_hfsplus.lst
HANDLERFILES += handler-hfsplus_mod-fs_hfsplus.lst
TERMINALFILES += terminal-hfsplus_mod-fs_hfsplus.lst
VIDEOFILES += video-hfsplus_mod-fs_hfsplus.lst

cmd-hfsplus_mod-fs_hfsplus.lst: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfsplus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh hfsplus > $@ || (rm -f $@; exit 1)

fs-hfsplus_mod-fs_hfsplus.lst: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hfsplus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh hfsplus > $@ || (rm -f $@; exit 1)

parttool-hfsplus_mod-fs_hfsplus.lst: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfsplus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh hfsplus > $@ || (rm -f $@; exit 1)

partmap-hfsplus_mod-fs_hfsplus.lst: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hfsplus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh hfsplus > $@ || (rm -f $@; exit 1)

handler-hfsplus_mod-fs_hfsplus.lst: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfsplus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh hfsplus > $@ || (rm -f $@; exit 1)

terminal-hfsplus_mod-fs_hfsplus.lst: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hfsplus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh hfsplus > $@ || (rm -f $@; exit 1)

video-hfsplus_mod-fs_hfsplus.lst: fs/hfsplus.c $(fs/hfsplus.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hfsplus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh hfsplus > $@ || (rm -f $@; exit 1)

hfsplus_mod_CFLAGS = $(COMMON_CFLAGS)
hfsplus_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For reiserfs.mod.
reiserfs_mod_SOURCES = fs/reiserfs.c

clean-module-reiserfs.mod.1:
	rm -f reiserfs.mod mod-reiserfs.o mod-reiserfs.c pre-reiserfs.o reiserfs_mod-fs_reiserfs.o und-reiserfs.lst

CLEAN_MODULE_TARGETS += clean-module-reiserfs.mod.1

clean-module-reiserfs.mod-symbol.1:
	rm -f def-reiserfs.lst

CLEAN_MODULE_TARGETS += clean-module-reiserfs.mod-symbol.1
DEFSYMFILES += def-reiserfs.lst
mostlyclean-module-reiserfs.mod.1:
	rm -f reiserfs_mod-fs_reiserfs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-reiserfs.mod.1
UNDSYMFILES += und-reiserfs.lst

ifeq ($(TARGET_NO_MODULES), yes)
reiserfs.mod: pre-reiserfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(reiserfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-reiserfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
reiserfs.mod: pre-reiserfs.o mod-reiserfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(reiserfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-reiserfs.o mod-reiserfs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
reiserfs.mod: pre-reiserfs.o mod-reiserfs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(reiserfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-reiserfs.o mod-reiserfs.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-reiserfs.o: $(reiserfs_mod_DEPENDENCIES) reiserfs_mod-fs_reiserfs.o
	-rm -f $@
	$(TARGET_CC) $(reiserfs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ reiserfs_mod-fs_reiserfs.o

mod-reiserfs.o: mod-reiserfs.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(reiserfs_mod_CFLAGS) -DGRUB_FILE=\"mod-reiserfs.c\" -c -o $@ $<

mod-reiserfs.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'reiserfs' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-reiserfs.lst: pre-reiserfs.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 reiserfs/' > $@
else
def-reiserfs.lst: pre-reiserfs.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 reiserfs/' > $@
endif

und-reiserfs.lst: pre-reiserfs.o
	echo 'reiserfs' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

reiserfs_mod-fs_reiserfs.o: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reiserfs_mod_CFLAGS) -DGRUB_FILE=\"fs/reiserfs.c\" -MD -c -o $@ $<
-include reiserfs_mod-fs_reiserfs.d

clean-module-reiserfs_mod-fs_reiserfs-extra.1:
	rm -f cmd-reiserfs_mod-fs_reiserfs.lst fs-reiserfs_mod-fs_reiserfs.lst partmap-reiserfs_mod-fs_reiserfs.lst handler-reiserfs_mod-fs_reiserfs.lst parttool-reiserfs_mod-fs_reiserfs.lst video-reiserfs_mod-fs_reiserfs.lst terminal-reiserfs_mod-fs_reiserfs.lst

CLEAN_MODULE_TARGETS += clean-module-reiserfs_mod-fs_reiserfs-extra.1

COMMANDFILES += cmd-reiserfs_mod-fs_reiserfs.lst
FSFILES += fs-reiserfs_mod-fs_reiserfs.lst
PARTTOOLFILES += parttool-reiserfs_mod-fs_reiserfs.lst
PARTMAPFILES += partmap-reiserfs_mod-fs_reiserfs.lst
HANDLERFILES += handler-reiserfs_mod-fs_reiserfs.lst
TERMINALFILES += terminal-reiserfs_mod-fs_reiserfs.lst
VIDEOFILES += video-reiserfs_mod-fs_reiserfs.lst

cmd-reiserfs_mod-fs_reiserfs.lst: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reiserfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh reiserfs > $@ || (rm -f $@; exit 1)

fs-reiserfs_mod-fs_reiserfs.lst: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(reiserfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh reiserfs > $@ || (rm -f $@; exit 1)

parttool-reiserfs_mod-fs_reiserfs.lst: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reiserfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh reiserfs > $@ || (rm -f $@; exit 1)

partmap-reiserfs_mod-fs_reiserfs.lst: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(reiserfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh reiserfs > $@ || (rm -f $@; exit 1)

handler-reiserfs_mod-fs_reiserfs.lst: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reiserfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh reiserfs > $@ || (rm -f $@; exit 1)

terminal-reiserfs_mod-fs_reiserfs.lst: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reiserfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh reiserfs > $@ || (rm -f $@; exit 1)

video-reiserfs_mod-fs_reiserfs.lst: fs/reiserfs.c $(fs/reiserfs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(reiserfs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh reiserfs > $@ || (rm -f $@; exit 1)

reiserfs_mod_CFLAGS = $(COMMON_CFLAGS)
reiserfs_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For cpio.mod.
cpio_mod_SOURCES = fs/cpio.c

clean-module-cpio.mod.1:
	rm -f cpio.mod mod-cpio.o mod-cpio.c pre-cpio.o cpio_mod-fs_cpio.o und-cpio.lst

CLEAN_MODULE_TARGETS += clean-module-cpio.mod.1

clean-module-cpio.mod-symbol.1:
	rm -f def-cpio.lst

CLEAN_MODULE_TARGETS += clean-module-cpio.mod-symbol.1
DEFSYMFILES += def-cpio.lst
mostlyclean-module-cpio.mod.1:
	rm -f cpio_mod-fs_cpio.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-cpio.mod.1
UNDSYMFILES += und-cpio.lst

ifeq ($(TARGET_NO_MODULES), yes)
cpio.mod: pre-cpio.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(cpio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-cpio.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
cpio.mod: pre-cpio.o mod-cpio.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(cpio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-cpio.o mod-cpio.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
cpio.mod: pre-cpio.o mod-cpio.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(cpio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-cpio.o mod-cpio.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-cpio.o: $(cpio_mod_DEPENDENCIES) cpio_mod-fs_cpio.o
	-rm -f $@
	$(TARGET_CC) $(cpio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ cpio_mod-fs_cpio.o

mod-cpio.o: mod-cpio.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(cpio_mod_CFLAGS) -DGRUB_FILE=\"mod-cpio.c\" -c -o $@ $<

mod-cpio.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'cpio' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-cpio.lst: pre-cpio.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 cpio/' > $@
else
def-cpio.lst: pre-cpio.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 cpio/' > $@
endif

und-cpio.lst: pre-cpio.o
	echo 'cpio' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

cpio_mod-fs_cpio.o: fs/cpio.c $(fs/cpio.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpio_mod_CFLAGS) -DGRUB_FILE=\"fs/cpio.c\" -MD -c -o $@ $<
-include cpio_mod-fs_cpio.d

clean-module-cpio_mod-fs_cpio-extra.1:
	rm -f cmd-cpio_mod-fs_cpio.lst fs-cpio_mod-fs_cpio.lst partmap-cpio_mod-fs_cpio.lst handler-cpio_mod-fs_cpio.lst parttool-cpio_mod-fs_cpio.lst video-cpio_mod-fs_cpio.lst terminal-cpio_mod-fs_cpio.lst

CLEAN_MODULE_TARGETS += clean-module-cpio_mod-fs_cpio-extra.1

COMMANDFILES += cmd-cpio_mod-fs_cpio.lst
FSFILES += fs-cpio_mod-fs_cpio.lst
PARTTOOLFILES += parttool-cpio_mod-fs_cpio.lst
PARTMAPFILES += partmap-cpio_mod-fs_cpio.lst
HANDLERFILES += handler-cpio_mod-fs_cpio.lst
TERMINALFILES += terminal-cpio_mod-fs_cpio.lst
VIDEOFILES += video-cpio_mod-fs_cpio.lst

cmd-cpio_mod-fs_cpio.lst: fs/cpio.c $(fs/cpio.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh cpio > $@ || (rm -f $@; exit 1)

fs-cpio_mod-fs_cpio.lst: fs/cpio.c $(fs/cpio.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cpio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh cpio > $@ || (rm -f $@; exit 1)

parttool-cpio_mod-fs_cpio.lst: fs/cpio.c $(fs/cpio.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh cpio > $@ || (rm -f $@; exit 1)

partmap-cpio_mod-fs_cpio.lst: fs/cpio.c $(fs/cpio.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cpio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh cpio > $@ || (rm -f $@; exit 1)

handler-cpio_mod-fs_cpio.lst: fs/cpio.c $(fs/cpio.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh cpio > $@ || (rm -f $@; exit 1)

terminal-cpio_mod-fs_cpio.lst: fs/cpio.c $(fs/cpio.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cpio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh cpio > $@ || (rm -f $@; exit 1)

video-cpio_mod-fs_cpio.lst: fs/cpio.c $(fs/cpio.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cpio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh cpio > $@ || (rm -f $@; exit 1)

cpio_mod_CFLAGS = $(COMMON_CFLAGS)
cpio_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For tar.mod.
tar_mod_SOURCES = fs/tar.c

clean-module-tar.mod.1:
	rm -f tar.mod mod-tar.o mod-tar.c pre-tar.o tar_mod-fs_tar.o und-tar.lst

CLEAN_MODULE_TARGETS += clean-module-tar.mod.1

clean-module-tar.mod-symbol.1:
	rm -f def-tar.lst

CLEAN_MODULE_TARGETS += clean-module-tar.mod-symbol.1
DEFSYMFILES += def-tar.lst
mostlyclean-module-tar.mod.1:
	rm -f tar_mod-fs_tar.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-tar.mod.1
UNDSYMFILES += und-tar.lst

ifeq ($(TARGET_NO_MODULES), yes)
tar.mod: pre-tar.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(tar_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-tar.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
tar.mod: pre-tar.o mod-tar.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(tar_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-tar.o mod-tar.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
tar.mod: pre-tar.o mod-tar.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(tar_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-tar.o mod-tar.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-tar.o: $(tar_mod_DEPENDENCIES) tar_mod-fs_tar.o
	-rm -f $@
	$(TARGET_CC) $(tar_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ tar_mod-fs_tar.o

mod-tar.o: mod-tar.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(tar_mod_CFLAGS) -DGRUB_FILE=\"mod-tar.c\" -c -o $@ $<

mod-tar.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'tar' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-tar.lst: pre-tar.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 tar/' > $@
else
def-tar.lst: pre-tar.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 tar/' > $@
endif

und-tar.lst: pre-tar.o
	echo 'tar' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

tar_mod-fs_tar.o: fs/tar.c $(fs/tar.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tar_mod_CFLAGS) -DGRUB_FILE=\"fs/tar.c\" -MD -c -o $@ $<
-include tar_mod-fs_tar.d

clean-module-tar_mod-fs_tar-extra.1:
	rm -f cmd-tar_mod-fs_tar.lst fs-tar_mod-fs_tar.lst partmap-tar_mod-fs_tar.lst handler-tar_mod-fs_tar.lst parttool-tar_mod-fs_tar.lst video-tar_mod-fs_tar.lst terminal-tar_mod-fs_tar.lst

CLEAN_MODULE_TARGETS += clean-module-tar_mod-fs_tar-extra.1

COMMANDFILES += cmd-tar_mod-fs_tar.lst
FSFILES += fs-tar_mod-fs_tar.lst
PARTTOOLFILES += parttool-tar_mod-fs_tar.lst
PARTMAPFILES += partmap-tar_mod-fs_tar.lst
HANDLERFILES += handler-tar_mod-fs_tar.lst
TERMINALFILES += terminal-tar_mod-fs_tar.lst
VIDEOFILES += video-tar_mod-fs_tar.lst

cmd-tar_mod-fs_tar.lst: fs/tar.c $(fs/tar.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tar_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh tar > $@ || (rm -f $@; exit 1)

fs-tar_mod-fs_tar.lst: fs/tar.c $(fs/tar.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(tar_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh tar > $@ || (rm -f $@; exit 1)

parttool-tar_mod-fs_tar.lst: fs/tar.c $(fs/tar.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tar_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh tar > $@ || (rm -f $@; exit 1)

partmap-tar_mod-fs_tar.lst: fs/tar.c $(fs/tar.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(tar_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh tar > $@ || (rm -f $@; exit 1)

handler-tar_mod-fs_tar.lst: fs/tar.c $(fs/tar.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tar_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh tar > $@ || (rm -f $@; exit 1)

terminal-tar_mod-fs_tar.lst: fs/tar.c $(fs/tar.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tar_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh tar > $@ || (rm -f $@; exit 1)

video-tar_mod-fs_tar.lst: fs/tar.c $(fs/tar.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(tar_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh tar > $@ || (rm -f $@; exit 1)

tar_mod_CFLAGS = $(COMMON_CFLAGS)
tar_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For udf.mod.
udf_mod_SOURCES = fs/udf.c

clean-module-udf.mod.1:
	rm -f udf.mod mod-udf.o mod-udf.c pre-udf.o udf_mod-fs_udf.o und-udf.lst

CLEAN_MODULE_TARGETS += clean-module-udf.mod.1

clean-module-udf.mod-symbol.1:
	rm -f def-udf.lst

CLEAN_MODULE_TARGETS += clean-module-udf.mod-symbol.1
DEFSYMFILES += def-udf.lst
mostlyclean-module-udf.mod.1:
	rm -f udf_mod-fs_udf.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-udf.mod.1
UNDSYMFILES += und-udf.lst

ifeq ($(TARGET_NO_MODULES), yes)
udf.mod: pre-udf.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(udf_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-udf.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
udf.mod: pre-udf.o mod-udf.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(udf_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-udf.o mod-udf.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
udf.mod: pre-udf.o mod-udf.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(udf_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-udf.o mod-udf.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-udf.o: $(udf_mod_DEPENDENCIES) udf_mod-fs_udf.o
	-rm -f $@
	$(TARGET_CC) $(udf_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ udf_mod-fs_udf.o

mod-udf.o: mod-udf.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(udf_mod_CFLAGS) -DGRUB_FILE=\"mod-udf.c\" -c -o $@ $<

mod-udf.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'udf' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-udf.lst: pre-udf.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 udf/' > $@
else
def-udf.lst: pre-udf.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 udf/' > $@
endif

und-udf.lst: pre-udf.o
	echo 'udf' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

udf_mod-fs_udf.o: fs/udf.c $(fs/udf.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(udf_mod_CFLAGS) -DGRUB_FILE=\"fs/udf.c\" -MD -c -o $@ $<
-include udf_mod-fs_udf.d

clean-module-udf_mod-fs_udf-extra.1:
	rm -f cmd-udf_mod-fs_udf.lst fs-udf_mod-fs_udf.lst partmap-udf_mod-fs_udf.lst handler-udf_mod-fs_udf.lst parttool-udf_mod-fs_udf.lst video-udf_mod-fs_udf.lst terminal-udf_mod-fs_udf.lst

CLEAN_MODULE_TARGETS += clean-module-udf_mod-fs_udf-extra.1

COMMANDFILES += cmd-udf_mod-fs_udf.lst
FSFILES += fs-udf_mod-fs_udf.lst
PARTTOOLFILES += parttool-udf_mod-fs_udf.lst
PARTMAPFILES += partmap-udf_mod-fs_udf.lst
HANDLERFILES += handler-udf_mod-fs_udf.lst
TERMINALFILES += terminal-udf_mod-fs_udf.lst
VIDEOFILES += video-udf_mod-fs_udf.lst

cmd-udf_mod-fs_udf.lst: fs/udf.c $(fs/udf.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(udf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh udf > $@ || (rm -f $@; exit 1)

fs-udf_mod-fs_udf.lst: fs/udf.c $(fs/udf.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(udf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh udf > $@ || (rm -f $@; exit 1)

parttool-udf_mod-fs_udf.lst: fs/udf.c $(fs/udf.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(udf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh udf > $@ || (rm -f $@; exit 1)

partmap-udf_mod-fs_udf.lst: fs/udf.c $(fs/udf.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(udf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh udf > $@ || (rm -f $@; exit 1)

handler-udf_mod-fs_udf.lst: fs/udf.c $(fs/udf.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(udf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh udf > $@ || (rm -f $@; exit 1)

terminal-udf_mod-fs_udf.lst: fs/udf.c $(fs/udf.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(udf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh udf > $@ || (rm -f $@; exit 1)

video-udf_mod-fs_udf.lst: fs/udf.c $(fs/udf.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(udf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh udf > $@ || (rm -f $@; exit 1)

udf_mod_CFLAGS = $(COMMON_CFLAGS)
udf_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For afs.mod.
afs_mod_SOURCES = fs/afs.c

clean-module-afs.mod.1:
	rm -f afs.mod mod-afs.o mod-afs.c pre-afs.o afs_mod-fs_afs.o und-afs.lst

CLEAN_MODULE_TARGETS += clean-module-afs.mod.1

clean-module-afs.mod-symbol.1:
	rm -f def-afs.lst

CLEAN_MODULE_TARGETS += clean-module-afs.mod-symbol.1
DEFSYMFILES += def-afs.lst
mostlyclean-module-afs.mod.1:
	rm -f afs_mod-fs_afs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-afs.mod.1
UNDSYMFILES += und-afs.lst

ifeq ($(TARGET_NO_MODULES), yes)
afs.mod: pre-afs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(afs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-afs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
afs.mod: pre-afs.o mod-afs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(afs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-afs.o mod-afs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
afs.mod: pre-afs.o mod-afs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(afs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-afs.o mod-afs.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-afs.o: $(afs_mod_DEPENDENCIES) afs_mod-fs_afs.o
	-rm -f $@
	$(TARGET_CC) $(afs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ afs_mod-fs_afs.o

mod-afs.o: mod-afs.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(afs_mod_CFLAGS) -DGRUB_FILE=\"mod-afs.c\" -c -o $@ $<

mod-afs.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'afs' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-afs.lst: pre-afs.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 afs/' > $@
else
def-afs.lst: pre-afs.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 afs/' > $@
endif

und-afs.lst: pre-afs.o
	echo 'afs' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

afs_mod-fs_afs.o: fs/afs.c $(fs/afs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_mod_CFLAGS) -DGRUB_FILE=\"fs/afs.c\" -MD -c -o $@ $<
-include afs_mod-fs_afs.d

clean-module-afs_mod-fs_afs-extra.1:
	rm -f cmd-afs_mod-fs_afs.lst fs-afs_mod-fs_afs.lst partmap-afs_mod-fs_afs.lst handler-afs_mod-fs_afs.lst parttool-afs_mod-fs_afs.lst video-afs_mod-fs_afs.lst terminal-afs_mod-fs_afs.lst

CLEAN_MODULE_TARGETS += clean-module-afs_mod-fs_afs-extra.1

COMMANDFILES += cmd-afs_mod-fs_afs.lst
FSFILES += fs-afs_mod-fs_afs.lst
PARTTOOLFILES += parttool-afs_mod-fs_afs.lst
PARTMAPFILES += partmap-afs_mod-fs_afs.lst
HANDLERFILES += handler-afs_mod-fs_afs.lst
TERMINALFILES += terminal-afs_mod-fs_afs.lst
VIDEOFILES += video-afs_mod-fs_afs.lst

cmd-afs_mod-fs_afs.lst: fs/afs.c $(fs/afs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh afs > $@ || (rm -f $@; exit 1)

fs-afs_mod-fs_afs.lst: fs/afs.c $(fs/afs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(afs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh afs > $@ || (rm -f $@; exit 1)

parttool-afs_mod-fs_afs.lst: fs/afs.c $(fs/afs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh afs > $@ || (rm -f $@; exit 1)

partmap-afs_mod-fs_afs.lst: fs/afs.c $(fs/afs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(afs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh afs > $@ || (rm -f $@; exit 1)

handler-afs_mod-fs_afs.lst: fs/afs.c $(fs/afs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh afs > $@ || (rm -f $@; exit 1)

terminal-afs_mod-fs_afs.lst: fs/afs.c $(fs/afs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh afs > $@ || (rm -f $@; exit 1)

video-afs_mod-fs_afs.lst: fs/afs.c $(fs/afs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(afs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh afs > $@ || (rm -f $@; exit 1)

afs_mod_CFLAGS = $(COMMON_CFLAGS)
afs_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For afs_be.mod.
afs_be_mod_SOURCES = fs/afs_be.c

clean-module-afs_be.mod.1:
	rm -f afs_be.mod mod-afs_be.o mod-afs_be.c pre-afs_be.o afs_be_mod-fs_afs_be.o und-afs_be.lst

CLEAN_MODULE_TARGETS += clean-module-afs_be.mod.1

clean-module-afs_be.mod-symbol.1:
	rm -f def-afs_be.lst

CLEAN_MODULE_TARGETS += clean-module-afs_be.mod-symbol.1
DEFSYMFILES += def-afs_be.lst
mostlyclean-module-afs_be.mod.1:
	rm -f afs_be_mod-fs_afs_be.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-afs_be.mod.1
UNDSYMFILES += und-afs_be.lst

ifeq ($(TARGET_NO_MODULES), yes)
afs_be.mod: pre-afs_be.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(afs_be_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-afs_be.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
afs_be.mod: pre-afs_be.o mod-afs_be.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(afs_be_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-afs_be.o mod-afs_be.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
afs_be.mod: pre-afs_be.o mod-afs_be.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(afs_be_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-afs_be.o mod-afs_be.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-afs_be.o: $(afs_be_mod_DEPENDENCIES) afs_be_mod-fs_afs_be.o
	-rm -f $@
	$(TARGET_CC) $(afs_be_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ afs_be_mod-fs_afs_be.o

mod-afs_be.o: mod-afs_be.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(afs_be_mod_CFLAGS) -DGRUB_FILE=\"mod-afs_be.c\" -c -o $@ $<

mod-afs_be.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'afs_be' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-afs_be.lst: pre-afs_be.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 afs_be/' > $@
else
def-afs_be.lst: pre-afs_be.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 afs_be/' > $@
endif

und-afs_be.lst: pre-afs_be.o
	echo 'afs_be' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

afs_be_mod-fs_afs_be.o: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_be_mod_CFLAGS) -DGRUB_FILE=\"fs/afs_be.c\" -MD -c -o $@ $<
-include afs_be_mod-fs_afs_be.d

clean-module-afs_be_mod-fs_afs_be-extra.1:
	rm -f cmd-afs_be_mod-fs_afs_be.lst fs-afs_be_mod-fs_afs_be.lst partmap-afs_be_mod-fs_afs_be.lst handler-afs_be_mod-fs_afs_be.lst parttool-afs_be_mod-fs_afs_be.lst video-afs_be_mod-fs_afs_be.lst terminal-afs_be_mod-fs_afs_be.lst

CLEAN_MODULE_TARGETS += clean-module-afs_be_mod-fs_afs_be-extra.1

COMMANDFILES += cmd-afs_be_mod-fs_afs_be.lst
FSFILES += fs-afs_be_mod-fs_afs_be.lst
PARTTOOLFILES += parttool-afs_be_mod-fs_afs_be.lst
PARTMAPFILES += partmap-afs_be_mod-fs_afs_be.lst
HANDLERFILES += handler-afs_be_mod-fs_afs_be.lst
TERMINALFILES += terminal-afs_be_mod-fs_afs_be.lst
VIDEOFILES += video-afs_be_mod-fs_afs_be.lst

cmd-afs_be_mod-fs_afs_be.lst: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh afs_be > $@ || (rm -f $@; exit 1)

fs-afs_be_mod-fs_afs_be.lst: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(afs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh afs_be > $@ || (rm -f $@; exit 1)

parttool-afs_be_mod-fs_afs_be.lst: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh afs_be > $@ || (rm -f $@; exit 1)

partmap-afs_be_mod-fs_afs_be.lst: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(afs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh afs_be > $@ || (rm -f $@; exit 1)

handler-afs_be_mod-fs_afs_be.lst: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh afs_be > $@ || (rm -f $@; exit 1)

terminal-afs_be_mod-fs_afs_be.lst: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(afs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh afs_be > $@ || (rm -f $@; exit 1)

video-afs_be_mod-fs_afs_be.lst: fs/afs_be.c $(fs/afs_be.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(afs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh afs_be > $@ || (rm -f $@; exit 1)

afs_be_mod_CFLAGS = $(COMMON_CFLAGS)
afs_be_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For befs.mod.
befs_mod_SOURCES = fs/befs.c

clean-module-befs.mod.1:
	rm -f befs.mod mod-befs.o mod-befs.c pre-befs.o befs_mod-fs_befs.o und-befs.lst

CLEAN_MODULE_TARGETS += clean-module-befs.mod.1

clean-module-befs.mod-symbol.1:
	rm -f def-befs.lst

CLEAN_MODULE_TARGETS += clean-module-befs.mod-symbol.1
DEFSYMFILES += def-befs.lst
mostlyclean-module-befs.mod.1:
	rm -f befs_mod-fs_befs.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-befs.mod.1
UNDSYMFILES += und-befs.lst

ifeq ($(TARGET_NO_MODULES), yes)
befs.mod: pre-befs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(befs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-befs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
befs.mod: pre-befs.o mod-befs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(befs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-befs.o mod-befs.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
befs.mod: pre-befs.o mod-befs.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(befs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-befs.o mod-befs.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-befs.o: $(befs_mod_DEPENDENCIES) befs_mod-fs_befs.o
	-rm -f $@
	$(TARGET_CC) $(befs_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ befs_mod-fs_befs.o

mod-befs.o: mod-befs.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(befs_mod_CFLAGS) -DGRUB_FILE=\"mod-befs.c\" -c -o $@ $<

mod-befs.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'befs' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-befs.lst: pre-befs.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 befs/' > $@
else
def-befs.lst: pre-befs.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 befs/' > $@
endif

und-befs.lst: pre-befs.o
	echo 'befs' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

befs_mod-fs_befs.o: fs/befs.c $(fs/befs.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_mod_CFLAGS) -DGRUB_FILE=\"fs/befs.c\" -MD -c -o $@ $<
-include befs_mod-fs_befs.d

clean-module-befs_mod-fs_befs-extra.1:
	rm -f cmd-befs_mod-fs_befs.lst fs-befs_mod-fs_befs.lst partmap-befs_mod-fs_befs.lst handler-befs_mod-fs_befs.lst parttool-befs_mod-fs_befs.lst video-befs_mod-fs_befs.lst terminal-befs_mod-fs_befs.lst

CLEAN_MODULE_TARGETS += clean-module-befs_mod-fs_befs-extra.1

COMMANDFILES += cmd-befs_mod-fs_befs.lst
FSFILES += fs-befs_mod-fs_befs.lst
PARTTOOLFILES += parttool-befs_mod-fs_befs.lst
PARTMAPFILES += partmap-befs_mod-fs_befs.lst
HANDLERFILES += handler-befs_mod-fs_befs.lst
TERMINALFILES += terminal-befs_mod-fs_befs.lst
VIDEOFILES += video-befs_mod-fs_befs.lst

cmd-befs_mod-fs_befs.lst: fs/befs.c $(fs/befs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh befs > $@ || (rm -f $@; exit 1)

fs-befs_mod-fs_befs.lst: fs/befs.c $(fs/befs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(befs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh befs > $@ || (rm -f $@; exit 1)

parttool-befs_mod-fs_befs.lst: fs/befs.c $(fs/befs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh befs > $@ || (rm -f $@; exit 1)

partmap-befs_mod-fs_befs.lst: fs/befs.c $(fs/befs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(befs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh befs > $@ || (rm -f $@; exit 1)

handler-befs_mod-fs_befs.lst: fs/befs.c $(fs/befs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh befs > $@ || (rm -f $@; exit 1)

terminal-befs_mod-fs_befs.lst: fs/befs.c $(fs/befs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh befs > $@ || (rm -f $@; exit 1)

video-befs_mod-fs_befs.lst: fs/befs.c $(fs/befs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(befs_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh befs > $@ || (rm -f $@; exit 1)

befs_mod_CFLAGS = $(COMMON_CFLAGS)
befs_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For befs_be.mod.
befs_be_mod_SOURCES = fs/befs_be.c

clean-module-befs_be.mod.1:
	rm -f befs_be.mod mod-befs_be.o mod-befs_be.c pre-befs_be.o befs_be_mod-fs_befs_be.o und-befs_be.lst

CLEAN_MODULE_TARGETS += clean-module-befs_be.mod.1

clean-module-befs_be.mod-symbol.1:
	rm -f def-befs_be.lst

CLEAN_MODULE_TARGETS += clean-module-befs_be.mod-symbol.1
DEFSYMFILES += def-befs_be.lst
mostlyclean-module-befs_be.mod.1:
	rm -f befs_be_mod-fs_befs_be.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-befs_be.mod.1
UNDSYMFILES += und-befs_be.lst

ifeq ($(TARGET_NO_MODULES), yes)
befs_be.mod: pre-befs_be.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(befs_be_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-befs_be.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
befs_be.mod: pre-befs_be.o mod-befs_be.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(befs_be_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-befs_be.o mod-befs_be.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
befs_be.mod: pre-befs_be.o mod-befs_be.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(befs_be_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-befs_be.o mod-befs_be.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-befs_be.o: $(befs_be_mod_DEPENDENCIES) befs_be_mod-fs_befs_be.o
	-rm -f $@
	$(TARGET_CC) $(befs_be_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ befs_be_mod-fs_befs_be.o

mod-befs_be.o: mod-befs_be.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(befs_be_mod_CFLAGS) -DGRUB_FILE=\"mod-befs_be.c\" -c -o $@ $<

mod-befs_be.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'befs_be' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-befs_be.lst: pre-befs_be.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 befs_be/' > $@
else
def-befs_be.lst: pre-befs_be.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 befs_be/' > $@
endif

und-befs_be.lst: pre-befs_be.o
	echo 'befs_be' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

befs_be_mod-fs_befs_be.o: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES)
	$(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_be_mod_CFLAGS) -DGRUB_FILE=\"fs/befs_be.c\" -MD -c -o $@ $<
-include befs_be_mod-fs_befs_be.d

clean-module-befs_be_mod-fs_befs_be-extra.1:
	rm -f cmd-befs_be_mod-fs_befs_be.lst fs-befs_be_mod-fs_befs_be.lst partmap-befs_be_mod-fs_befs_be.lst handler-befs_be_mod-fs_befs_be.lst parttool-befs_be_mod-fs_befs_be.lst video-befs_be_mod-fs_befs_be.lst terminal-befs_be_mod-fs_befs_be.lst

CLEAN_MODULE_TARGETS += clean-module-befs_be_mod-fs_befs_be-extra.1

COMMANDFILES += cmd-befs_be_mod-fs_befs_be.lst
FSFILES += fs-befs_be_mod-fs_befs_be.lst
PARTTOOLFILES += parttool-befs_be_mod-fs_befs_be.lst
PARTMAPFILES += partmap-befs_be_mod-fs_befs_be.lst
HANDLERFILES += handler-befs_be_mod-fs_befs_be.lst
TERMINALFILES += terminal-befs_be_mod-fs_befs_be.lst
VIDEOFILES += video-befs_be_mod-fs_befs_be.lst

cmd-befs_be_mod-fs_befs_be.lst: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh befs_be > $@ || (rm -f $@; exit 1)

fs-befs_be_mod-fs_befs_be.lst: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(befs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh befs_be > $@ || (rm -f $@; exit 1)

parttool-befs_be_mod-fs_befs_be.lst: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh befs_be > $@ || (rm -f $@; exit 1)

partmap-befs_be_mod-fs_befs_be.lst: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(befs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh befs_be > $@ || (rm -f $@; exit 1)

handler-befs_be_mod-fs_befs_be.lst: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh befs_be > $@ || (rm -f $@; exit 1)

terminal-befs_be_mod-fs_befs_be.lst: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(befs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh befs_be > $@ || (rm -f $@; exit 1)

video-befs_be_mod-fs_befs_be.lst: fs/befs_be.c $(fs/befs_be.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifs -I$(srcdir)/fs $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(befs_be_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh befs_be > $@ || (rm -f $@; exit 1)

befs_be_mod_CFLAGS = $(COMMON_CFLAGS)
befs_be_mod_LDFLAGS = $(COMMON_LDFLAGS)

# Partition maps.

pkglib_MODULES += part_amiga.mod
part_amiga_mod_SOURCES = partmap/amiga.c

clean-module-part_amiga.mod.1:
	rm -f part_amiga.mod mod-part_amiga.o mod-part_amiga.c pre-part_amiga.o part_amiga_mod-partmap_amiga.o und-part_amiga.lst

CLEAN_MODULE_TARGETS += clean-module-part_amiga.mod.1

clean-module-part_amiga.mod-symbol.1:
	rm -f def-part_amiga.lst

CLEAN_MODULE_TARGETS += clean-module-part_amiga.mod-symbol.1
DEFSYMFILES += def-part_amiga.lst
mostlyclean-module-part_amiga.mod.1:
	rm -f part_amiga_mod-partmap_amiga.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-part_amiga.mod.1
UNDSYMFILES += und-part_amiga.lst

ifeq ($(TARGET_NO_MODULES), yes)
part_amiga.mod: pre-part_amiga.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_amiga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_amiga.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
part_amiga.mod: pre-part_amiga.o mod-part_amiga.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_amiga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_amiga.o mod-part_amiga.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
part_amiga.mod: pre-part_amiga.o mod-part_amiga.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(part_amiga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-part_amiga.o mod-part_amiga.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-part_amiga.o: $(part_amiga_mod_DEPENDENCIES) part_amiga_mod-partmap_amiga.o
	-rm -f $@
	$(TARGET_CC) $(part_amiga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ part_amiga_mod-partmap_amiga.o

mod-part_amiga.o: mod-part_amiga.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(part_amiga_mod_CFLAGS) -DGRUB_FILE=\"mod-part_amiga.c\" -c -o $@ $<

mod-part_amiga.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'part_amiga' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-part_amiga.lst: pre-part_amiga.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 part_amiga/' > $@
else
def-part_amiga.lst: pre-part_amiga.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 part_amiga/' > $@
endif

und-part_amiga.lst: pre-part_amiga.o
	echo 'part_amiga' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

part_amiga_mod-partmap_amiga.o: partmap/amiga.c $(partmap/amiga.c_DEPENDENCIES)
	$(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_amiga_mod_CFLAGS) -DGRUB_FILE=\"partmap/amiga.c\" -MD -c -o $@ $<
-include part_amiga_mod-partmap_amiga.d

clean-module-part_amiga_mod-partmap_amiga-extra.1:
	rm -f cmd-part_amiga_mod-partmap_amiga.lst fs-part_amiga_mod-partmap_amiga.lst partmap-part_amiga_mod-partmap_amiga.lst handler-part_amiga_mod-partmap_amiga.lst parttool-part_amiga_mod-partmap_amiga.lst video-part_amiga_mod-partmap_amiga.lst terminal-part_amiga_mod-partmap_amiga.lst

CLEAN_MODULE_TARGETS += clean-module-part_amiga_mod-partmap_amiga-extra.1

COMMANDFILES += cmd-part_amiga_mod-partmap_amiga.lst
FSFILES += fs-part_amiga_mod-partmap_amiga.lst
PARTTOOLFILES += parttool-part_amiga_mod-partmap_amiga.lst
PARTMAPFILES += partmap-part_amiga_mod-partmap_amiga.lst
HANDLERFILES += handler-part_amiga_mod-partmap_amiga.lst
TERMINALFILES += terminal-part_amiga_mod-partmap_amiga.lst
VIDEOFILES += video-part_amiga_mod-partmap_amiga.lst

cmd-part_amiga_mod-partmap_amiga.lst: partmap/amiga.c $(partmap/amiga.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_amiga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh part_amiga > $@ || (rm -f $@; exit 1)

fs-part_amiga_mod-partmap_amiga.lst: partmap/amiga.c $(partmap/amiga.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_amiga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh part_amiga > $@ || (rm -f $@; exit 1)

parttool-part_amiga_mod-partmap_amiga.lst: partmap/amiga.c $(partmap/amiga.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_amiga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh part_amiga > $@ || (rm -f $@; exit 1)

partmap-part_amiga_mod-partmap_amiga.lst: partmap/amiga.c $(partmap/amiga.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_amiga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh part_amiga > $@ || (rm -f $@; exit 1)

handler-part_amiga_mod-partmap_amiga.lst: partmap/amiga.c $(partmap/amiga.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_amiga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh part_amiga > $@ || (rm -f $@; exit 1)

terminal-part_amiga_mod-partmap_amiga.lst: partmap/amiga.c $(partmap/amiga.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_amiga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh part_amiga > $@ || (rm -f $@; exit 1)

video-part_amiga_mod-partmap_amiga.lst: partmap/amiga.c $(partmap/amiga.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_amiga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh part_amiga > $@ || (rm -f $@; exit 1)

part_amiga_mod_CFLAGS = $(COMMON_CFLAGS)
part_amiga_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += part_apple.mod
part_apple_mod_SOURCES = partmap/apple.c

clean-module-part_apple.mod.1:
	rm -f part_apple.mod mod-part_apple.o mod-part_apple.c pre-part_apple.o part_apple_mod-partmap_apple.o und-part_apple.lst

CLEAN_MODULE_TARGETS += clean-module-part_apple.mod.1

clean-module-part_apple.mod-symbol.1:
	rm -f def-part_apple.lst

CLEAN_MODULE_TARGETS += clean-module-part_apple.mod-symbol.1
DEFSYMFILES += def-part_apple.lst
mostlyclean-module-part_apple.mod.1:
	rm -f part_apple_mod-partmap_apple.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-part_apple.mod.1
UNDSYMFILES += und-part_apple.lst

ifeq ($(TARGET_NO_MODULES), yes)
part_apple.mod: pre-part_apple.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_apple_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_apple.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
part_apple.mod: pre-part_apple.o mod-part_apple.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_apple_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_apple.o mod-part_apple.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
part_apple.mod: pre-part_apple.o mod-part_apple.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(part_apple_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-part_apple.o mod-part_apple.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-part_apple.o: $(part_apple_mod_DEPENDENCIES) part_apple_mod-partmap_apple.o
	-rm -f $@
	$(TARGET_CC) $(part_apple_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ part_apple_mod-partmap_apple.o

mod-part_apple.o: mod-part_apple.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(part_apple_mod_CFLAGS) -DGRUB_FILE=\"mod-part_apple.c\" -c -o $@ $<

mod-part_apple.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'part_apple' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-part_apple.lst: pre-part_apple.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 part_apple/' > $@
else
def-part_apple.lst: pre-part_apple.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 part_apple/' > $@
endif

und-part_apple.lst: pre-part_apple.o
	echo 'part_apple' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

part_apple_mod-partmap_apple.o: partmap/apple.c $(partmap/apple.c_DEPENDENCIES)
	$(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_apple_mod_CFLAGS) -DGRUB_FILE=\"partmap/apple.c\" -MD -c -o $@ $<
-include part_apple_mod-partmap_apple.d

clean-module-part_apple_mod-partmap_apple-extra.1:
	rm -f cmd-part_apple_mod-partmap_apple.lst fs-part_apple_mod-partmap_apple.lst partmap-part_apple_mod-partmap_apple.lst handler-part_apple_mod-partmap_apple.lst parttool-part_apple_mod-partmap_apple.lst video-part_apple_mod-partmap_apple.lst terminal-part_apple_mod-partmap_apple.lst

CLEAN_MODULE_TARGETS += clean-module-part_apple_mod-partmap_apple-extra.1

COMMANDFILES += cmd-part_apple_mod-partmap_apple.lst
FSFILES += fs-part_apple_mod-partmap_apple.lst
PARTTOOLFILES += parttool-part_apple_mod-partmap_apple.lst
PARTMAPFILES += partmap-part_apple_mod-partmap_apple.lst
HANDLERFILES += handler-part_apple_mod-partmap_apple.lst
TERMINALFILES += terminal-part_apple_mod-partmap_apple.lst
VIDEOFILES += video-part_apple_mod-partmap_apple.lst

cmd-part_apple_mod-partmap_apple.lst: partmap/apple.c $(partmap/apple.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_apple_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh part_apple > $@ || (rm -f $@; exit 1)

fs-part_apple_mod-partmap_apple.lst: partmap/apple.c $(partmap/apple.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_apple_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh part_apple > $@ || (rm -f $@; exit 1)

parttool-part_apple_mod-partmap_apple.lst: partmap/apple.c $(partmap/apple.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_apple_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh part_apple > $@ || (rm -f $@; exit 1)

partmap-part_apple_mod-partmap_apple.lst: partmap/apple.c $(partmap/apple.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_apple_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh part_apple > $@ || (rm -f $@; exit 1)

handler-part_apple_mod-partmap_apple.lst: partmap/apple.c $(partmap/apple.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_apple_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh part_apple > $@ || (rm -f $@; exit 1)

terminal-part_apple_mod-partmap_apple.lst: partmap/apple.c $(partmap/apple.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_apple_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh part_apple > $@ || (rm -f $@; exit 1)

video-part_apple_mod-partmap_apple.lst: partmap/apple.c $(partmap/apple.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_apple_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh part_apple > $@ || (rm -f $@; exit 1)

part_apple_mod_CFLAGS = $(COMMON_CFLAGS)
part_apple_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += part_msdos.mod
part_msdos_mod_SOURCES = partmap/msdos.c

clean-module-part_msdos.mod.1:
	rm -f part_msdos.mod mod-part_msdos.o mod-part_msdos.c pre-part_msdos.o part_msdos_mod-partmap_msdos.o und-part_msdos.lst

CLEAN_MODULE_TARGETS += clean-module-part_msdos.mod.1

clean-module-part_msdos.mod-symbol.1:
	rm -f def-part_msdos.lst

CLEAN_MODULE_TARGETS += clean-module-part_msdos.mod-symbol.1
DEFSYMFILES += def-part_msdos.lst
mostlyclean-module-part_msdos.mod.1:
	rm -f part_msdos_mod-partmap_msdos.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-part_msdos.mod.1
UNDSYMFILES += und-part_msdos.lst

ifeq ($(TARGET_NO_MODULES), yes)
part_msdos.mod: pre-part_msdos.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_msdos_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_msdos.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
part_msdos.mod: pre-part_msdos.o mod-part_msdos.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_msdos_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_msdos.o mod-part_msdos.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
part_msdos.mod: pre-part_msdos.o mod-part_msdos.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(part_msdos_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-part_msdos.o mod-part_msdos.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-part_msdos.o: $(part_msdos_mod_DEPENDENCIES) part_msdos_mod-partmap_msdos.o
	-rm -f $@
	$(TARGET_CC) $(part_msdos_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ part_msdos_mod-partmap_msdos.o

mod-part_msdos.o: mod-part_msdos.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(part_msdos_mod_CFLAGS) -DGRUB_FILE=\"mod-part_msdos.c\" -c -o $@ $<

mod-part_msdos.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'part_msdos' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-part_msdos.lst: pre-part_msdos.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 part_msdos/' > $@
else
def-part_msdos.lst: pre-part_msdos.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 part_msdos/' > $@
endif

und-part_msdos.lst: pre-part_msdos.o
	echo 'part_msdos' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

part_msdos_mod-partmap_msdos.o: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES)
	$(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_msdos_mod_CFLAGS) -DGRUB_FILE=\"partmap/msdos.c\" -MD -c -o $@ $<
-include part_msdos_mod-partmap_msdos.d

clean-module-part_msdos_mod-partmap_msdos-extra.1:
	rm -f cmd-part_msdos_mod-partmap_msdos.lst fs-part_msdos_mod-partmap_msdos.lst partmap-part_msdos_mod-partmap_msdos.lst handler-part_msdos_mod-partmap_msdos.lst parttool-part_msdos_mod-partmap_msdos.lst video-part_msdos_mod-partmap_msdos.lst terminal-part_msdos_mod-partmap_msdos.lst

CLEAN_MODULE_TARGETS += clean-module-part_msdos_mod-partmap_msdos-extra.1

COMMANDFILES += cmd-part_msdos_mod-partmap_msdos.lst
FSFILES += fs-part_msdos_mod-partmap_msdos.lst
PARTTOOLFILES += parttool-part_msdos_mod-partmap_msdos.lst
PARTMAPFILES += partmap-part_msdos_mod-partmap_msdos.lst
HANDLERFILES += handler-part_msdos_mod-partmap_msdos.lst
TERMINALFILES += terminal-part_msdos_mod-partmap_msdos.lst
VIDEOFILES += video-part_msdos_mod-partmap_msdos.lst

cmd-part_msdos_mod-partmap_msdos.lst: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_msdos_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh part_msdos > $@ || (rm -f $@; exit 1)

fs-part_msdos_mod-partmap_msdos.lst: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_msdos_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh part_msdos > $@ || (rm -f $@; exit 1)

parttool-part_msdos_mod-partmap_msdos.lst: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_msdos_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh part_msdos > $@ || (rm -f $@; exit 1)

partmap-part_msdos_mod-partmap_msdos.lst: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_msdos_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh part_msdos > $@ || (rm -f $@; exit 1)

handler-part_msdos_mod-partmap_msdos.lst: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_msdos_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh part_msdos > $@ || (rm -f $@; exit 1)

terminal-part_msdos_mod-partmap_msdos.lst: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_msdos_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh part_msdos > $@ || (rm -f $@; exit 1)

video-part_msdos_mod-partmap_msdos.lst: partmap/msdos.c $(partmap/msdos.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_msdos_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh part_msdos > $@ || (rm -f $@; exit 1)

part_msdos_mod_CFLAGS = $(COMMON_CFLAGS)
part_msdos_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += part_sun.mod
part_sun_mod_SOURCES = partmap/sun.c

clean-module-part_sun.mod.1:
	rm -f part_sun.mod mod-part_sun.o mod-part_sun.c pre-part_sun.o part_sun_mod-partmap_sun.o und-part_sun.lst

CLEAN_MODULE_TARGETS += clean-module-part_sun.mod.1

clean-module-part_sun.mod-symbol.1:
	rm -f def-part_sun.lst

CLEAN_MODULE_TARGETS += clean-module-part_sun.mod-symbol.1
DEFSYMFILES += def-part_sun.lst
mostlyclean-module-part_sun.mod.1:
	rm -f part_sun_mod-partmap_sun.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-part_sun.mod.1
UNDSYMFILES += und-part_sun.lst

ifeq ($(TARGET_NO_MODULES), yes)
part_sun.mod: pre-part_sun.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_sun_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_sun.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
part_sun.mod: pre-part_sun.o mod-part_sun.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_sun_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_sun.o mod-part_sun.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
part_sun.mod: pre-part_sun.o mod-part_sun.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(part_sun_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-part_sun.o mod-part_sun.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-part_sun.o: $(part_sun_mod_DEPENDENCIES) part_sun_mod-partmap_sun.o
	-rm -f $@
	$(TARGET_CC) $(part_sun_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ part_sun_mod-partmap_sun.o

mod-part_sun.o: mod-part_sun.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(part_sun_mod_CFLAGS) -DGRUB_FILE=\"mod-part_sun.c\" -c -o $@ $<

mod-part_sun.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'part_sun' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-part_sun.lst: pre-part_sun.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 part_sun/' > $@
else
def-part_sun.lst: pre-part_sun.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 part_sun/' > $@
endif

und-part_sun.lst: pre-part_sun.o
	echo 'part_sun' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

part_sun_mod-partmap_sun.o: partmap/sun.c $(partmap/sun.c_DEPENDENCIES)
	$(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sun_mod_CFLAGS) -DGRUB_FILE=\"partmap/sun.c\" -MD -c -o $@ $<
-include part_sun_mod-partmap_sun.d

clean-module-part_sun_mod-partmap_sun-extra.1:
	rm -f cmd-part_sun_mod-partmap_sun.lst fs-part_sun_mod-partmap_sun.lst partmap-part_sun_mod-partmap_sun.lst handler-part_sun_mod-partmap_sun.lst parttool-part_sun_mod-partmap_sun.lst video-part_sun_mod-partmap_sun.lst terminal-part_sun_mod-partmap_sun.lst

CLEAN_MODULE_TARGETS += clean-module-part_sun_mod-partmap_sun-extra.1

COMMANDFILES += cmd-part_sun_mod-partmap_sun.lst
FSFILES += fs-part_sun_mod-partmap_sun.lst
PARTTOOLFILES += parttool-part_sun_mod-partmap_sun.lst
PARTMAPFILES += partmap-part_sun_mod-partmap_sun.lst
HANDLERFILES += handler-part_sun_mod-partmap_sun.lst
TERMINALFILES += terminal-part_sun_mod-partmap_sun.lst
VIDEOFILES += video-part_sun_mod-partmap_sun.lst

cmd-part_sun_mod-partmap_sun.lst: partmap/sun.c $(partmap/sun.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sun_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh part_sun > $@ || (rm -f $@; exit 1)

fs-part_sun_mod-partmap_sun.lst: partmap/sun.c $(partmap/sun.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_sun_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh part_sun > $@ || (rm -f $@; exit 1)

parttool-part_sun_mod-partmap_sun.lst: partmap/sun.c $(partmap/sun.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sun_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh part_sun > $@ || (rm -f $@; exit 1)

partmap-part_sun_mod-partmap_sun.lst: partmap/sun.c $(partmap/sun.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_sun_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh part_sun > $@ || (rm -f $@; exit 1)

handler-part_sun_mod-partmap_sun.lst: partmap/sun.c $(partmap/sun.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sun_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh part_sun > $@ || (rm -f $@; exit 1)

terminal-part_sun_mod-partmap_sun.lst: partmap/sun.c $(partmap/sun.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sun_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh part_sun > $@ || (rm -f $@; exit 1)

video-part_sun_mod-partmap_sun.lst: partmap/sun.c $(partmap/sun.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_sun_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh part_sun > $@ || (rm -f $@; exit 1)

part_sun_mod_CFLAGS = $(COMMON_CFLAGS)
part_sun_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += part_acorn.mod
part_acorn_mod_SOURCES = partmap/acorn.c

clean-module-part_acorn.mod.1:
	rm -f part_acorn.mod mod-part_acorn.o mod-part_acorn.c pre-part_acorn.o part_acorn_mod-partmap_acorn.o und-part_acorn.lst

CLEAN_MODULE_TARGETS += clean-module-part_acorn.mod.1

clean-module-part_acorn.mod-symbol.1:
	rm -f def-part_acorn.lst

CLEAN_MODULE_TARGETS += clean-module-part_acorn.mod-symbol.1
DEFSYMFILES += def-part_acorn.lst
mostlyclean-module-part_acorn.mod.1:
	rm -f part_acorn_mod-partmap_acorn.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-part_acorn.mod.1
UNDSYMFILES += und-part_acorn.lst

ifeq ($(TARGET_NO_MODULES), yes)
part_acorn.mod: pre-part_acorn.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_acorn_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_acorn.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
part_acorn.mod: pre-part_acorn.o mod-part_acorn.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_acorn_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_acorn.o mod-part_acorn.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
part_acorn.mod: pre-part_acorn.o mod-part_acorn.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(part_acorn_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-part_acorn.o mod-part_acorn.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-part_acorn.o: $(part_acorn_mod_DEPENDENCIES) part_acorn_mod-partmap_acorn.o
	-rm -f $@
	$(TARGET_CC) $(part_acorn_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ part_acorn_mod-partmap_acorn.o

mod-part_acorn.o: mod-part_acorn.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(part_acorn_mod_CFLAGS) -DGRUB_FILE=\"mod-part_acorn.c\" -c -o $@ $<

mod-part_acorn.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'part_acorn' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-part_acorn.lst: pre-part_acorn.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 part_acorn/' > $@
else
def-part_acorn.lst: pre-part_acorn.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 part_acorn/' > $@
endif

und-part_acorn.lst: pre-part_acorn.o
	echo 'part_acorn' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

part_acorn_mod-partmap_acorn.o: partmap/acorn.c $(partmap/acorn.c_DEPENDENCIES)
	$(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_acorn_mod_CFLAGS) -DGRUB_FILE=\"partmap/acorn.c\" -MD -c -o $@ $<
-include part_acorn_mod-partmap_acorn.d

clean-module-part_acorn_mod-partmap_acorn-extra.1:
	rm -f cmd-part_acorn_mod-partmap_acorn.lst fs-part_acorn_mod-partmap_acorn.lst partmap-part_acorn_mod-partmap_acorn.lst handler-part_acorn_mod-partmap_acorn.lst parttool-part_acorn_mod-partmap_acorn.lst video-part_acorn_mod-partmap_acorn.lst terminal-part_acorn_mod-partmap_acorn.lst

CLEAN_MODULE_TARGETS += clean-module-part_acorn_mod-partmap_acorn-extra.1

COMMANDFILES += cmd-part_acorn_mod-partmap_acorn.lst
FSFILES += fs-part_acorn_mod-partmap_acorn.lst
PARTTOOLFILES += parttool-part_acorn_mod-partmap_acorn.lst
PARTMAPFILES += partmap-part_acorn_mod-partmap_acorn.lst
HANDLERFILES += handler-part_acorn_mod-partmap_acorn.lst
TERMINALFILES += terminal-part_acorn_mod-partmap_acorn.lst
VIDEOFILES += video-part_acorn_mod-partmap_acorn.lst

cmd-part_acorn_mod-partmap_acorn.lst: partmap/acorn.c $(partmap/acorn.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_acorn_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh part_acorn > $@ || (rm -f $@; exit 1)

fs-part_acorn_mod-partmap_acorn.lst: partmap/acorn.c $(partmap/acorn.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_acorn_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh part_acorn > $@ || (rm -f $@; exit 1)

parttool-part_acorn_mod-partmap_acorn.lst: partmap/acorn.c $(partmap/acorn.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_acorn_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh part_acorn > $@ || (rm -f $@; exit 1)

partmap-part_acorn_mod-partmap_acorn.lst: partmap/acorn.c $(partmap/acorn.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_acorn_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh part_acorn > $@ || (rm -f $@; exit 1)

handler-part_acorn_mod-partmap_acorn.lst: partmap/acorn.c $(partmap/acorn.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_acorn_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh part_acorn > $@ || (rm -f $@; exit 1)

terminal-part_acorn_mod-partmap_acorn.lst: partmap/acorn.c $(partmap/acorn.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_acorn_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh part_acorn > $@ || (rm -f $@; exit 1)

video-part_acorn_mod-partmap_acorn.lst: partmap/acorn.c $(partmap/acorn.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_acorn_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh part_acorn > $@ || (rm -f $@; exit 1)

part_acorn_mod_CFLAGS = $(COMMON_CFLAGS)
part_acorn_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += part_gpt.mod
part_gpt_mod_SOURCES = partmap/gpt.c

clean-module-part_gpt.mod.1:
	rm -f part_gpt.mod mod-part_gpt.o mod-part_gpt.c pre-part_gpt.o part_gpt_mod-partmap_gpt.o und-part_gpt.lst

CLEAN_MODULE_TARGETS += clean-module-part_gpt.mod.1

clean-module-part_gpt.mod-symbol.1:
	rm -f def-part_gpt.lst

CLEAN_MODULE_TARGETS += clean-module-part_gpt.mod-symbol.1
DEFSYMFILES += def-part_gpt.lst
mostlyclean-module-part_gpt.mod.1:
	rm -f part_gpt_mod-partmap_gpt.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-part_gpt.mod.1
UNDSYMFILES += und-part_gpt.lst

ifeq ($(TARGET_NO_MODULES), yes)
part_gpt.mod: pre-part_gpt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_gpt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_gpt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
part_gpt.mod: pre-part_gpt.o mod-part_gpt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_gpt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_gpt.o mod-part_gpt.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
part_gpt.mod: pre-part_gpt.o mod-part_gpt.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(part_gpt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-part_gpt.o mod-part_gpt.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-part_gpt.o: $(part_gpt_mod_DEPENDENCIES) part_gpt_mod-partmap_gpt.o
	-rm -f $@
	$(TARGET_CC) $(part_gpt_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ part_gpt_mod-partmap_gpt.o

mod-part_gpt.o: mod-part_gpt.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(part_gpt_mod_CFLAGS) -DGRUB_FILE=\"mod-part_gpt.c\" -c -o $@ $<

mod-part_gpt.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'part_gpt' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-part_gpt.lst: pre-part_gpt.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 part_gpt/' > $@
else
def-part_gpt.lst: pre-part_gpt.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 part_gpt/' > $@
endif

und-part_gpt.lst: pre-part_gpt.o
	echo 'part_gpt' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

part_gpt_mod-partmap_gpt.o: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES)
	$(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_gpt_mod_CFLAGS) -DGRUB_FILE=\"partmap/gpt.c\" -MD -c -o $@ $<
-include part_gpt_mod-partmap_gpt.d

clean-module-part_gpt_mod-partmap_gpt-extra.1:
	rm -f cmd-part_gpt_mod-partmap_gpt.lst fs-part_gpt_mod-partmap_gpt.lst partmap-part_gpt_mod-partmap_gpt.lst handler-part_gpt_mod-partmap_gpt.lst parttool-part_gpt_mod-partmap_gpt.lst video-part_gpt_mod-partmap_gpt.lst terminal-part_gpt_mod-partmap_gpt.lst

CLEAN_MODULE_TARGETS += clean-module-part_gpt_mod-partmap_gpt-extra.1

COMMANDFILES += cmd-part_gpt_mod-partmap_gpt.lst
FSFILES += fs-part_gpt_mod-partmap_gpt.lst
PARTTOOLFILES += parttool-part_gpt_mod-partmap_gpt.lst
PARTMAPFILES += partmap-part_gpt_mod-partmap_gpt.lst
HANDLERFILES += handler-part_gpt_mod-partmap_gpt.lst
TERMINALFILES += terminal-part_gpt_mod-partmap_gpt.lst
VIDEOFILES += video-part_gpt_mod-partmap_gpt.lst

cmd-part_gpt_mod-partmap_gpt.lst: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_gpt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh part_gpt > $@ || (rm -f $@; exit 1)

fs-part_gpt_mod-partmap_gpt.lst: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_gpt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh part_gpt > $@ || (rm -f $@; exit 1)

parttool-part_gpt_mod-partmap_gpt.lst: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_gpt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh part_gpt > $@ || (rm -f $@; exit 1)

partmap-part_gpt_mod-partmap_gpt.lst: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_gpt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh part_gpt > $@ || (rm -f $@; exit 1)

handler-part_gpt_mod-partmap_gpt.lst: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_gpt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh part_gpt > $@ || (rm -f $@; exit 1)

terminal-part_gpt_mod-partmap_gpt.lst: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_gpt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh part_gpt > $@ || (rm -f $@; exit 1)

video-part_gpt_mod-partmap_gpt.lst: partmap/gpt.c $(partmap/gpt.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_gpt_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh part_gpt > $@ || (rm -f $@; exit 1)

part_gpt_mod_CFLAGS = $(COMMON_CFLAGS)
part_gpt_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += part_bsd.mod
part_bsd_mod_SOURCES = partmap/bsdlabel.c

clean-module-part_bsd.mod.1:
	rm -f part_bsd.mod mod-part_bsd.o mod-part_bsd.c pre-part_bsd.o part_bsd_mod-partmap_bsdlabel.o und-part_bsd.lst

CLEAN_MODULE_TARGETS += clean-module-part_bsd.mod.1

clean-module-part_bsd.mod-symbol.1:
	rm -f def-part_bsd.lst

CLEAN_MODULE_TARGETS += clean-module-part_bsd.mod-symbol.1
DEFSYMFILES += def-part_bsd.lst
mostlyclean-module-part_bsd.mod.1:
	rm -f part_bsd_mod-partmap_bsdlabel.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-part_bsd.mod.1
UNDSYMFILES += und-part_bsd.lst

ifeq ($(TARGET_NO_MODULES), yes)
part_bsd.mod: pre-part_bsd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_bsd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_bsd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
part_bsd.mod: pre-part_bsd.o mod-part_bsd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_bsd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_bsd.o mod-part_bsd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
part_bsd.mod: pre-part_bsd.o mod-part_bsd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(part_bsd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-part_bsd.o mod-part_bsd.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-part_bsd.o: $(part_bsd_mod_DEPENDENCIES) part_bsd_mod-partmap_bsdlabel.o
	-rm -f $@
	$(TARGET_CC) $(part_bsd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ part_bsd_mod-partmap_bsdlabel.o

mod-part_bsd.o: mod-part_bsd.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(part_bsd_mod_CFLAGS) -DGRUB_FILE=\"mod-part_bsd.c\" -c -o $@ $<

mod-part_bsd.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'part_bsd' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-part_bsd.lst: pre-part_bsd.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 part_bsd/' > $@
else
def-part_bsd.lst: pre-part_bsd.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 part_bsd/' > $@
endif

und-part_bsd.lst: pre-part_bsd.o
	echo 'part_bsd' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

part_bsd_mod-partmap_bsdlabel.o: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES)
	$(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_bsd_mod_CFLAGS) -DGRUB_FILE=\"partmap/bsdlabel.c\" -MD -c -o $@ $<
-include part_bsd_mod-partmap_bsdlabel.d

clean-module-part_bsd_mod-partmap_bsdlabel-extra.1:
	rm -f cmd-part_bsd_mod-partmap_bsdlabel.lst fs-part_bsd_mod-partmap_bsdlabel.lst partmap-part_bsd_mod-partmap_bsdlabel.lst handler-part_bsd_mod-partmap_bsdlabel.lst parttool-part_bsd_mod-partmap_bsdlabel.lst video-part_bsd_mod-partmap_bsdlabel.lst terminal-part_bsd_mod-partmap_bsdlabel.lst

CLEAN_MODULE_TARGETS += clean-module-part_bsd_mod-partmap_bsdlabel-extra.1

COMMANDFILES += cmd-part_bsd_mod-partmap_bsdlabel.lst
FSFILES += fs-part_bsd_mod-partmap_bsdlabel.lst
PARTTOOLFILES += parttool-part_bsd_mod-partmap_bsdlabel.lst
PARTMAPFILES += partmap-part_bsd_mod-partmap_bsdlabel.lst
HANDLERFILES += handler-part_bsd_mod-partmap_bsdlabel.lst
TERMINALFILES += terminal-part_bsd_mod-partmap_bsdlabel.lst
VIDEOFILES += video-part_bsd_mod-partmap_bsdlabel.lst

cmd-part_bsd_mod-partmap_bsdlabel.lst: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh part_bsd > $@ || (rm -f $@; exit 1)

fs-part_bsd_mod-partmap_bsdlabel.lst: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh part_bsd > $@ || (rm -f $@; exit 1)

parttool-part_bsd_mod-partmap_bsdlabel.lst: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh part_bsd > $@ || (rm -f $@; exit 1)

partmap-part_bsd_mod-partmap_bsdlabel.lst: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh part_bsd > $@ || (rm -f $@; exit 1)

handler-part_bsd_mod-partmap_bsdlabel.lst: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh part_bsd > $@ || (rm -f $@; exit 1)

terminal-part_bsd_mod-partmap_bsdlabel.lst: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh part_bsd > $@ || (rm -f $@; exit 1)

video-part_bsd_mod-partmap_bsdlabel.lst: partmap/bsdlabel.c $(partmap/bsdlabel.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_bsd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh part_bsd > $@ || (rm -f $@; exit 1)

part_bsd_mod_CFLAGS = $(COMMON_CFLAGS)
part_bsd_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += part_sunpc.mod
part_sunpc_mod_SOURCES = partmap/sunpc.c

clean-module-part_sunpc.mod.1:
	rm -f part_sunpc.mod mod-part_sunpc.o mod-part_sunpc.c pre-part_sunpc.o part_sunpc_mod-partmap_sunpc.o und-part_sunpc.lst

CLEAN_MODULE_TARGETS += clean-module-part_sunpc.mod.1

clean-module-part_sunpc.mod-symbol.1:
	rm -f def-part_sunpc.lst

CLEAN_MODULE_TARGETS += clean-module-part_sunpc.mod-symbol.1
DEFSYMFILES += def-part_sunpc.lst
mostlyclean-module-part_sunpc.mod.1:
	rm -f part_sunpc_mod-partmap_sunpc.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-part_sunpc.mod.1
UNDSYMFILES += und-part_sunpc.lst

ifeq ($(TARGET_NO_MODULES), yes)
part_sunpc.mod: pre-part_sunpc.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_sunpc_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_sunpc.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
part_sunpc.mod: pre-part_sunpc.o mod-part_sunpc.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(part_sunpc_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-part_sunpc.o mod-part_sunpc.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
part_sunpc.mod: pre-part_sunpc.o mod-part_sunpc.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(part_sunpc_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-part_sunpc.o mod-part_sunpc.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-part_sunpc.o: $(part_sunpc_mod_DEPENDENCIES) part_sunpc_mod-partmap_sunpc.o
	-rm -f $@
	$(TARGET_CC) $(part_sunpc_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ part_sunpc_mod-partmap_sunpc.o

mod-part_sunpc.o: mod-part_sunpc.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(part_sunpc_mod_CFLAGS) -DGRUB_FILE=\"mod-part_sunpc.c\" -c -o $@ $<

mod-part_sunpc.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'part_sunpc' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-part_sunpc.lst: pre-part_sunpc.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 part_sunpc/' > $@
else
def-part_sunpc.lst: pre-part_sunpc.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 part_sunpc/' > $@
endif

und-part_sunpc.lst: pre-part_sunpc.o
	echo 'part_sunpc' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

part_sunpc_mod-partmap_sunpc.o: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES)
	$(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sunpc_mod_CFLAGS) -DGRUB_FILE=\"partmap/sunpc.c\" -MD -c -o $@ $<
-include part_sunpc_mod-partmap_sunpc.d

clean-module-part_sunpc_mod-partmap_sunpc-extra.1:
	rm -f cmd-part_sunpc_mod-partmap_sunpc.lst fs-part_sunpc_mod-partmap_sunpc.lst partmap-part_sunpc_mod-partmap_sunpc.lst handler-part_sunpc_mod-partmap_sunpc.lst parttool-part_sunpc_mod-partmap_sunpc.lst video-part_sunpc_mod-partmap_sunpc.lst terminal-part_sunpc_mod-partmap_sunpc.lst

CLEAN_MODULE_TARGETS += clean-module-part_sunpc_mod-partmap_sunpc-extra.1

COMMANDFILES += cmd-part_sunpc_mod-partmap_sunpc.lst
FSFILES += fs-part_sunpc_mod-partmap_sunpc.lst
PARTTOOLFILES += parttool-part_sunpc_mod-partmap_sunpc.lst
PARTMAPFILES += partmap-part_sunpc_mod-partmap_sunpc.lst
HANDLERFILES += handler-part_sunpc_mod-partmap_sunpc.lst
TERMINALFILES += terminal-part_sunpc_mod-partmap_sunpc.lst
VIDEOFILES += video-part_sunpc_mod-partmap_sunpc.lst

cmd-part_sunpc_mod-partmap_sunpc.lst: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sunpc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh part_sunpc > $@ || (rm -f $@; exit 1)

fs-part_sunpc_mod-partmap_sunpc.lst: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_sunpc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh part_sunpc > $@ || (rm -f $@; exit 1)

parttool-part_sunpc_mod-partmap_sunpc.lst: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sunpc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh part_sunpc > $@ || (rm -f $@; exit 1)

partmap-part_sunpc_mod-partmap_sunpc.lst: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_sunpc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh part_sunpc > $@ || (rm -f $@; exit 1)

handler-part_sunpc_mod-partmap_sunpc.lst: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sunpc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh part_sunpc > $@ || (rm -f $@; exit 1)

terminal-part_sunpc_mod-partmap_sunpc.lst: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(part_sunpc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh part_sunpc > $@ || (rm -f $@; exit 1)

video-part_sunpc_mod-partmap_sunpc.lst: partmap/sunpc.c $(partmap/sunpc.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ipartmap -I$(srcdir)/partmap $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(part_sunpc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh part_sunpc > $@ || (rm -f $@; exit 1)

part_sunpc_mod_CFLAGS = $(COMMON_CFLAGS)
part_sunpc_mod_LDFLAGS = $(COMMON_LDFLAGS)

# Special disk structures and generic drivers

pkglib_MODULES += raid.mod raid5rec.mod raid6rec.mod mdraid.mod dm_nv.mod \
	lvm.mod scsi.mod

# For raid.mod
raid_mod_SOURCES = disk/raid.c

clean-module-raid.mod.1:
	rm -f raid.mod mod-raid.o mod-raid.c pre-raid.o raid_mod-disk_raid.o und-raid.lst

CLEAN_MODULE_TARGETS += clean-module-raid.mod.1

clean-module-raid.mod-symbol.1:
	rm -f def-raid.lst

CLEAN_MODULE_TARGETS += clean-module-raid.mod-symbol.1
DEFSYMFILES += def-raid.lst
mostlyclean-module-raid.mod.1:
	rm -f raid_mod-disk_raid.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-raid.mod.1
UNDSYMFILES += und-raid.lst

ifeq ($(TARGET_NO_MODULES), yes)
raid.mod: pre-raid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(raid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-raid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
raid.mod: pre-raid.o mod-raid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(raid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-raid.o mod-raid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
raid.mod: pre-raid.o mod-raid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(raid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-raid.o mod-raid.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-raid.o: $(raid_mod_DEPENDENCIES) raid_mod-disk_raid.o
	-rm -f $@
	$(TARGET_CC) $(raid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ raid_mod-disk_raid.o

mod-raid.o: mod-raid.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(raid_mod_CFLAGS) -DGRUB_FILE=\"mod-raid.c\" -c -o $@ $<

mod-raid.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'raid' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-raid.lst: pre-raid.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 raid/' > $@
else
def-raid.lst: pre-raid.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 raid/' > $@
endif

und-raid.lst: pre-raid.o
	echo 'raid' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

raid_mod-disk_raid.o: disk/raid.c $(disk/raid.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid_mod_CFLAGS) -DGRUB_FILE=\"disk/raid.c\" -MD -c -o $@ $<
-include raid_mod-disk_raid.d

clean-module-raid_mod-disk_raid-extra.1:
	rm -f cmd-raid_mod-disk_raid.lst fs-raid_mod-disk_raid.lst partmap-raid_mod-disk_raid.lst handler-raid_mod-disk_raid.lst parttool-raid_mod-disk_raid.lst video-raid_mod-disk_raid.lst terminal-raid_mod-disk_raid.lst

CLEAN_MODULE_TARGETS += clean-module-raid_mod-disk_raid-extra.1

COMMANDFILES += cmd-raid_mod-disk_raid.lst
FSFILES += fs-raid_mod-disk_raid.lst
PARTTOOLFILES += parttool-raid_mod-disk_raid.lst
PARTMAPFILES += partmap-raid_mod-disk_raid.lst
HANDLERFILES += handler-raid_mod-disk_raid.lst
TERMINALFILES += terminal-raid_mod-disk_raid.lst
VIDEOFILES += video-raid_mod-disk_raid.lst

cmd-raid_mod-disk_raid.lst: disk/raid.c $(disk/raid.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh raid > $@ || (rm -f $@; exit 1)

fs-raid_mod-disk_raid.lst: disk/raid.c $(disk/raid.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(raid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh raid > $@ || (rm -f $@; exit 1)

parttool-raid_mod-disk_raid.lst: disk/raid.c $(disk/raid.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh raid > $@ || (rm -f $@; exit 1)

partmap-raid_mod-disk_raid.lst: disk/raid.c $(disk/raid.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(raid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh raid > $@ || (rm -f $@; exit 1)

handler-raid_mod-disk_raid.lst: disk/raid.c $(disk/raid.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh raid > $@ || (rm -f $@; exit 1)

terminal-raid_mod-disk_raid.lst: disk/raid.c $(disk/raid.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh raid > $@ || (rm -f $@; exit 1)

video-raid_mod-disk_raid.lst: disk/raid.c $(disk/raid.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(raid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh raid > $@ || (rm -f $@; exit 1)

raid_mod_CFLAGS = $(COMMON_CFLAGS)
raid_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For raid5rec.mod
raid5rec_mod_SOURCES = disk/raid5_recover.c

clean-module-raid5rec.mod.1:
	rm -f raid5rec.mod mod-raid5rec.o mod-raid5rec.c pre-raid5rec.o raid5rec_mod-disk_raid5_recover.o und-raid5rec.lst

CLEAN_MODULE_TARGETS += clean-module-raid5rec.mod.1

clean-module-raid5rec.mod-symbol.1:
	rm -f def-raid5rec.lst

CLEAN_MODULE_TARGETS += clean-module-raid5rec.mod-symbol.1
DEFSYMFILES += def-raid5rec.lst
mostlyclean-module-raid5rec.mod.1:
	rm -f raid5rec_mod-disk_raid5_recover.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-raid5rec.mod.1
UNDSYMFILES += und-raid5rec.lst

ifeq ($(TARGET_NO_MODULES), yes)
raid5rec.mod: pre-raid5rec.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(raid5rec_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-raid5rec.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
raid5rec.mod: pre-raid5rec.o mod-raid5rec.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(raid5rec_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-raid5rec.o mod-raid5rec.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
raid5rec.mod: pre-raid5rec.o mod-raid5rec.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(raid5rec_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-raid5rec.o mod-raid5rec.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-raid5rec.o: $(raid5rec_mod_DEPENDENCIES) raid5rec_mod-disk_raid5_recover.o
	-rm -f $@
	$(TARGET_CC) $(raid5rec_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ raid5rec_mod-disk_raid5_recover.o

mod-raid5rec.o: mod-raid5rec.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(raid5rec_mod_CFLAGS) -DGRUB_FILE=\"mod-raid5rec.c\" -c -o $@ $<

mod-raid5rec.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'raid5rec' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-raid5rec.lst: pre-raid5rec.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 raid5rec/' > $@
else
def-raid5rec.lst: pre-raid5rec.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 raid5rec/' > $@
endif

und-raid5rec.lst: pre-raid5rec.o
	echo 'raid5rec' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

raid5rec_mod-disk_raid5_recover.o: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid5rec_mod_CFLAGS) -DGRUB_FILE=\"disk/raid5_recover.c\" -MD -c -o $@ $<
-include raid5rec_mod-disk_raid5_recover.d

clean-module-raid5rec_mod-disk_raid5_recover-extra.1:
	rm -f cmd-raid5rec_mod-disk_raid5_recover.lst fs-raid5rec_mod-disk_raid5_recover.lst partmap-raid5rec_mod-disk_raid5_recover.lst handler-raid5rec_mod-disk_raid5_recover.lst parttool-raid5rec_mod-disk_raid5_recover.lst video-raid5rec_mod-disk_raid5_recover.lst terminal-raid5rec_mod-disk_raid5_recover.lst

CLEAN_MODULE_TARGETS += clean-module-raid5rec_mod-disk_raid5_recover-extra.1

COMMANDFILES += cmd-raid5rec_mod-disk_raid5_recover.lst
FSFILES += fs-raid5rec_mod-disk_raid5_recover.lst
PARTTOOLFILES += parttool-raid5rec_mod-disk_raid5_recover.lst
PARTMAPFILES += partmap-raid5rec_mod-disk_raid5_recover.lst
HANDLERFILES += handler-raid5rec_mod-disk_raid5_recover.lst
TERMINALFILES += terminal-raid5rec_mod-disk_raid5_recover.lst
VIDEOFILES += video-raid5rec_mod-disk_raid5_recover.lst

cmd-raid5rec_mod-disk_raid5_recover.lst: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid5rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh raid5rec > $@ || (rm -f $@; exit 1)

fs-raid5rec_mod-disk_raid5_recover.lst: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(raid5rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh raid5rec > $@ || (rm -f $@; exit 1)

parttool-raid5rec_mod-disk_raid5_recover.lst: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid5rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh raid5rec > $@ || (rm -f $@; exit 1)

partmap-raid5rec_mod-disk_raid5_recover.lst: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(raid5rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh raid5rec > $@ || (rm -f $@; exit 1)

handler-raid5rec_mod-disk_raid5_recover.lst: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid5rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh raid5rec > $@ || (rm -f $@; exit 1)

terminal-raid5rec_mod-disk_raid5_recover.lst: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid5rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh raid5rec > $@ || (rm -f $@; exit 1)

video-raid5rec_mod-disk_raid5_recover.lst: disk/raid5_recover.c $(disk/raid5_recover.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(raid5rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh raid5rec > $@ || (rm -f $@; exit 1)

raid5rec_mod_CFLAGS = $(COMMON_CFLAGS)
raid5rec_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For raid6rec.mod
raid6rec_mod_SOURCES = disk/raid6_recover.c

clean-module-raid6rec.mod.1:
	rm -f raid6rec.mod mod-raid6rec.o mod-raid6rec.c pre-raid6rec.o raid6rec_mod-disk_raid6_recover.o und-raid6rec.lst

CLEAN_MODULE_TARGETS += clean-module-raid6rec.mod.1

clean-module-raid6rec.mod-symbol.1:
	rm -f def-raid6rec.lst

CLEAN_MODULE_TARGETS += clean-module-raid6rec.mod-symbol.1
DEFSYMFILES += def-raid6rec.lst
mostlyclean-module-raid6rec.mod.1:
	rm -f raid6rec_mod-disk_raid6_recover.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-raid6rec.mod.1
UNDSYMFILES += und-raid6rec.lst

ifeq ($(TARGET_NO_MODULES), yes)
raid6rec.mod: pre-raid6rec.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(raid6rec_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-raid6rec.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
raid6rec.mod: pre-raid6rec.o mod-raid6rec.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(raid6rec_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-raid6rec.o mod-raid6rec.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
raid6rec.mod: pre-raid6rec.o mod-raid6rec.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(raid6rec_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-raid6rec.o mod-raid6rec.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-raid6rec.o: $(raid6rec_mod_DEPENDENCIES) raid6rec_mod-disk_raid6_recover.o
	-rm -f $@
	$(TARGET_CC) $(raid6rec_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ raid6rec_mod-disk_raid6_recover.o

mod-raid6rec.o: mod-raid6rec.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(raid6rec_mod_CFLAGS) -DGRUB_FILE=\"mod-raid6rec.c\" -c -o $@ $<

mod-raid6rec.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'raid6rec' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-raid6rec.lst: pre-raid6rec.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 raid6rec/' > $@
else
def-raid6rec.lst: pre-raid6rec.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 raid6rec/' > $@
endif

und-raid6rec.lst: pre-raid6rec.o
	echo 'raid6rec' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

raid6rec_mod-disk_raid6_recover.o: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid6rec_mod_CFLAGS) -DGRUB_FILE=\"disk/raid6_recover.c\" -MD -c -o $@ $<
-include raid6rec_mod-disk_raid6_recover.d

clean-module-raid6rec_mod-disk_raid6_recover-extra.1:
	rm -f cmd-raid6rec_mod-disk_raid6_recover.lst fs-raid6rec_mod-disk_raid6_recover.lst partmap-raid6rec_mod-disk_raid6_recover.lst handler-raid6rec_mod-disk_raid6_recover.lst parttool-raid6rec_mod-disk_raid6_recover.lst video-raid6rec_mod-disk_raid6_recover.lst terminal-raid6rec_mod-disk_raid6_recover.lst

CLEAN_MODULE_TARGETS += clean-module-raid6rec_mod-disk_raid6_recover-extra.1

COMMANDFILES += cmd-raid6rec_mod-disk_raid6_recover.lst
FSFILES += fs-raid6rec_mod-disk_raid6_recover.lst
PARTTOOLFILES += parttool-raid6rec_mod-disk_raid6_recover.lst
PARTMAPFILES += partmap-raid6rec_mod-disk_raid6_recover.lst
HANDLERFILES += handler-raid6rec_mod-disk_raid6_recover.lst
TERMINALFILES += terminal-raid6rec_mod-disk_raid6_recover.lst
VIDEOFILES += video-raid6rec_mod-disk_raid6_recover.lst

cmd-raid6rec_mod-disk_raid6_recover.lst: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid6rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh raid6rec > $@ || (rm -f $@; exit 1)

fs-raid6rec_mod-disk_raid6_recover.lst: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(raid6rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh raid6rec > $@ || (rm -f $@; exit 1)

parttool-raid6rec_mod-disk_raid6_recover.lst: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid6rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh raid6rec > $@ || (rm -f $@; exit 1)

partmap-raid6rec_mod-disk_raid6_recover.lst: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(raid6rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh raid6rec > $@ || (rm -f $@; exit 1)

handler-raid6rec_mod-disk_raid6_recover.lst: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid6rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh raid6rec > $@ || (rm -f $@; exit 1)

terminal-raid6rec_mod-disk_raid6_recover.lst: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(raid6rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh raid6rec > $@ || (rm -f $@; exit 1)

video-raid6rec_mod-disk_raid6_recover.lst: disk/raid6_recover.c $(disk/raid6_recover.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(raid6rec_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh raid6rec > $@ || (rm -f $@; exit 1)

raid6rec_mod_CFLAGS = $(COMMON_CFLAGS)
raid6rec_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For mdraid.mod
mdraid_mod_SOURCES = disk/mdraid_linux.c

clean-module-mdraid.mod.1:
	rm -f mdraid.mod mod-mdraid.o mod-mdraid.c pre-mdraid.o mdraid_mod-disk_mdraid_linux.o und-mdraid.lst

CLEAN_MODULE_TARGETS += clean-module-mdraid.mod.1

clean-module-mdraid.mod-symbol.1:
	rm -f def-mdraid.lst

CLEAN_MODULE_TARGETS += clean-module-mdraid.mod-symbol.1
DEFSYMFILES += def-mdraid.lst
mostlyclean-module-mdraid.mod.1:
	rm -f mdraid_mod-disk_mdraid_linux.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-mdraid.mod.1
UNDSYMFILES += und-mdraid.lst

ifeq ($(TARGET_NO_MODULES), yes)
mdraid.mod: pre-mdraid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(mdraid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-mdraid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
mdraid.mod: pre-mdraid.o mod-mdraid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(mdraid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-mdraid.o mod-mdraid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
mdraid.mod: pre-mdraid.o mod-mdraid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(mdraid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-mdraid.o mod-mdraid.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-mdraid.o: $(mdraid_mod_DEPENDENCIES) mdraid_mod-disk_mdraid_linux.o
	-rm -f $@
	$(TARGET_CC) $(mdraid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ mdraid_mod-disk_mdraid_linux.o

mod-mdraid.o: mod-mdraid.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(mdraid_mod_CFLAGS) -DGRUB_FILE=\"mod-mdraid.c\" -c -o $@ $<

mod-mdraid.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'mdraid' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-mdraid.lst: pre-mdraid.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 mdraid/' > $@
else
def-mdraid.lst: pre-mdraid.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 mdraid/' > $@
endif

und-mdraid.lst: pre-mdraid.o
	echo 'mdraid' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

mdraid_mod-disk_mdraid_linux.o: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mdraid_mod_CFLAGS) -DGRUB_FILE=\"disk/mdraid_linux.c\" -MD -c -o $@ $<
-include mdraid_mod-disk_mdraid_linux.d

clean-module-mdraid_mod-disk_mdraid_linux-extra.1:
	rm -f cmd-mdraid_mod-disk_mdraid_linux.lst fs-mdraid_mod-disk_mdraid_linux.lst partmap-mdraid_mod-disk_mdraid_linux.lst handler-mdraid_mod-disk_mdraid_linux.lst parttool-mdraid_mod-disk_mdraid_linux.lst video-mdraid_mod-disk_mdraid_linux.lst terminal-mdraid_mod-disk_mdraid_linux.lst

CLEAN_MODULE_TARGETS += clean-module-mdraid_mod-disk_mdraid_linux-extra.1

COMMANDFILES += cmd-mdraid_mod-disk_mdraid_linux.lst
FSFILES += fs-mdraid_mod-disk_mdraid_linux.lst
PARTTOOLFILES += parttool-mdraid_mod-disk_mdraid_linux.lst
PARTMAPFILES += partmap-mdraid_mod-disk_mdraid_linux.lst
HANDLERFILES += handler-mdraid_mod-disk_mdraid_linux.lst
TERMINALFILES += terminal-mdraid_mod-disk_mdraid_linux.lst
VIDEOFILES += video-mdraid_mod-disk_mdraid_linux.lst

cmd-mdraid_mod-disk_mdraid_linux.lst: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mdraid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh mdraid > $@ || (rm -f $@; exit 1)

fs-mdraid_mod-disk_mdraid_linux.lst: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mdraid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh mdraid > $@ || (rm -f $@; exit 1)

parttool-mdraid_mod-disk_mdraid_linux.lst: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mdraid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh mdraid > $@ || (rm -f $@; exit 1)

partmap-mdraid_mod-disk_mdraid_linux.lst: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mdraid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh mdraid > $@ || (rm -f $@; exit 1)

handler-mdraid_mod-disk_mdraid_linux.lst: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mdraid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh mdraid > $@ || (rm -f $@; exit 1)

terminal-mdraid_mod-disk_mdraid_linux.lst: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(mdraid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh mdraid > $@ || (rm -f $@; exit 1)

video-mdraid_mod-disk_mdraid_linux.lst: disk/mdraid_linux.c $(disk/mdraid_linux.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(mdraid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh mdraid > $@ || (rm -f $@; exit 1)

mdraid_mod_CFLAGS = $(COMMON_CFLAGS)
mdraid_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For dm_nv.mod
dm_nv_mod_SOURCES = disk/dmraid_nvidia.c

clean-module-dm_nv.mod.1:
	rm -f dm_nv.mod mod-dm_nv.o mod-dm_nv.c pre-dm_nv.o dm_nv_mod-disk_dmraid_nvidia.o und-dm_nv.lst

CLEAN_MODULE_TARGETS += clean-module-dm_nv.mod.1

clean-module-dm_nv.mod-symbol.1:
	rm -f def-dm_nv.lst

CLEAN_MODULE_TARGETS += clean-module-dm_nv.mod-symbol.1
DEFSYMFILES += def-dm_nv.lst
mostlyclean-module-dm_nv.mod.1:
	rm -f dm_nv_mod-disk_dmraid_nvidia.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-dm_nv.mod.1
UNDSYMFILES += und-dm_nv.lst

ifeq ($(TARGET_NO_MODULES), yes)
dm_nv.mod: pre-dm_nv.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(dm_nv_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-dm_nv.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
dm_nv.mod: pre-dm_nv.o mod-dm_nv.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(dm_nv_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-dm_nv.o mod-dm_nv.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
dm_nv.mod: pre-dm_nv.o mod-dm_nv.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(dm_nv_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-dm_nv.o mod-dm_nv.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-dm_nv.o: $(dm_nv_mod_DEPENDENCIES) dm_nv_mod-disk_dmraid_nvidia.o
	-rm -f $@
	$(TARGET_CC) $(dm_nv_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ dm_nv_mod-disk_dmraid_nvidia.o

mod-dm_nv.o: mod-dm_nv.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(dm_nv_mod_CFLAGS) -DGRUB_FILE=\"mod-dm_nv.c\" -c -o $@ $<

mod-dm_nv.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'dm_nv' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-dm_nv.lst: pre-dm_nv.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 dm_nv/' > $@
else
def-dm_nv.lst: pre-dm_nv.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 dm_nv/' > $@
endif

und-dm_nv.lst: pre-dm_nv.o
	echo 'dm_nv' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

dm_nv_mod-disk_dmraid_nvidia.o: disk/dmraid_nvidia.c $(disk/dmraid_nvidia.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(dm_nv_mod_CFLAGS) -DGRUB_FILE=\"disk/dmraid_nvidia.c\" -MD -c -o $@ $<
-include dm_nv_mod-disk_dmraid_nvidia.d

clean-module-dm_nv_mod-disk_dmraid_nvidia-extra.1:
	rm -f cmd-dm_nv_mod-disk_dmraid_nvidia.lst fs-dm_nv_mod-disk_dmraid_nvidia.lst partmap-dm_nv_mod-disk_dmraid_nvidia.lst handler-dm_nv_mod-disk_dmraid_nvidia.lst parttool-dm_nv_mod-disk_dmraid_nvidia.lst video-dm_nv_mod-disk_dmraid_nvidia.lst terminal-dm_nv_mod-disk_dmraid_nvidia.lst

CLEAN_MODULE_TARGETS += clean-module-dm_nv_mod-disk_dmraid_nvidia-extra.1

COMMANDFILES += cmd-dm_nv_mod-disk_dmraid_nvidia.lst
FSFILES += fs-dm_nv_mod-disk_dmraid_nvidia.lst
PARTTOOLFILES += parttool-dm_nv_mod-disk_dmraid_nvidia.lst
PARTMAPFILES += partmap-dm_nv_mod-disk_dmraid_nvidia.lst
HANDLERFILES += handler-dm_nv_mod-disk_dmraid_nvidia.lst
TERMINALFILES += terminal-dm_nv_mod-disk_dmraid_nvidia.lst
VIDEOFILES += video-dm_nv_mod-disk_dmraid_nvidia.lst

cmd-dm_nv_mod-disk_dmraid_nvidia.lst: disk/dmraid_nvidia.c $(disk/dmraid_nvidia.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(dm_nv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh dm_nv > $@ || (rm -f $@; exit 1)

fs-dm_nv_mod-disk_dmraid_nvidia.lst: disk/dmraid_nvidia.c $(disk/dmraid_nvidia.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(dm_nv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh dm_nv > $@ || (rm -f $@; exit 1)

parttool-dm_nv_mod-disk_dmraid_nvidia.lst: disk/dmraid_nvidia.c $(disk/dmraid_nvidia.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(dm_nv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh dm_nv > $@ || (rm -f $@; exit 1)

partmap-dm_nv_mod-disk_dmraid_nvidia.lst: disk/dmraid_nvidia.c $(disk/dmraid_nvidia.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(dm_nv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh dm_nv > $@ || (rm -f $@; exit 1)

handler-dm_nv_mod-disk_dmraid_nvidia.lst: disk/dmraid_nvidia.c $(disk/dmraid_nvidia.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(dm_nv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh dm_nv > $@ || (rm -f $@; exit 1)

terminal-dm_nv_mod-disk_dmraid_nvidia.lst: disk/dmraid_nvidia.c $(disk/dmraid_nvidia.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(dm_nv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh dm_nv > $@ || (rm -f $@; exit 1)

video-dm_nv_mod-disk_dmraid_nvidia.lst: disk/dmraid_nvidia.c $(disk/dmraid_nvidia.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(dm_nv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh dm_nv > $@ || (rm -f $@; exit 1)

dm_nv_mod_CFLAGS = $(COMMON_CFLAGS)
dm_nv_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For lvm.mod
lvm_mod_SOURCES = disk/lvm.c

clean-module-lvm.mod.1:
	rm -f lvm.mod mod-lvm.o mod-lvm.c pre-lvm.o lvm_mod-disk_lvm.o und-lvm.lst

CLEAN_MODULE_TARGETS += clean-module-lvm.mod.1

clean-module-lvm.mod-symbol.1:
	rm -f def-lvm.lst

CLEAN_MODULE_TARGETS += clean-module-lvm.mod-symbol.1
DEFSYMFILES += def-lvm.lst
mostlyclean-module-lvm.mod.1:
	rm -f lvm_mod-disk_lvm.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-lvm.mod.1
UNDSYMFILES += und-lvm.lst

ifeq ($(TARGET_NO_MODULES), yes)
lvm.mod: pre-lvm.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(lvm_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-lvm.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
lvm.mod: pre-lvm.o mod-lvm.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(lvm_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-lvm.o mod-lvm.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
lvm.mod: pre-lvm.o mod-lvm.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(lvm_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-lvm.o mod-lvm.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-lvm.o: $(lvm_mod_DEPENDENCIES) lvm_mod-disk_lvm.o
	-rm -f $@
	$(TARGET_CC) $(lvm_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ lvm_mod-disk_lvm.o

mod-lvm.o: mod-lvm.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(lvm_mod_CFLAGS) -DGRUB_FILE=\"mod-lvm.c\" -c -o $@ $<

mod-lvm.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'lvm' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-lvm.lst: pre-lvm.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 lvm/' > $@
else
def-lvm.lst: pre-lvm.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 lvm/' > $@
endif

und-lvm.lst: pre-lvm.o
	echo 'lvm' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

lvm_mod-disk_lvm.o: disk/lvm.c $(disk/lvm.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lvm_mod_CFLAGS) -DGRUB_FILE=\"disk/lvm.c\" -MD -c -o $@ $<
-include lvm_mod-disk_lvm.d

clean-module-lvm_mod-disk_lvm-extra.1:
	rm -f cmd-lvm_mod-disk_lvm.lst fs-lvm_mod-disk_lvm.lst partmap-lvm_mod-disk_lvm.lst handler-lvm_mod-disk_lvm.lst parttool-lvm_mod-disk_lvm.lst video-lvm_mod-disk_lvm.lst terminal-lvm_mod-disk_lvm.lst

CLEAN_MODULE_TARGETS += clean-module-lvm_mod-disk_lvm-extra.1

COMMANDFILES += cmd-lvm_mod-disk_lvm.lst
FSFILES += fs-lvm_mod-disk_lvm.lst
PARTTOOLFILES += parttool-lvm_mod-disk_lvm.lst
PARTMAPFILES += partmap-lvm_mod-disk_lvm.lst
HANDLERFILES += handler-lvm_mod-disk_lvm.lst
TERMINALFILES += terminal-lvm_mod-disk_lvm.lst
VIDEOFILES += video-lvm_mod-disk_lvm.lst

cmd-lvm_mod-disk_lvm.lst: disk/lvm.c $(disk/lvm.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lvm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh lvm > $@ || (rm -f $@; exit 1)

fs-lvm_mod-disk_lvm.lst: disk/lvm.c $(disk/lvm.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lvm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh lvm > $@ || (rm -f $@; exit 1)

parttool-lvm_mod-disk_lvm.lst: disk/lvm.c $(disk/lvm.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lvm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh lvm > $@ || (rm -f $@; exit 1)

partmap-lvm_mod-disk_lvm.lst: disk/lvm.c $(disk/lvm.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lvm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh lvm > $@ || (rm -f $@; exit 1)

handler-lvm_mod-disk_lvm.lst: disk/lvm.c $(disk/lvm.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lvm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh lvm > $@ || (rm -f $@; exit 1)

terminal-lvm_mod-disk_lvm.lst: disk/lvm.c $(disk/lvm.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lvm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh lvm > $@ || (rm -f $@; exit 1)

video-lvm_mod-disk_lvm.lst: disk/lvm.c $(disk/lvm.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lvm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh lvm > $@ || (rm -f $@; exit 1)

lvm_mod_CFLAGS = $(COMMON_CFLAGS)
lvm_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For scsi.mod
scsi_mod_SOURCES = disk/scsi.c

clean-module-scsi.mod.1:
	rm -f scsi.mod mod-scsi.o mod-scsi.c pre-scsi.o scsi_mod-disk_scsi.o und-scsi.lst

CLEAN_MODULE_TARGETS += clean-module-scsi.mod.1

clean-module-scsi.mod-symbol.1:
	rm -f def-scsi.lst

CLEAN_MODULE_TARGETS += clean-module-scsi.mod-symbol.1
DEFSYMFILES += def-scsi.lst
mostlyclean-module-scsi.mod.1:
	rm -f scsi_mod-disk_scsi.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-scsi.mod.1
UNDSYMFILES += und-scsi.lst

ifeq ($(TARGET_NO_MODULES), yes)
scsi.mod: pre-scsi.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(scsi_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-scsi.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
scsi.mod: pre-scsi.o mod-scsi.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(scsi_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-scsi.o mod-scsi.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
scsi.mod: pre-scsi.o mod-scsi.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(scsi_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-scsi.o mod-scsi.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-scsi.o: $(scsi_mod_DEPENDENCIES) scsi_mod-disk_scsi.o
	-rm -f $@
	$(TARGET_CC) $(scsi_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ scsi_mod-disk_scsi.o

mod-scsi.o: mod-scsi.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(scsi_mod_CFLAGS) -DGRUB_FILE=\"mod-scsi.c\" -c -o $@ $<

mod-scsi.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'scsi' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-scsi.lst: pre-scsi.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 scsi/' > $@
else
def-scsi.lst: pre-scsi.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 scsi/' > $@
endif

und-scsi.lst: pre-scsi.o
	echo 'scsi' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

scsi_mod-disk_scsi.o: disk/scsi.c $(disk/scsi.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(scsi_mod_CFLAGS) -DGRUB_FILE=\"disk/scsi.c\" -MD -c -o $@ $<
-include scsi_mod-disk_scsi.d

clean-module-scsi_mod-disk_scsi-extra.1:
	rm -f cmd-scsi_mod-disk_scsi.lst fs-scsi_mod-disk_scsi.lst partmap-scsi_mod-disk_scsi.lst handler-scsi_mod-disk_scsi.lst parttool-scsi_mod-disk_scsi.lst video-scsi_mod-disk_scsi.lst terminal-scsi_mod-disk_scsi.lst

CLEAN_MODULE_TARGETS += clean-module-scsi_mod-disk_scsi-extra.1

COMMANDFILES += cmd-scsi_mod-disk_scsi.lst
FSFILES += fs-scsi_mod-disk_scsi.lst
PARTTOOLFILES += parttool-scsi_mod-disk_scsi.lst
PARTMAPFILES += partmap-scsi_mod-disk_scsi.lst
HANDLERFILES += handler-scsi_mod-disk_scsi.lst
TERMINALFILES += terminal-scsi_mod-disk_scsi.lst
VIDEOFILES += video-scsi_mod-disk_scsi.lst

cmd-scsi_mod-disk_scsi.lst: disk/scsi.c $(disk/scsi.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(scsi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh scsi > $@ || (rm -f $@; exit 1)

fs-scsi_mod-disk_scsi.lst: disk/scsi.c $(disk/scsi.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(scsi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh scsi > $@ || (rm -f $@; exit 1)

parttool-scsi_mod-disk_scsi.lst: disk/scsi.c $(disk/scsi.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(scsi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh scsi > $@ || (rm -f $@; exit 1)

partmap-scsi_mod-disk_scsi.lst: disk/scsi.c $(disk/scsi.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(scsi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh scsi > $@ || (rm -f $@; exit 1)

handler-scsi_mod-disk_scsi.lst: disk/scsi.c $(disk/scsi.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(scsi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh scsi > $@ || (rm -f $@; exit 1)

terminal-scsi_mod-disk_scsi.lst: disk/scsi.c $(disk/scsi.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(scsi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh scsi > $@ || (rm -f $@; exit 1)

video-scsi_mod-disk_scsi.lst: disk/scsi.c $(disk/scsi.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(scsi_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh scsi > $@ || (rm -f $@; exit 1)

scsi_mod_CFLAGS = $(COMMON_CFLAGS)
scsi_mod_LDFLAGS = $(COMMON_LDFLAGS)

# Commands.
pkglib_MODULES += minicmd.mod extcmd.mod hello.mod 	\
	ls.mod cmp.mod cat.mod help.mod search.mod loopback.mod	\
	configfile.mod echo.mod		\
	test.mod blocklist.mod hexdump.mod		\
	read.mod sleep.mod loadenv.mod crc.mod parttool.mod	\
	msdospart.mod memrw.mod normal.mod 			\
	gptsync.mod true.mod probe.mod password.mod		\
	keystatus.mod

# For password.mod.
password_mod_SOURCES = commands/password.c

clean-module-password.mod.1:
	rm -f password.mod mod-password.o mod-password.c pre-password.o password_mod-commands_password.o und-password.lst

CLEAN_MODULE_TARGETS += clean-module-password.mod.1

clean-module-password.mod-symbol.1:
	rm -f def-password.lst

CLEAN_MODULE_TARGETS += clean-module-password.mod-symbol.1
DEFSYMFILES += def-password.lst
mostlyclean-module-password.mod.1:
	rm -f password_mod-commands_password.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-password.mod.1
UNDSYMFILES += und-password.lst

ifeq ($(TARGET_NO_MODULES), yes)
password.mod: pre-password.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(password_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-password.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
password.mod: pre-password.o mod-password.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(password_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-password.o mod-password.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
password.mod: pre-password.o mod-password.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(password_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-password.o mod-password.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-password.o: $(password_mod_DEPENDENCIES) password_mod-commands_password.o
	-rm -f $@
	$(TARGET_CC) $(password_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ password_mod-commands_password.o

mod-password.o: mod-password.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(password_mod_CFLAGS) -DGRUB_FILE=\"mod-password.c\" -c -o $@ $<

mod-password.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'password' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-password.lst: pre-password.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 password/' > $@
else
def-password.lst: pre-password.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 password/' > $@
endif

und-password.lst: pre-password.o
	echo 'password' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

password_mod-commands_password.o: commands/password.c $(commands/password.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_mod_CFLAGS) -DGRUB_FILE=\"commands/password.c\" -MD -c -o $@ $<
-include password_mod-commands_password.d

clean-module-password_mod-commands_password-extra.1:
	rm -f cmd-password_mod-commands_password.lst fs-password_mod-commands_password.lst partmap-password_mod-commands_password.lst handler-password_mod-commands_password.lst parttool-password_mod-commands_password.lst video-password_mod-commands_password.lst terminal-password_mod-commands_password.lst

CLEAN_MODULE_TARGETS += clean-module-password_mod-commands_password-extra.1

COMMANDFILES += cmd-password_mod-commands_password.lst
FSFILES += fs-password_mod-commands_password.lst
PARTTOOLFILES += parttool-password_mod-commands_password.lst
PARTMAPFILES += partmap-password_mod-commands_password.lst
HANDLERFILES += handler-password_mod-commands_password.lst
TERMINALFILES += terminal-password_mod-commands_password.lst
VIDEOFILES += video-password_mod-commands_password.lst

cmd-password_mod-commands_password.lst: commands/password.c $(commands/password.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh password > $@ || (rm -f $@; exit 1)

fs-password_mod-commands_password.lst: commands/password.c $(commands/password.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(password_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh password > $@ || (rm -f $@; exit 1)

parttool-password_mod-commands_password.lst: commands/password.c $(commands/password.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh password > $@ || (rm -f $@; exit 1)

partmap-password_mod-commands_password.lst: commands/password.c $(commands/password.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(password_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh password > $@ || (rm -f $@; exit 1)

handler-password_mod-commands_password.lst: commands/password.c $(commands/password.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh password > $@ || (rm -f $@; exit 1)

terminal-password_mod-commands_password.lst: commands/password.c $(commands/password.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh password > $@ || (rm -f $@; exit 1)

video-password_mod-commands_password.lst: commands/password.c $(commands/password.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(password_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh password > $@ || (rm -f $@; exit 1)

password_mod_CFLAGS = $(COMMON_CFLAGS)
password_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For gptsync.mod.
gptsync_mod_SOURCES = commands/gptsync.c

clean-module-gptsync.mod.1:
	rm -f gptsync.mod mod-gptsync.o mod-gptsync.c pre-gptsync.o gptsync_mod-commands_gptsync.o und-gptsync.lst

CLEAN_MODULE_TARGETS += clean-module-gptsync.mod.1

clean-module-gptsync.mod-symbol.1:
	rm -f def-gptsync.lst

CLEAN_MODULE_TARGETS += clean-module-gptsync.mod-symbol.1
DEFSYMFILES += def-gptsync.lst
mostlyclean-module-gptsync.mod.1:
	rm -f gptsync_mod-commands_gptsync.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-gptsync.mod.1
UNDSYMFILES += und-gptsync.lst

ifeq ($(TARGET_NO_MODULES), yes)
gptsync.mod: pre-gptsync.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gptsync_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gptsync.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
gptsync.mod: pre-gptsync.o mod-gptsync.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gptsync_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gptsync.o mod-gptsync.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
gptsync.mod: pre-gptsync.o mod-gptsync.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(gptsync_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-gptsync.o mod-gptsync.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-gptsync.o: $(gptsync_mod_DEPENDENCIES) gptsync_mod-commands_gptsync.o
	-rm -f $@
	$(TARGET_CC) $(gptsync_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ gptsync_mod-commands_gptsync.o

mod-gptsync.o: mod-gptsync.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(gptsync_mod_CFLAGS) -DGRUB_FILE=\"mod-gptsync.c\" -c -o $@ $<

mod-gptsync.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'gptsync' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-gptsync.lst: pre-gptsync.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 gptsync/' > $@
else
def-gptsync.lst: pre-gptsync.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 gptsync/' > $@
endif

und-gptsync.lst: pre-gptsync.o
	echo 'gptsync' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

gptsync_mod-commands_gptsync.o: commands/gptsync.c $(commands/gptsync.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gptsync_mod_CFLAGS) -DGRUB_FILE=\"commands/gptsync.c\" -MD -c -o $@ $<
-include gptsync_mod-commands_gptsync.d

clean-module-gptsync_mod-commands_gptsync-extra.1:
	rm -f cmd-gptsync_mod-commands_gptsync.lst fs-gptsync_mod-commands_gptsync.lst partmap-gptsync_mod-commands_gptsync.lst handler-gptsync_mod-commands_gptsync.lst parttool-gptsync_mod-commands_gptsync.lst video-gptsync_mod-commands_gptsync.lst terminal-gptsync_mod-commands_gptsync.lst

CLEAN_MODULE_TARGETS += clean-module-gptsync_mod-commands_gptsync-extra.1

COMMANDFILES += cmd-gptsync_mod-commands_gptsync.lst
FSFILES += fs-gptsync_mod-commands_gptsync.lst
PARTTOOLFILES += parttool-gptsync_mod-commands_gptsync.lst
PARTMAPFILES += partmap-gptsync_mod-commands_gptsync.lst
HANDLERFILES += handler-gptsync_mod-commands_gptsync.lst
TERMINALFILES += terminal-gptsync_mod-commands_gptsync.lst
VIDEOFILES += video-gptsync_mod-commands_gptsync.lst

cmd-gptsync_mod-commands_gptsync.lst: commands/gptsync.c $(commands/gptsync.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gptsync_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gptsync > $@ || (rm -f $@; exit 1)

fs-gptsync_mod-commands_gptsync.lst: commands/gptsync.c $(commands/gptsync.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gptsync_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gptsync > $@ || (rm -f $@; exit 1)

parttool-gptsync_mod-commands_gptsync.lst: commands/gptsync.c $(commands/gptsync.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gptsync_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gptsync > $@ || (rm -f $@; exit 1)

partmap-gptsync_mod-commands_gptsync.lst: commands/gptsync.c $(commands/gptsync.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gptsync_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gptsync > $@ || (rm -f $@; exit 1)

handler-gptsync_mod-commands_gptsync.lst: commands/gptsync.c $(commands/gptsync.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gptsync_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gptsync > $@ || (rm -f $@; exit 1)

terminal-gptsync_mod-commands_gptsync.lst: commands/gptsync.c $(commands/gptsync.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gptsync_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gptsync > $@ || (rm -f $@; exit 1)

video-gptsync_mod-commands_gptsync.lst: commands/gptsync.c $(commands/gptsync.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gptsync_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gptsync > $@ || (rm -f $@; exit 1)

gptsync_mod_CFLAGS = $(COMMON_CFLAGS)
gptsync_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For minicmd.mod.
minicmd_mod_SOURCES = commands/minicmd.c

clean-module-minicmd.mod.1:
	rm -f minicmd.mod mod-minicmd.o mod-minicmd.c pre-minicmd.o minicmd_mod-commands_minicmd.o und-minicmd.lst

CLEAN_MODULE_TARGETS += clean-module-minicmd.mod.1

clean-module-minicmd.mod-symbol.1:
	rm -f def-minicmd.lst

CLEAN_MODULE_TARGETS += clean-module-minicmd.mod-symbol.1
DEFSYMFILES += def-minicmd.lst
mostlyclean-module-minicmd.mod.1:
	rm -f minicmd_mod-commands_minicmd.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-minicmd.mod.1
UNDSYMFILES += und-minicmd.lst

ifeq ($(TARGET_NO_MODULES), yes)
minicmd.mod: pre-minicmd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(minicmd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-minicmd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
minicmd.mod: pre-minicmd.o mod-minicmd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(minicmd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-minicmd.o mod-minicmd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
minicmd.mod: pre-minicmd.o mod-minicmd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(minicmd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-minicmd.o mod-minicmd.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-minicmd.o: $(minicmd_mod_DEPENDENCIES) minicmd_mod-commands_minicmd.o
	-rm -f $@
	$(TARGET_CC) $(minicmd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ minicmd_mod-commands_minicmd.o

mod-minicmd.o: mod-minicmd.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(minicmd_mod_CFLAGS) -DGRUB_FILE=\"mod-minicmd.c\" -c -o $@ $<

mod-minicmd.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'minicmd' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-minicmd.lst: pre-minicmd.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 minicmd/' > $@
else
def-minicmd.lst: pre-minicmd.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 minicmd/' > $@
endif

und-minicmd.lst: pre-minicmd.o
	echo 'minicmd' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

minicmd_mod-commands_minicmd.o: commands/minicmd.c $(commands/minicmd.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minicmd_mod_CFLAGS) -DGRUB_FILE=\"commands/minicmd.c\" -MD -c -o $@ $<
-include minicmd_mod-commands_minicmd.d

clean-module-minicmd_mod-commands_minicmd-extra.1:
	rm -f cmd-minicmd_mod-commands_minicmd.lst fs-minicmd_mod-commands_minicmd.lst partmap-minicmd_mod-commands_minicmd.lst handler-minicmd_mod-commands_minicmd.lst parttool-minicmd_mod-commands_minicmd.lst video-minicmd_mod-commands_minicmd.lst terminal-minicmd_mod-commands_minicmd.lst

CLEAN_MODULE_TARGETS += clean-module-minicmd_mod-commands_minicmd-extra.1

COMMANDFILES += cmd-minicmd_mod-commands_minicmd.lst
FSFILES += fs-minicmd_mod-commands_minicmd.lst
PARTTOOLFILES += parttool-minicmd_mod-commands_minicmd.lst
PARTMAPFILES += partmap-minicmd_mod-commands_minicmd.lst
HANDLERFILES += handler-minicmd_mod-commands_minicmd.lst
TERMINALFILES += terminal-minicmd_mod-commands_minicmd.lst
VIDEOFILES += video-minicmd_mod-commands_minicmd.lst

cmd-minicmd_mod-commands_minicmd.lst: commands/minicmd.c $(commands/minicmd.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minicmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh minicmd > $@ || (rm -f $@; exit 1)

fs-minicmd_mod-commands_minicmd.lst: commands/minicmd.c $(commands/minicmd.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(minicmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh minicmd > $@ || (rm -f $@; exit 1)

parttool-minicmd_mod-commands_minicmd.lst: commands/minicmd.c $(commands/minicmd.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minicmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh minicmd > $@ || (rm -f $@; exit 1)

partmap-minicmd_mod-commands_minicmd.lst: commands/minicmd.c $(commands/minicmd.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(minicmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh minicmd > $@ || (rm -f $@; exit 1)

handler-minicmd_mod-commands_minicmd.lst: commands/minicmd.c $(commands/minicmd.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minicmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh minicmd > $@ || (rm -f $@; exit 1)

terminal-minicmd_mod-commands_minicmd.lst: commands/minicmd.c $(commands/minicmd.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(minicmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh minicmd > $@ || (rm -f $@; exit 1)

video-minicmd_mod-commands_minicmd.lst: commands/minicmd.c $(commands/minicmd.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(minicmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh minicmd > $@ || (rm -f $@; exit 1)

minicmd_mod_CFLAGS = $(COMMON_CFLAGS)
minicmd_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For extcmd.mod.
extcmd_mod_SOURCES = commands/extcmd.c lib/arg.c

clean-module-extcmd.mod.1:
	rm -f extcmd.mod mod-extcmd.o mod-extcmd.c pre-extcmd.o extcmd_mod-commands_extcmd.o extcmd_mod-lib_arg.o und-extcmd.lst

CLEAN_MODULE_TARGETS += clean-module-extcmd.mod.1

clean-module-extcmd.mod-symbol.1:
	rm -f def-extcmd.lst

CLEAN_MODULE_TARGETS += clean-module-extcmd.mod-symbol.1
DEFSYMFILES += def-extcmd.lst
mostlyclean-module-extcmd.mod.1:
	rm -f extcmd_mod-commands_extcmd.d extcmd_mod-lib_arg.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-extcmd.mod.1
UNDSYMFILES += und-extcmd.lst

ifeq ($(TARGET_NO_MODULES), yes)
extcmd.mod: pre-extcmd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(extcmd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-extcmd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
extcmd.mod: pre-extcmd.o mod-extcmd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(extcmd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-extcmd.o mod-extcmd.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
extcmd.mod: pre-extcmd.o mod-extcmd.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(extcmd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-extcmd.o mod-extcmd.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-extcmd.o: $(extcmd_mod_DEPENDENCIES) extcmd_mod-commands_extcmd.o extcmd_mod-lib_arg.o
	-rm -f $@
	$(TARGET_CC) $(extcmd_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ extcmd_mod-commands_extcmd.o extcmd_mod-lib_arg.o

mod-extcmd.o: mod-extcmd.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -DGRUB_FILE=\"mod-extcmd.c\" -c -o $@ $<

mod-extcmd.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'extcmd' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-extcmd.lst: pre-extcmd.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 extcmd/' > $@
else
def-extcmd.lst: pre-extcmd.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 extcmd/' > $@
endif

und-extcmd.lst: pre-extcmd.o
	echo 'extcmd' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

extcmd_mod-commands_extcmd.o: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -DGRUB_FILE=\"commands/extcmd.c\" -MD -c -o $@ $<
-include extcmd_mod-commands_extcmd.d

clean-module-extcmd_mod-commands_extcmd-extra.1:
	rm -f cmd-extcmd_mod-commands_extcmd.lst fs-extcmd_mod-commands_extcmd.lst partmap-extcmd_mod-commands_extcmd.lst handler-extcmd_mod-commands_extcmd.lst parttool-extcmd_mod-commands_extcmd.lst video-extcmd_mod-commands_extcmd.lst terminal-extcmd_mod-commands_extcmd.lst

CLEAN_MODULE_TARGETS += clean-module-extcmd_mod-commands_extcmd-extra.1

COMMANDFILES += cmd-extcmd_mod-commands_extcmd.lst
FSFILES += fs-extcmd_mod-commands_extcmd.lst
PARTTOOLFILES += parttool-extcmd_mod-commands_extcmd.lst
PARTMAPFILES += partmap-extcmd_mod-commands_extcmd.lst
HANDLERFILES += handler-extcmd_mod-commands_extcmd.lst
TERMINALFILES += terminal-extcmd_mod-commands_extcmd.lst
VIDEOFILES += video-extcmd_mod-commands_extcmd.lst

cmd-extcmd_mod-commands_extcmd.lst: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh extcmd > $@ || (rm -f $@; exit 1)

fs-extcmd_mod-commands_extcmd.lst: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh extcmd > $@ || (rm -f $@; exit 1)

parttool-extcmd_mod-commands_extcmd.lst: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh extcmd > $@ || (rm -f $@; exit 1)

partmap-extcmd_mod-commands_extcmd.lst: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh extcmd > $@ || (rm -f $@; exit 1)

handler-extcmd_mod-commands_extcmd.lst: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh extcmd > $@ || (rm -f $@; exit 1)

terminal-extcmd_mod-commands_extcmd.lst: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh extcmd > $@ || (rm -f $@; exit 1)

video-extcmd_mod-commands_extcmd.lst: commands/extcmd.c $(commands/extcmd.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh extcmd > $@ || (rm -f $@; exit 1)

extcmd_mod-lib_arg.o: lib/arg.c $(lib/arg.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -DGRUB_FILE=\"lib/arg.c\" -MD -c -o $@ $<
-include extcmd_mod-lib_arg.d

clean-module-extcmd_mod-lib_arg-extra.1:
	rm -f cmd-extcmd_mod-lib_arg.lst fs-extcmd_mod-lib_arg.lst partmap-extcmd_mod-lib_arg.lst handler-extcmd_mod-lib_arg.lst parttool-extcmd_mod-lib_arg.lst video-extcmd_mod-lib_arg.lst terminal-extcmd_mod-lib_arg.lst

CLEAN_MODULE_TARGETS += clean-module-extcmd_mod-lib_arg-extra.1

COMMANDFILES += cmd-extcmd_mod-lib_arg.lst
FSFILES += fs-extcmd_mod-lib_arg.lst
PARTTOOLFILES += parttool-extcmd_mod-lib_arg.lst
PARTMAPFILES += partmap-extcmd_mod-lib_arg.lst
HANDLERFILES += handler-extcmd_mod-lib_arg.lst
TERMINALFILES += terminal-extcmd_mod-lib_arg.lst
VIDEOFILES += video-extcmd_mod-lib_arg.lst

cmd-extcmd_mod-lib_arg.lst: lib/arg.c $(lib/arg.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh extcmd > $@ || (rm -f $@; exit 1)

fs-extcmd_mod-lib_arg.lst: lib/arg.c $(lib/arg.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh extcmd > $@ || (rm -f $@; exit 1)

parttool-extcmd_mod-lib_arg.lst: lib/arg.c $(lib/arg.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh extcmd > $@ || (rm -f $@; exit 1)

partmap-extcmd_mod-lib_arg.lst: lib/arg.c $(lib/arg.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh extcmd > $@ || (rm -f $@; exit 1)

handler-extcmd_mod-lib_arg.lst: lib/arg.c $(lib/arg.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh extcmd > $@ || (rm -f $@; exit 1)

terminal-extcmd_mod-lib_arg.lst: lib/arg.c $(lib/arg.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh extcmd > $@ || (rm -f $@; exit 1)

video-extcmd_mod-lib_arg.lst: lib/arg.c $(lib/arg.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(extcmd_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh extcmd > $@ || (rm -f $@; exit 1)

extcmd_mod_CFLAGS = $(COMMON_CFLAGS)
extcmd_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For hello.mod.
hello_mod_SOURCES = hello/hello.c

clean-module-hello.mod.1:
	rm -f hello.mod mod-hello.o mod-hello.c pre-hello.o hello_mod-hello_hello.o und-hello.lst

CLEAN_MODULE_TARGETS += clean-module-hello.mod.1

clean-module-hello.mod-symbol.1:
	rm -f def-hello.lst

CLEAN_MODULE_TARGETS += clean-module-hello.mod-symbol.1
DEFSYMFILES += def-hello.lst
mostlyclean-module-hello.mod.1:
	rm -f hello_mod-hello_hello.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-hello.mod.1
UNDSYMFILES += und-hello.lst

ifeq ($(TARGET_NO_MODULES), yes)
hello.mod: pre-hello.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hello_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hello.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
hello.mod: pre-hello.o mod-hello.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hello_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hello.o mod-hello.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
hello.mod: pre-hello.o mod-hello.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(hello_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-hello.o mod-hello.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-hello.o: $(hello_mod_DEPENDENCIES) hello_mod-hello_hello.o
	-rm -f $@
	$(TARGET_CC) $(hello_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ hello_mod-hello_hello.o

mod-hello.o: mod-hello.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(hello_mod_CFLAGS) -DGRUB_FILE=\"mod-hello.c\" -c -o $@ $<

mod-hello.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'hello' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-hello.lst: pre-hello.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 hello/' > $@
else
def-hello.lst: pre-hello.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 hello/' > $@
endif

und-hello.lst: pre-hello.o
	echo 'hello' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

hello_mod-hello_hello.o: hello/hello.c $(hello/hello.c_DEPENDENCIES)
	$(TARGET_CC) -Ihello -I$(srcdir)/hello $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hello_mod_CFLAGS) -DGRUB_FILE=\"hello/hello.c\" -MD -c -o $@ $<
-include hello_mod-hello_hello.d

clean-module-hello_mod-hello_hello-extra.1:
	rm -f cmd-hello_mod-hello_hello.lst fs-hello_mod-hello_hello.lst partmap-hello_mod-hello_hello.lst handler-hello_mod-hello_hello.lst parttool-hello_mod-hello_hello.lst video-hello_mod-hello_hello.lst terminal-hello_mod-hello_hello.lst

CLEAN_MODULE_TARGETS += clean-module-hello_mod-hello_hello-extra.1

COMMANDFILES += cmd-hello_mod-hello_hello.lst
FSFILES += fs-hello_mod-hello_hello.lst
PARTTOOLFILES += parttool-hello_mod-hello_hello.lst
PARTMAPFILES += partmap-hello_mod-hello_hello.lst
HANDLERFILES += handler-hello_mod-hello_hello.lst
TERMINALFILES += terminal-hello_mod-hello_hello.lst
VIDEOFILES += video-hello_mod-hello_hello.lst

cmd-hello_mod-hello_hello.lst: hello/hello.c $(hello/hello.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ihello -I$(srcdir)/hello $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hello_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh hello > $@ || (rm -f $@; exit 1)

fs-hello_mod-hello_hello.lst: hello/hello.c $(hello/hello.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ihello -I$(srcdir)/hello $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hello_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh hello > $@ || (rm -f $@; exit 1)

parttool-hello_mod-hello_hello.lst: hello/hello.c $(hello/hello.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ihello -I$(srcdir)/hello $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hello_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh hello > $@ || (rm -f $@; exit 1)

partmap-hello_mod-hello_hello.lst: hello/hello.c $(hello/hello.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ihello -I$(srcdir)/hello $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hello_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh hello > $@ || (rm -f $@; exit 1)

handler-hello_mod-hello_hello.lst: hello/hello.c $(hello/hello.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ihello -I$(srcdir)/hello $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hello_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh hello > $@ || (rm -f $@; exit 1)

terminal-hello_mod-hello_hello.lst: hello/hello.c $(hello/hello.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ihello -I$(srcdir)/hello $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hello_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh hello > $@ || (rm -f $@; exit 1)

video-hello_mod-hello_hello.lst: hello/hello.c $(hello/hello.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ihello -I$(srcdir)/hello $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hello_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh hello > $@ || (rm -f $@; exit 1)

hello_mod_CFLAGS = $(COMMON_CFLAGS)
hello_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For gfxmenu.mod.
pkglib_MODULES += gfxmenu.mod
gfxmenu_mod_SOURCES = \
	gfxmenu/gfxmenu.c \
	gfxmenu/model.c \
	gfxmenu/view.c \
	gfxmenu/icon_manager.c \
	gfxmenu/theme_loader.c \
	gfxmenu/widget-box.c \
	gfxmenu/gui_canvas.c \
	gfxmenu/gui_circular_progress.c \
	gfxmenu/gui_box.c \
	gfxmenu/gui_label.c \
	gfxmenu/gui_list.c \
	gfxmenu/gui_image.c \
	gfxmenu/gui_progress_bar.c \
	gfxmenu/gui_util.c \
	gfxmenu/gui_string_util.c \
	gfxmenu/named_colors.c \
	gfxmenu/font.c

clean-module-gfxmenu.mod.1:
	rm -f gfxmenu.mod mod-gfxmenu.o mod-gfxmenu.c pre-gfxmenu.o gfxmenu_mod-gfxmenu_gfxmenu.o gfxmenu_mod-gfxmenu_model.o gfxmenu_mod-gfxmenu_view.o gfxmenu_mod-gfxmenu_icon_manager.o gfxmenu_mod-gfxmenu_theme_loader.o gfxmenu_mod-gfxmenu_widget_box.o gfxmenu_mod-gfxmenu_gui_canvas.o gfxmenu_mod-gfxmenu_gui_circular_progress.o gfxmenu_mod-gfxmenu_gui_box.o gfxmenu_mod-gfxmenu_gui_label.o gfxmenu_mod-gfxmenu_gui_list.o gfxmenu_mod-gfxmenu_gui_image.o gfxmenu_mod-gfxmenu_gui_progress_bar.o gfxmenu_mod-gfxmenu_gui_util.o gfxmenu_mod-gfxmenu_gui_string_util.o gfxmenu_mod-gfxmenu_named_colors.o gfxmenu_mod-gfxmenu_font.o und-gfxmenu.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu.mod.1

clean-module-gfxmenu.mod-symbol.1:
	rm -f def-gfxmenu.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu.mod-symbol.1
DEFSYMFILES += def-gfxmenu.lst
mostlyclean-module-gfxmenu.mod.1:
	rm -f gfxmenu_mod-gfxmenu_gfxmenu.d gfxmenu_mod-gfxmenu_model.d gfxmenu_mod-gfxmenu_view.d gfxmenu_mod-gfxmenu_icon_manager.d gfxmenu_mod-gfxmenu_theme_loader.d gfxmenu_mod-gfxmenu_widget_box.d gfxmenu_mod-gfxmenu_gui_canvas.d gfxmenu_mod-gfxmenu_gui_circular_progress.d gfxmenu_mod-gfxmenu_gui_box.d gfxmenu_mod-gfxmenu_gui_label.d gfxmenu_mod-gfxmenu_gui_list.d gfxmenu_mod-gfxmenu_gui_image.d gfxmenu_mod-gfxmenu_gui_progress_bar.d gfxmenu_mod-gfxmenu_gui_util.d gfxmenu_mod-gfxmenu_gui_string_util.d gfxmenu_mod-gfxmenu_named_colors.d gfxmenu_mod-gfxmenu_font.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-gfxmenu.mod.1
UNDSYMFILES += und-gfxmenu.lst

ifeq ($(TARGET_NO_MODULES), yes)
gfxmenu.mod: pre-gfxmenu.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gfxmenu_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gfxmenu.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
gfxmenu.mod: pre-gfxmenu.o mod-gfxmenu.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gfxmenu_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gfxmenu.o mod-gfxmenu.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
gfxmenu.mod: pre-gfxmenu.o mod-gfxmenu.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(gfxmenu_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-gfxmenu.o mod-gfxmenu.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-gfxmenu.o: $(gfxmenu_mod_DEPENDENCIES) gfxmenu_mod-gfxmenu_gfxmenu.o gfxmenu_mod-gfxmenu_model.o gfxmenu_mod-gfxmenu_view.o gfxmenu_mod-gfxmenu_icon_manager.o gfxmenu_mod-gfxmenu_theme_loader.o gfxmenu_mod-gfxmenu_widget_box.o gfxmenu_mod-gfxmenu_gui_canvas.o gfxmenu_mod-gfxmenu_gui_circular_progress.o gfxmenu_mod-gfxmenu_gui_box.o gfxmenu_mod-gfxmenu_gui_label.o gfxmenu_mod-gfxmenu_gui_list.o gfxmenu_mod-gfxmenu_gui_image.o gfxmenu_mod-gfxmenu_gui_progress_bar.o gfxmenu_mod-gfxmenu_gui_util.o gfxmenu_mod-gfxmenu_gui_string_util.o gfxmenu_mod-gfxmenu_named_colors.o gfxmenu_mod-gfxmenu_font.o
	-rm -f $@
	$(TARGET_CC) $(gfxmenu_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ gfxmenu_mod-gfxmenu_gfxmenu.o gfxmenu_mod-gfxmenu_model.o gfxmenu_mod-gfxmenu_view.o gfxmenu_mod-gfxmenu_icon_manager.o gfxmenu_mod-gfxmenu_theme_loader.o gfxmenu_mod-gfxmenu_widget_box.o gfxmenu_mod-gfxmenu_gui_canvas.o gfxmenu_mod-gfxmenu_gui_circular_progress.o gfxmenu_mod-gfxmenu_gui_box.o gfxmenu_mod-gfxmenu_gui_label.o gfxmenu_mod-gfxmenu_gui_list.o gfxmenu_mod-gfxmenu_gui_image.o gfxmenu_mod-gfxmenu_gui_progress_bar.o gfxmenu_mod-gfxmenu_gui_util.o gfxmenu_mod-gfxmenu_gui_string_util.o gfxmenu_mod-gfxmenu_named_colors.o gfxmenu_mod-gfxmenu_font.o

mod-gfxmenu.o: mod-gfxmenu.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"mod-gfxmenu.c\" -c -o $@ $<

mod-gfxmenu.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'gfxmenu' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-gfxmenu.lst: pre-gfxmenu.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 gfxmenu/' > $@
else
def-gfxmenu.lst: pre-gfxmenu.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 gfxmenu/' > $@
endif

und-gfxmenu.lst: pre-gfxmenu.o
	echo 'gfxmenu' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

gfxmenu_mod-gfxmenu_gfxmenu.o: gfxmenu/gfxmenu.c $(gfxmenu/gfxmenu.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gfxmenu.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gfxmenu.d

clean-module-gfxmenu_mod-gfxmenu_gfxmenu-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gfxmenu.lst fs-gfxmenu_mod-gfxmenu_gfxmenu.lst partmap-gfxmenu_mod-gfxmenu_gfxmenu.lst handler-gfxmenu_mod-gfxmenu_gfxmenu.lst parttool-gfxmenu_mod-gfxmenu_gfxmenu.lst video-gfxmenu_mod-gfxmenu_gfxmenu.lst terminal-gfxmenu_mod-gfxmenu_gfxmenu.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gfxmenu-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gfxmenu.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gfxmenu.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gfxmenu.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gfxmenu.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gfxmenu.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gfxmenu.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gfxmenu.lst

cmd-gfxmenu_mod-gfxmenu_gfxmenu.lst: gfxmenu/gfxmenu.c $(gfxmenu/gfxmenu.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gfxmenu.lst: gfxmenu/gfxmenu.c $(gfxmenu/gfxmenu.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gfxmenu.lst: gfxmenu/gfxmenu.c $(gfxmenu/gfxmenu.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gfxmenu.lst: gfxmenu/gfxmenu.c $(gfxmenu/gfxmenu.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gfxmenu.lst: gfxmenu/gfxmenu.c $(gfxmenu/gfxmenu.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gfxmenu.lst: gfxmenu/gfxmenu.c $(gfxmenu/gfxmenu.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gfxmenu.lst: gfxmenu/gfxmenu.c $(gfxmenu/gfxmenu.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_model.o: gfxmenu/model.c $(gfxmenu/model.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/model.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_model.d

clean-module-gfxmenu_mod-gfxmenu_model-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_model.lst fs-gfxmenu_mod-gfxmenu_model.lst partmap-gfxmenu_mod-gfxmenu_model.lst handler-gfxmenu_mod-gfxmenu_model.lst parttool-gfxmenu_mod-gfxmenu_model.lst video-gfxmenu_mod-gfxmenu_model.lst terminal-gfxmenu_mod-gfxmenu_model.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_model-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_model.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_model.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_model.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_model.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_model.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_model.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_model.lst

cmd-gfxmenu_mod-gfxmenu_model.lst: gfxmenu/model.c $(gfxmenu/model.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_model.lst: gfxmenu/model.c $(gfxmenu/model.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_model.lst: gfxmenu/model.c $(gfxmenu/model.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_model.lst: gfxmenu/model.c $(gfxmenu/model.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_model.lst: gfxmenu/model.c $(gfxmenu/model.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_model.lst: gfxmenu/model.c $(gfxmenu/model.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_model.lst: gfxmenu/model.c $(gfxmenu/model.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_view.o: gfxmenu/view.c $(gfxmenu/view.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/view.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_view.d

clean-module-gfxmenu_mod-gfxmenu_view-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_view.lst fs-gfxmenu_mod-gfxmenu_view.lst partmap-gfxmenu_mod-gfxmenu_view.lst handler-gfxmenu_mod-gfxmenu_view.lst parttool-gfxmenu_mod-gfxmenu_view.lst video-gfxmenu_mod-gfxmenu_view.lst terminal-gfxmenu_mod-gfxmenu_view.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_view-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_view.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_view.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_view.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_view.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_view.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_view.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_view.lst

cmd-gfxmenu_mod-gfxmenu_view.lst: gfxmenu/view.c $(gfxmenu/view.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_view.lst: gfxmenu/view.c $(gfxmenu/view.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_view.lst: gfxmenu/view.c $(gfxmenu/view.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_view.lst: gfxmenu/view.c $(gfxmenu/view.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_view.lst: gfxmenu/view.c $(gfxmenu/view.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_view.lst: gfxmenu/view.c $(gfxmenu/view.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_view.lst: gfxmenu/view.c $(gfxmenu/view.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_icon_manager.o: gfxmenu/icon_manager.c $(gfxmenu/icon_manager.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/icon_manager.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_icon_manager.d

clean-module-gfxmenu_mod-gfxmenu_icon_manager-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_icon_manager.lst fs-gfxmenu_mod-gfxmenu_icon_manager.lst partmap-gfxmenu_mod-gfxmenu_icon_manager.lst handler-gfxmenu_mod-gfxmenu_icon_manager.lst parttool-gfxmenu_mod-gfxmenu_icon_manager.lst video-gfxmenu_mod-gfxmenu_icon_manager.lst terminal-gfxmenu_mod-gfxmenu_icon_manager.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_icon_manager-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_icon_manager.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_icon_manager.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_icon_manager.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_icon_manager.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_icon_manager.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_icon_manager.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_icon_manager.lst

cmd-gfxmenu_mod-gfxmenu_icon_manager.lst: gfxmenu/icon_manager.c $(gfxmenu/icon_manager.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_icon_manager.lst: gfxmenu/icon_manager.c $(gfxmenu/icon_manager.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_icon_manager.lst: gfxmenu/icon_manager.c $(gfxmenu/icon_manager.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_icon_manager.lst: gfxmenu/icon_manager.c $(gfxmenu/icon_manager.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_icon_manager.lst: gfxmenu/icon_manager.c $(gfxmenu/icon_manager.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_icon_manager.lst: gfxmenu/icon_manager.c $(gfxmenu/icon_manager.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_icon_manager.lst: gfxmenu/icon_manager.c $(gfxmenu/icon_manager.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_theme_loader.o: gfxmenu/theme_loader.c $(gfxmenu/theme_loader.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/theme_loader.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_theme_loader.d

clean-module-gfxmenu_mod-gfxmenu_theme_loader-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_theme_loader.lst fs-gfxmenu_mod-gfxmenu_theme_loader.lst partmap-gfxmenu_mod-gfxmenu_theme_loader.lst handler-gfxmenu_mod-gfxmenu_theme_loader.lst parttool-gfxmenu_mod-gfxmenu_theme_loader.lst video-gfxmenu_mod-gfxmenu_theme_loader.lst terminal-gfxmenu_mod-gfxmenu_theme_loader.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_theme_loader-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_theme_loader.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_theme_loader.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_theme_loader.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_theme_loader.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_theme_loader.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_theme_loader.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_theme_loader.lst

cmd-gfxmenu_mod-gfxmenu_theme_loader.lst: gfxmenu/theme_loader.c $(gfxmenu/theme_loader.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_theme_loader.lst: gfxmenu/theme_loader.c $(gfxmenu/theme_loader.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_theme_loader.lst: gfxmenu/theme_loader.c $(gfxmenu/theme_loader.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_theme_loader.lst: gfxmenu/theme_loader.c $(gfxmenu/theme_loader.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_theme_loader.lst: gfxmenu/theme_loader.c $(gfxmenu/theme_loader.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_theme_loader.lst: gfxmenu/theme_loader.c $(gfxmenu/theme_loader.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_theme_loader.lst: gfxmenu/theme_loader.c $(gfxmenu/theme_loader.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_widget_box.o: gfxmenu/widget-box.c $(gfxmenu/widget-box.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/widget-box.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_widget_box.d

clean-module-gfxmenu_mod-gfxmenu_widget_box-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_widget_box.lst fs-gfxmenu_mod-gfxmenu_widget_box.lst partmap-gfxmenu_mod-gfxmenu_widget_box.lst handler-gfxmenu_mod-gfxmenu_widget_box.lst parttool-gfxmenu_mod-gfxmenu_widget_box.lst video-gfxmenu_mod-gfxmenu_widget_box.lst terminal-gfxmenu_mod-gfxmenu_widget_box.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_widget_box-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_widget_box.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_widget_box.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_widget_box.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_widget_box.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_widget_box.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_widget_box.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_widget_box.lst

cmd-gfxmenu_mod-gfxmenu_widget_box.lst: gfxmenu/widget-box.c $(gfxmenu/widget-box.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_widget_box.lst: gfxmenu/widget-box.c $(gfxmenu/widget-box.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_widget_box.lst: gfxmenu/widget-box.c $(gfxmenu/widget-box.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_widget_box.lst: gfxmenu/widget-box.c $(gfxmenu/widget-box.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_widget_box.lst: gfxmenu/widget-box.c $(gfxmenu/widget-box.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_widget_box.lst: gfxmenu/widget-box.c $(gfxmenu/widget-box.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_widget_box.lst: gfxmenu/widget-box.c $(gfxmenu/widget-box.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_gui_canvas.o: gfxmenu/gui_canvas.c $(gfxmenu/gui_canvas.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gui_canvas.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gui_canvas.d

clean-module-gfxmenu_mod-gfxmenu_gui_canvas-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gui_canvas.lst fs-gfxmenu_mod-gfxmenu_gui_canvas.lst partmap-gfxmenu_mod-gfxmenu_gui_canvas.lst handler-gfxmenu_mod-gfxmenu_gui_canvas.lst parttool-gfxmenu_mod-gfxmenu_gui_canvas.lst video-gfxmenu_mod-gfxmenu_gui_canvas.lst terminal-gfxmenu_mod-gfxmenu_gui_canvas.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gui_canvas-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gui_canvas.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gui_canvas.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gui_canvas.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gui_canvas.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gui_canvas.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gui_canvas.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gui_canvas.lst

cmd-gfxmenu_mod-gfxmenu_gui_canvas.lst: gfxmenu/gui_canvas.c $(gfxmenu/gui_canvas.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gui_canvas.lst: gfxmenu/gui_canvas.c $(gfxmenu/gui_canvas.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gui_canvas.lst: gfxmenu/gui_canvas.c $(gfxmenu/gui_canvas.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gui_canvas.lst: gfxmenu/gui_canvas.c $(gfxmenu/gui_canvas.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gui_canvas.lst: gfxmenu/gui_canvas.c $(gfxmenu/gui_canvas.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gui_canvas.lst: gfxmenu/gui_canvas.c $(gfxmenu/gui_canvas.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gui_canvas.lst: gfxmenu/gui_canvas.c $(gfxmenu/gui_canvas.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_gui_circular_progress.o: gfxmenu/gui_circular_progress.c $(gfxmenu/gui_circular_progress.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gui_circular_progress.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gui_circular_progress.d

clean-module-gfxmenu_mod-gfxmenu_gui_circular_progress-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gui_circular_progress.lst fs-gfxmenu_mod-gfxmenu_gui_circular_progress.lst partmap-gfxmenu_mod-gfxmenu_gui_circular_progress.lst handler-gfxmenu_mod-gfxmenu_gui_circular_progress.lst parttool-gfxmenu_mod-gfxmenu_gui_circular_progress.lst video-gfxmenu_mod-gfxmenu_gui_circular_progress.lst terminal-gfxmenu_mod-gfxmenu_gui_circular_progress.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gui_circular_progress-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gui_circular_progress.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gui_circular_progress.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gui_circular_progress.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gui_circular_progress.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gui_circular_progress.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gui_circular_progress.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gui_circular_progress.lst

cmd-gfxmenu_mod-gfxmenu_gui_circular_progress.lst: gfxmenu/gui_circular_progress.c $(gfxmenu/gui_circular_progress.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gui_circular_progress.lst: gfxmenu/gui_circular_progress.c $(gfxmenu/gui_circular_progress.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gui_circular_progress.lst: gfxmenu/gui_circular_progress.c $(gfxmenu/gui_circular_progress.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gui_circular_progress.lst: gfxmenu/gui_circular_progress.c $(gfxmenu/gui_circular_progress.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gui_circular_progress.lst: gfxmenu/gui_circular_progress.c $(gfxmenu/gui_circular_progress.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gui_circular_progress.lst: gfxmenu/gui_circular_progress.c $(gfxmenu/gui_circular_progress.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gui_circular_progress.lst: gfxmenu/gui_circular_progress.c $(gfxmenu/gui_circular_progress.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_gui_box.o: gfxmenu/gui_box.c $(gfxmenu/gui_box.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gui_box.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gui_box.d

clean-module-gfxmenu_mod-gfxmenu_gui_box-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gui_box.lst fs-gfxmenu_mod-gfxmenu_gui_box.lst partmap-gfxmenu_mod-gfxmenu_gui_box.lst handler-gfxmenu_mod-gfxmenu_gui_box.lst parttool-gfxmenu_mod-gfxmenu_gui_box.lst video-gfxmenu_mod-gfxmenu_gui_box.lst terminal-gfxmenu_mod-gfxmenu_gui_box.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gui_box-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gui_box.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gui_box.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gui_box.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gui_box.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gui_box.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gui_box.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gui_box.lst

cmd-gfxmenu_mod-gfxmenu_gui_box.lst: gfxmenu/gui_box.c $(gfxmenu/gui_box.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gui_box.lst: gfxmenu/gui_box.c $(gfxmenu/gui_box.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gui_box.lst: gfxmenu/gui_box.c $(gfxmenu/gui_box.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gui_box.lst: gfxmenu/gui_box.c $(gfxmenu/gui_box.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gui_box.lst: gfxmenu/gui_box.c $(gfxmenu/gui_box.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gui_box.lst: gfxmenu/gui_box.c $(gfxmenu/gui_box.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gui_box.lst: gfxmenu/gui_box.c $(gfxmenu/gui_box.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_gui_label.o: gfxmenu/gui_label.c $(gfxmenu/gui_label.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gui_label.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gui_label.d

clean-module-gfxmenu_mod-gfxmenu_gui_label-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gui_label.lst fs-gfxmenu_mod-gfxmenu_gui_label.lst partmap-gfxmenu_mod-gfxmenu_gui_label.lst handler-gfxmenu_mod-gfxmenu_gui_label.lst parttool-gfxmenu_mod-gfxmenu_gui_label.lst video-gfxmenu_mod-gfxmenu_gui_label.lst terminal-gfxmenu_mod-gfxmenu_gui_label.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gui_label-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gui_label.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gui_label.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gui_label.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gui_label.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gui_label.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gui_label.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gui_label.lst

cmd-gfxmenu_mod-gfxmenu_gui_label.lst: gfxmenu/gui_label.c $(gfxmenu/gui_label.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gui_label.lst: gfxmenu/gui_label.c $(gfxmenu/gui_label.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gui_label.lst: gfxmenu/gui_label.c $(gfxmenu/gui_label.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gui_label.lst: gfxmenu/gui_label.c $(gfxmenu/gui_label.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gui_label.lst: gfxmenu/gui_label.c $(gfxmenu/gui_label.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gui_label.lst: gfxmenu/gui_label.c $(gfxmenu/gui_label.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gui_label.lst: gfxmenu/gui_label.c $(gfxmenu/gui_label.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_gui_list.o: gfxmenu/gui_list.c $(gfxmenu/gui_list.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gui_list.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gui_list.d

clean-module-gfxmenu_mod-gfxmenu_gui_list-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gui_list.lst fs-gfxmenu_mod-gfxmenu_gui_list.lst partmap-gfxmenu_mod-gfxmenu_gui_list.lst handler-gfxmenu_mod-gfxmenu_gui_list.lst parttool-gfxmenu_mod-gfxmenu_gui_list.lst video-gfxmenu_mod-gfxmenu_gui_list.lst terminal-gfxmenu_mod-gfxmenu_gui_list.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gui_list-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gui_list.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gui_list.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gui_list.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gui_list.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gui_list.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gui_list.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gui_list.lst

cmd-gfxmenu_mod-gfxmenu_gui_list.lst: gfxmenu/gui_list.c $(gfxmenu/gui_list.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gui_list.lst: gfxmenu/gui_list.c $(gfxmenu/gui_list.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gui_list.lst: gfxmenu/gui_list.c $(gfxmenu/gui_list.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gui_list.lst: gfxmenu/gui_list.c $(gfxmenu/gui_list.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gui_list.lst: gfxmenu/gui_list.c $(gfxmenu/gui_list.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gui_list.lst: gfxmenu/gui_list.c $(gfxmenu/gui_list.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gui_list.lst: gfxmenu/gui_list.c $(gfxmenu/gui_list.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_gui_image.o: gfxmenu/gui_image.c $(gfxmenu/gui_image.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gui_image.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gui_image.d

clean-module-gfxmenu_mod-gfxmenu_gui_image-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gui_image.lst fs-gfxmenu_mod-gfxmenu_gui_image.lst partmap-gfxmenu_mod-gfxmenu_gui_image.lst handler-gfxmenu_mod-gfxmenu_gui_image.lst parttool-gfxmenu_mod-gfxmenu_gui_image.lst video-gfxmenu_mod-gfxmenu_gui_image.lst terminal-gfxmenu_mod-gfxmenu_gui_image.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gui_image-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gui_image.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gui_image.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gui_image.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gui_image.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gui_image.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gui_image.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gui_image.lst

cmd-gfxmenu_mod-gfxmenu_gui_image.lst: gfxmenu/gui_image.c $(gfxmenu/gui_image.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gui_image.lst: gfxmenu/gui_image.c $(gfxmenu/gui_image.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gui_image.lst: gfxmenu/gui_image.c $(gfxmenu/gui_image.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gui_image.lst: gfxmenu/gui_image.c $(gfxmenu/gui_image.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gui_image.lst: gfxmenu/gui_image.c $(gfxmenu/gui_image.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gui_image.lst: gfxmenu/gui_image.c $(gfxmenu/gui_image.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gui_image.lst: gfxmenu/gui_image.c $(gfxmenu/gui_image.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_gui_progress_bar.o: gfxmenu/gui_progress_bar.c $(gfxmenu/gui_progress_bar.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gui_progress_bar.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gui_progress_bar.d

clean-module-gfxmenu_mod-gfxmenu_gui_progress_bar-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gui_progress_bar.lst fs-gfxmenu_mod-gfxmenu_gui_progress_bar.lst partmap-gfxmenu_mod-gfxmenu_gui_progress_bar.lst handler-gfxmenu_mod-gfxmenu_gui_progress_bar.lst parttool-gfxmenu_mod-gfxmenu_gui_progress_bar.lst video-gfxmenu_mod-gfxmenu_gui_progress_bar.lst terminal-gfxmenu_mod-gfxmenu_gui_progress_bar.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gui_progress_bar-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gui_progress_bar.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gui_progress_bar.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gui_progress_bar.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gui_progress_bar.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gui_progress_bar.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gui_progress_bar.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gui_progress_bar.lst

cmd-gfxmenu_mod-gfxmenu_gui_progress_bar.lst: gfxmenu/gui_progress_bar.c $(gfxmenu/gui_progress_bar.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gui_progress_bar.lst: gfxmenu/gui_progress_bar.c $(gfxmenu/gui_progress_bar.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gui_progress_bar.lst: gfxmenu/gui_progress_bar.c $(gfxmenu/gui_progress_bar.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gui_progress_bar.lst: gfxmenu/gui_progress_bar.c $(gfxmenu/gui_progress_bar.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gui_progress_bar.lst: gfxmenu/gui_progress_bar.c $(gfxmenu/gui_progress_bar.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gui_progress_bar.lst: gfxmenu/gui_progress_bar.c $(gfxmenu/gui_progress_bar.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gui_progress_bar.lst: gfxmenu/gui_progress_bar.c $(gfxmenu/gui_progress_bar.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_gui_util.o: gfxmenu/gui_util.c $(gfxmenu/gui_util.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gui_util.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gui_util.d

clean-module-gfxmenu_mod-gfxmenu_gui_util-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gui_util.lst fs-gfxmenu_mod-gfxmenu_gui_util.lst partmap-gfxmenu_mod-gfxmenu_gui_util.lst handler-gfxmenu_mod-gfxmenu_gui_util.lst parttool-gfxmenu_mod-gfxmenu_gui_util.lst video-gfxmenu_mod-gfxmenu_gui_util.lst terminal-gfxmenu_mod-gfxmenu_gui_util.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gui_util-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gui_util.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gui_util.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gui_util.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gui_util.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gui_util.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gui_util.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gui_util.lst

cmd-gfxmenu_mod-gfxmenu_gui_util.lst: gfxmenu/gui_util.c $(gfxmenu/gui_util.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gui_util.lst: gfxmenu/gui_util.c $(gfxmenu/gui_util.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gui_util.lst: gfxmenu/gui_util.c $(gfxmenu/gui_util.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gui_util.lst: gfxmenu/gui_util.c $(gfxmenu/gui_util.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gui_util.lst: gfxmenu/gui_util.c $(gfxmenu/gui_util.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gui_util.lst: gfxmenu/gui_util.c $(gfxmenu/gui_util.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gui_util.lst: gfxmenu/gui_util.c $(gfxmenu/gui_util.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_gui_string_util.o: gfxmenu/gui_string_util.c $(gfxmenu/gui_string_util.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/gui_string_util.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_gui_string_util.d

clean-module-gfxmenu_mod-gfxmenu_gui_string_util-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_gui_string_util.lst fs-gfxmenu_mod-gfxmenu_gui_string_util.lst partmap-gfxmenu_mod-gfxmenu_gui_string_util.lst handler-gfxmenu_mod-gfxmenu_gui_string_util.lst parttool-gfxmenu_mod-gfxmenu_gui_string_util.lst video-gfxmenu_mod-gfxmenu_gui_string_util.lst terminal-gfxmenu_mod-gfxmenu_gui_string_util.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_gui_string_util-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_gui_string_util.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_gui_string_util.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_gui_string_util.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_gui_string_util.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_gui_string_util.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_gui_string_util.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_gui_string_util.lst

cmd-gfxmenu_mod-gfxmenu_gui_string_util.lst: gfxmenu/gui_string_util.c $(gfxmenu/gui_string_util.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_gui_string_util.lst: gfxmenu/gui_string_util.c $(gfxmenu/gui_string_util.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_gui_string_util.lst: gfxmenu/gui_string_util.c $(gfxmenu/gui_string_util.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_gui_string_util.lst: gfxmenu/gui_string_util.c $(gfxmenu/gui_string_util.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_gui_string_util.lst: gfxmenu/gui_string_util.c $(gfxmenu/gui_string_util.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_gui_string_util.lst: gfxmenu/gui_string_util.c $(gfxmenu/gui_string_util.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_gui_string_util.lst: gfxmenu/gui_string_util.c $(gfxmenu/gui_string_util.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_named_colors.o: gfxmenu/named_colors.c $(gfxmenu/named_colors.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/named_colors.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_named_colors.d

clean-module-gfxmenu_mod-gfxmenu_named_colors-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_named_colors.lst fs-gfxmenu_mod-gfxmenu_named_colors.lst partmap-gfxmenu_mod-gfxmenu_named_colors.lst handler-gfxmenu_mod-gfxmenu_named_colors.lst parttool-gfxmenu_mod-gfxmenu_named_colors.lst video-gfxmenu_mod-gfxmenu_named_colors.lst terminal-gfxmenu_mod-gfxmenu_named_colors.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_named_colors-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_named_colors.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_named_colors.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_named_colors.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_named_colors.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_named_colors.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_named_colors.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_named_colors.lst

cmd-gfxmenu_mod-gfxmenu_named_colors.lst: gfxmenu/named_colors.c $(gfxmenu/named_colors.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_named_colors.lst: gfxmenu/named_colors.c $(gfxmenu/named_colors.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_named_colors.lst: gfxmenu/named_colors.c $(gfxmenu/named_colors.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_named_colors.lst: gfxmenu/named_colors.c $(gfxmenu/named_colors.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_named_colors.lst: gfxmenu/named_colors.c $(gfxmenu/named_colors.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_named_colors.lst: gfxmenu/named_colors.c $(gfxmenu/named_colors.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_named_colors.lst: gfxmenu/named_colors.c $(gfxmenu/named_colors.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod-gfxmenu_font.o: gfxmenu/font.c $(gfxmenu/font.c_DEPENDENCIES)
	$(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -DGRUB_FILE=\"gfxmenu/font.c\" -MD -c -o $@ $<
-include gfxmenu_mod-gfxmenu_font.d

clean-module-gfxmenu_mod-gfxmenu_font-extra.1:
	rm -f cmd-gfxmenu_mod-gfxmenu_font.lst fs-gfxmenu_mod-gfxmenu_font.lst partmap-gfxmenu_mod-gfxmenu_font.lst handler-gfxmenu_mod-gfxmenu_font.lst parttool-gfxmenu_mod-gfxmenu_font.lst video-gfxmenu_mod-gfxmenu_font.lst terminal-gfxmenu_mod-gfxmenu_font.lst

CLEAN_MODULE_TARGETS += clean-module-gfxmenu_mod-gfxmenu_font-extra.1

COMMANDFILES += cmd-gfxmenu_mod-gfxmenu_font.lst
FSFILES += fs-gfxmenu_mod-gfxmenu_font.lst
PARTTOOLFILES += parttool-gfxmenu_mod-gfxmenu_font.lst
PARTMAPFILES += partmap-gfxmenu_mod-gfxmenu_font.lst
HANDLERFILES += handler-gfxmenu_mod-gfxmenu_font.lst
TERMINALFILES += terminal-gfxmenu_mod-gfxmenu_font.lst
VIDEOFILES += video-gfxmenu_mod-gfxmenu_font.lst

cmd-gfxmenu_mod-gfxmenu_font.lst: gfxmenu/font.c $(gfxmenu/font.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

fs-gfxmenu_mod-gfxmenu_font.lst: gfxmenu/font.c $(gfxmenu/font.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxmenu > $@ || (rm -f $@; exit 1)

parttool-gfxmenu_mod-gfxmenu_font.lst: gfxmenu/font.c $(gfxmenu/font.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxmenu > $@ || (rm -f $@; exit 1)

partmap-gfxmenu_mod-gfxmenu_font.lst: gfxmenu/font.c $(gfxmenu/font.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxmenu > $@ || (rm -f $@; exit 1)

handler-gfxmenu_mod-gfxmenu_font.lst: gfxmenu/font.c $(gfxmenu/font.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxmenu > $@ || (rm -f $@; exit 1)

terminal-gfxmenu_mod-gfxmenu_font.lst: gfxmenu/font.c $(gfxmenu/font.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxmenu > $@ || (rm -f $@; exit 1)

video-gfxmenu_mod-gfxmenu_font.lst: gfxmenu/font.c $(gfxmenu/font.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igfxmenu -I$(srcdir)/gfxmenu $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxmenu_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxmenu > $@ || (rm -f $@; exit 1)

gfxmenu_mod_CFLAGS = $(COMMON_CFLAGS)
gfxmenu_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For parttool.mod.
parttool_mod_SOURCES = commands/parttool.c

clean-module-parttool.mod.1:
	rm -f parttool.mod mod-parttool.o mod-parttool.c pre-parttool.o parttool_mod-commands_parttool.o und-parttool.lst

CLEAN_MODULE_TARGETS += clean-module-parttool.mod.1

clean-module-parttool.mod-symbol.1:
	rm -f def-parttool.lst

CLEAN_MODULE_TARGETS += clean-module-parttool.mod-symbol.1
DEFSYMFILES += def-parttool.lst
mostlyclean-module-parttool.mod.1:
	rm -f parttool_mod-commands_parttool.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-parttool.mod.1
UNDSYMFILES += und-parttool.lst

ifeq ($(TARGET_NO_MODULES), yes)
parttool.mod: pre-parttool.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(parttool_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-parttool.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
parttool.mod: pre-parttool.o mod-parttool.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(parttool_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-parttool.o mod-parttool.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
parttool.mod: pre-parttool.o mod-parttool.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(parttool_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-parttool.o mod-parttool.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-parttool.o: $(parttool_mod_DEPENDENCIES) parttool_mod-commands_parttool.o
	-rm -f $@
	$(TARGET_CC) $(parttool_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ parttool_mod-commands_parttool.o

mod-parttool.o: mod-parttool.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(parttool_mod_CFLAGS) -DGRUB_FILE=\"mod-parttool.c\" -c -o $@ $<

mod-parttool.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'parttool' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-parttool.lst: pre-parttool.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 parttool/' > $@
else
def-parttool.lst: pre-parttool.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 parttool/' > $@
endif

und-parttool.lst: pre-parttool.o
	echo 'parttool' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

parttool_mod-commands_parttool.o: commands/parttool.c $(commands/parttool.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(parttool_mod_CFLAGS) -DGRUB_FILE=\"commands/parttool.c\" -MD -c -o $@ $<
-include parttool_mod-commands_parttool.d

clean-module-parttool_mod-commands_parttool-extra.1:
	rm -f cmd-parttool_mod-commands_parttool.lst fs-parttool_mod-commands_parttool.lst partmap-parttool_mod-commands_parttool.lst handler-parttool_mod-commands_parttool.lst parttool-parttool_mod-commands_parttool.lst video-parttool_mod-commands_parttool.lst terminal-parttool_mod-commands_parttool.lst

CLEAN_MODULE_TARGETS += clean-module-parttool_mod-commands_parttool-extra.1

COMMANDFILES += cmd-parttool_mod-commands_parttool.lst
FSFILES += fs-parttool_mod-commands_parttool.lst
PARTTOOLFILES += parttool-parttool_mod-commands_parttool.lst
PARTMAPFILES += partmap-parttool_mod-commands_parttool.lst
HANDLERFILES += handler-parttool_mod-commands_parttool.lst
TERMINALFILES += terminal-parttool_mod-commands_parttool.lst
VIDEOFILES += video-parttool_mod-commands_parttool.lst

cmd-parttool_mod-commands_parttool.lst: commands/parttool.c $(commands/parttool.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(parttool_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh parttool > $@ || (rm -f $@; exit 1)

fs-parttool_mod-commands_parttool.lst: commands/parttool.c $(commands/parttool.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(parttool_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh parttool > $@ || (rm -f $@; exit 1)

parttool-parttool_mod-commands_parttool.lst: commands/parttool.c $(commands/parttool.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(parttool_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh parttool > $@ || (rm -f $@; exit 1)

partmap-parttool_mod-commands_parttool.lst: commands/parttool.c $(commands/parttool.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(parttool_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh parttool > $@ || (rm -f $@; exit 1)

handler-parttool_mod-commands_parttool.lst: commands/parttool.c $(commands/parttool.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(parttool_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh parttool > $@ || (rm -f $@; exit 1)

terminal-parttool_mod-commands_parttool.lst: commands/parttool.c $(commands/parttool.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(parttool_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh parttool > $@ || (rm -f $@; exit 1)

video-parttool_mod-commands_parttool.lst: commands/parttool.c $(commands/parttool.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(parttool_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh parttool > $@ || (rm -f $@; exit 1)

parttool_mod_CFLAGS = $(COMMON_CFLAGS)
parttool_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For msdospart.mod.
msdospart_mod_SOURCES = parttool/msdospart.c

clean-module-msdospart.mod.1:
	rm -f msdospart.mod mod-msdospart.o mod-msdospart.c pre-msdospart.o msdospart_mod-parttool_msdospart.o und-msdospart.lst

CLEAN_MODULE_TARGETS += clean-module-msdospart.mod.1

clean-module-msdospart.mod-symbol.1:
	rm -f def-msdospart.lst

CLEAN_MODULE_TARGETS += clean-module-msdospart.mod-symbol.1
DEFSYMFILES += def-msdospart.lst
mostlyclean-module-msdospart.mod.1:
	rm -f msdospart_mod-parttool_msdospart.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-msdospart.mod.1
UNDSYMFILES += und-msdospart.lst

ifeq ($(TARGET_NO_MODULES), yes)
msdospart.mod: pre-msdospart.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(msdospart_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-msdospart.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
msdospart.mod: pre-msdospart.o mod-msdospart.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(msdospart_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-msdospart.o mod-msdospart.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
msdospart.mod: pre-msdospart.o mod-msdospart.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(msdospart_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-msdospart.o mod-msdospart.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-msdospart.o: $(msdospart_mod_DEPENDENCIES) msdospart_mod-parttool_msdospart.o
	-rm -f $@
	$(TARGET_CC) $(msdospart_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ msdospart_mod-parttool_msdospart.o

mod-msdospart.o: mod-msdospart.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(msdospart_mod_CFLAGS) -DGRUB_FILE=\"mod-msdospart.c\" -c -o $@ $<

mod-msdospart.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'msdospart' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-msdospart.lst: pre-msdospart.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 msdospart/' > $@
else
def-msdospart.lst: pre-msdospart.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 msdospart/' > $@
endif

und-msdospart.lst: pre-msdospart.o
	echo 'msdospart' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

msdospart_mod-parttool_msdospart.o: parttool/msdospart.c $(parttool/msdospart.c_DEPENDENCIES)
	$(TARGET_CC) -Iparttool -I$(srcdir)/parttool $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(msdospart_mod_CFLAGS) -DGRUB_FILE=\"parttool/msdospart.c\" -MD -c -o $@ $<
-include msdospart_mod-parttool_msdospart.d

clean-module-msdospart_mod-parttool_msdospart-extra.1:
	rm -f cmd-msdospart_mod-parttool_msdospart.lst fs-msdospart_mod-parttool_msdospart.lst partmap-msdospart_mod-parttool_msdospart.lst handler-msdospart_mod-parttool_msdospart.lst parttool-msdospart_mod-parttool_msdospart.lst video-msdospart_mod-parttool_msdospart.lst terminal-msdospart_mod-parttool_msdospart.lst

CLEAN_MODULE_TARGETS += clean-module-msdospart_mod-parttool_msdospart-extra.1

COMMANDFILES += cmd-msdospart_mod-parttool_msdospart.lst
FSFILES += fs-msdospart_mod-parttool_msdospart.lst
PARTTOOLFILES += parttool-msdospart_mod-parttool_msdospart.lst
PARTMAPFILES += partmap-msdospart_mod-parttool_msdospart.lst
HANDLERFILES += handler-msdospart_mod-parttool_msdospart.lst
TERMINALFILES += terminal-msdospart_mod-parttool_msdospart.lst
VIDEOFILES += video-msdospart_mod-parttool_msdospart.lst

cmd-msdospart_mod-parttool_msdospart.lst: parttool/msdospart.c $(parttool/msdospart.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iparttool -I$(srcdir)/parttool $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(msdospart_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh msdospart > $@ || (rm -f $@; exit 1)

fs-msdospart_mod-parttool_msdospart.lst: parttool/msdospart.c $(parttool/msdospart.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iparttool -I$(srcdir)/parttool $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(msdospart_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh msdospart > $@ || (rm -f $@; exit 1)

parttool-msdospart_mod-parttool_msdospart.lst: parttool/msdospart.c $(parttool/msdospart.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iparttool -I$(srcdir)/parttool $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(msdospart_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh msdospart > $@ || (rm -f $@; exit 1)

partmap-msdospart_mod-parttool_msdospart.lst: parttool/msdospart.c $(parttool/msdospart.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iparttool -I$(srcdir)/parttool $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(msdospart_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh msdospart > $@ || (rm -f $@; exit 1)

handler-msdospart_mod-parttool_msdospart.lst: parttool/msdospart.c $(parttool/msdospart.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iparttool -I$(srcdir)/parttool $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(msdospart_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh msdospart > $@ || (rm -f $@; exit 1)

terminal-msdospart_mod-parttool_msdospart.lst: parttool/msdospart.c $(parttool/msdospart.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iparttool -I$(srcdir)/parttool $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(msdospart_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh msdospart > $@ || (rm -f $@; exit 1)

video-msdospart_mod-parttool_msdospart.lst: parttool/msdospart.c $(parttool/msdospart.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iparttool -I$(srcdir)/parttool $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(msdospart_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh msdospart > $@ || (rm -f $@; exit 1)

msdospart_mod_CFLAGS = $(COMMON_CFLAGS)
msdospart_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For ls.mod.
ls_mod_SOURCES = commands/ls.c

clean-module-ls.mod.1:
	rm -f ls.mod mod-ls.o mod-ls.c pre-ls.o ls_mod-commands_ls.o und-ls.lst

CLEAN_MODULE_TARGETS += clean-module-ls.mod.1

clean-module-ls.mod-symbol.1:
	rm -f def-ls.lst

CLEAN_MODULE_TARGETS += clean-module-ls.mod-symbol.1
DEFSYMFILES += def-ls.lst
mostlyclean-module-ls.mod.1:
	rm -f ls_mod-commands_ls.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-ls.mod.1
UNDSYMFILES += und-ls.lst

ifeq ($(TARGET_NO_MODULES), yes)
ls.mod: pre-ls.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ls_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ls.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
ls.mod: pre-ls.o mod-ls.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(ls_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-ls.o mod-ls.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ls.mod: pre-ls.o mod-ls.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(ls_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-ls.o mod-ls.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-ls.o: $(ls_mod_DEPENDENCIES) ls_mod-commands_ls.o
	-rm -f $@
	$(TARGET_CC) $(ls_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ ls_mod-commands_ls.o

mod-ls.o: mod-ls.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(ls_mod_CFLAGS) -DGRUB_FILE=\"mod-ls.c\" -c -o $@ $<

mod-ls.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'ls' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-ls.lst: pre-ls.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 ls/' > $@
else
def-ls.lst: pre-ls.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 ls/' > $@
endif

und-ls.lst: pre-ls.o
	echo 'ls' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

ls_mod-commands_ls.o: commands/ls.c $(commands/ls.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ls_mod_CFLAGS) -DGRUB_FILE=\"commands/ls.c\" -MD -c -o $@ $<
-include ls_mod-commands_ls.d

clean-module-ls_mod-commands_ls-extra.1:
	rm -f cmd-ls_mod-commands_ls.lst fs-ls_mod-commands_ls.lst partmap-ls_mod-commands_ls.lst handler-ls_mod-commands_ls.lst parttool-ls_mod-commands_ls.lst video-ls_mod-commands_ls.lst terminal-ls_mod-commands_ls.lst

CLEAN_MODULE_TARGETS += clean-module-ls_mod-commands_ls-extra.1

COMMANDFILES += cmd-ls_mod-commands_ls.lst
FSFILES += fs-ls_mod-commands_ls.lst
PARTTOOLFILES += parttool-ls_mod-commands_ls.lst
PARTMAPFILES += partmap-ls_mod-commands_ls.lst
HANDLERFILES += handler-ls_mod-commands_ls.lst
TERMINALFILES += terminal-ls_mod-commands_ls.lst
VIDEOFILES += video-ls_mod-commands_ls.lst

cmd-ls_mod-commands_ls.lst: commands/ls.c $(commands/ls.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ls_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh ls > $@ || (rm -f $@; exit 1)

fs-ls_mod-commands_ls.lst: commands/ls.c $(commands/ls.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ls_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh ls > $@ || (rm -f $@; exit 1)

parttool-ls_mod-commands_ls.lst: commands/ls.c $(commands/ls.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ls_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh ls > $@ || (rm -f $@; exit 1)

partmap-ls_mod-commands_ls.lst: commands/ls.c $(commands/ls.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ls_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh ls > $@ || (rm -f $@; exit 1)

handler-ls_mod-commands_ls.lst: commands/ls.c $(commands/ls.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ls_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh ls > $@ || (rm -f $@; exit 1)

terminal-ls_mod-commands_ls.lst: commands/ls.c $(commands/ls.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(ls_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh ls > $@ || (rm -f $@; exit 1)

video-ls_mod-commands_ls.lst: commands/ls.c $(commands/ls.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(ls_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh ls > $@ || (rm -f $@; exit 1)

ls_mod_CFLAGS = $(COMMON_CFLAGS)
ls_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For cmp.mod.
cmp_mod_SOURCES = commands/cmp.c

clean-module-cmp.mod.1:
	rm -f cmp.mod mod-cmp.o mod-cmp.c pre-cmp.o cmp_mod-commands_cmp.o und-cmp.lst

CLEAN_MODULE_TARGETS += clean-module-cmp.mod.1

clean-module-cmp.mod-symbol.1:
	rm -f def-cmp.lst

CLEAN_MODULE_TARGETS += clean-module-cmp.mod-symbol.1
DEFSYMFILES += def-cmp.lst
mostlyclean-module-cmp.mod.1:
	rm -f cmp_mod-commands_cmp.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-cmp.mod.1
UNDSYMFILES += und-cmp.lst

ifeq ($(TARGET_NO_MODULES), yes)
cmp.mod: pre-cmp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(cmp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-cmp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
cmp.mod: pre-cmp.o mod-cmp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(cmp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-cmp.o mod-cmp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
cmp.mod: pre-cmp.o mod-cmp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(cmp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-cmp.o mod-cmp.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-cmp.o: $(cmp_mod_DEPENDENCIES) cmp_mod-commands_cmp.o
	-rm -f $@
	$(TARGET_CC) $(cmp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ cmp_mod-commands_cmp.o

mod-cmp.o: mod-cmp.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(cmp_mod_CFLAGS) -DGRUB_FILE=\"mod-cmp.c\" -c -o $@ $<

mod-cmp.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'cmp' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-cmp.lst: pre-cmp.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 cmp/' > $@
else
def-cmp.lst: pre-cmp.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 cmp/' > $@
endif

und-cmp.lst: pre-cmp.o
	echo 'cmp' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

cmp_mod-commands_cmp.o: commands/cmp.c $(commands/cmp.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cmp_mod_CFLAGS) -DGRUB_FILE=\"commands/cmp.c\" -MD -c -o $@ $<
-include cmp_mod-commands_cmp.d

clean-module-cmp_mod-commands_cmp-extra.1:
	rm -f cmd-cmp_mod-commands_cmp.lst fs-cmp_mod-commands_cmp.lst partmap-cmp_mod-commands_cmp.lst handler-cmp_mod-commands_cmp.lst parttool-cmp_mod-commands_cmp.lst video-cmp_mod-commands_cmp.lst terminal-cmp_mod-commands_cmp.lst

CLEAN_MODULE_TARGETS += clean-module-cmp_mod-commands_cmp-extra.1

COMMANDFILES += cmd-cmp_mod-commands_cmp.lst
FSFILES += fs-cmp_mod-commands_cmp.lst
PARTTOOLFILES += parttool-cmp_mod-commands_cmp.lst
PARTMAPFILES += partmap-cmp_mod-commands_cmp.lst
HANDLERFILES += handler-cmp_mod-commands_cmp.lst
TERMINALFILES += terminal-cmp_mod-commands_cmp.lst
VIDEOFILES += video-cmp_mod-commands_cmp.lst

cmd-cmp_mod-commands_cmp.lst: commands/cmp.c $(commands/cmp.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cmp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh cmp > $@ || (rm -f $@; exit 1)

fs-cmp_mod-commands_cmp.lst: commands/cmp.c $(commands/cmp.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cmp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh cmp > $@ || (rm -f $@; exit 1)

parttool-cmp_mod-commands_cmp.lst: commands/cmp.c $(commands/cmp.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cmp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh cmp > $@ || (rm -f $@; exit 1)

partmap-cmp_mod-commands_cmp.lst: commands/cmp.c $(commands/cmp.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cmp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh cmp > $@ || (rm -f $@; exit 1)

handler-cmp_mod-commands_cmp.lst: commands/cmp.c $(commands/cmp.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cmp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh cmp > $@ || (rm -f $@; exit 1)

terminal-cmp_mod-commands_cmp.lst: commands/cmp.c $(commands/cmp.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cmp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh cmp > $@ || (rm -f $@; exit 1)

video-cmp_mod-commands_cmp.lst: commands/cmp.c $(commands/cmp.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cmp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh cmp > $@ || (rm -f $@; exit 1)

cmp_mod_CFLAGS = $(COMMON_CFLAGS)
cmp_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For cat.mod.
cat_mod_SOURCES = commands/cat.c

clean-module-cat.mod.1:
	rm -f cat.mod mod-cat.o mod-cat.c pre-cat.o cat_mod-commands_cat.o und-cat.lst

CLEAN_MODULE_TARGETS += clean-module-cat.mod.1

clean-module-cat.mod-symbol.1:
	rm -f def-cat.lst

CLEAN_MODULE_TARGETS += clean-module-cat.mod-symbol.1
DEFSYMFILES += def-cat.lst
mostlyclean-module-cat.mod.1:
	rm -f cat_mod-commands_cat.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-cat.mod.1
UNDSYMFILES += und-cat.lst

ifeq ($(TARGET_NO_MODULES), yes)
cat.mod: pre-cat.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(cat_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-cat.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
cat.mod: pre-cat.o mod-cat.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(cat_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-cat.o mod-cat.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
cat.mod: pre-cat.o mod-cat.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(cat_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-cat.o mod-cat.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-cat.o: $(cat_mod_DEPENDENCIES) cat_mod-commands_cat.o
	-rm -f $@
	$(TARGET_CC) $(cat_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ cat_mod-commands_cat.o

mod-cat.o: mod-cat.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(cat_mod_CFLAGS) -DGRUB_FILE=\"mod-cat.c\" -c -o $@ $<

mod-cat.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'cat' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-cat.lst: pre-cat.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 cat/' > $@
else
def-cat.lst: pre-cat.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 cat/' > $@
endif

und-cat.lst: pre-cat.o
	echo 'cat' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

cat_mod-commands_cat.o: commands/cat.c $(commands/cat.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cat_mod_CFLAGS) -DGRUB_FILE=\"commands/cat.c\" -MD -c -o $@ $<
-include cat_mod-commands_cat.d

clean-module-cat_mod-commands_cat-extra.1:
	rm -f cmd-cat_mod-commands_cat.lst fs-cat_mod-commands_cat.lst partmap-cat_mod-commands_cat.lst handler-cat_mod-commands_cat.lst parttool-cat_mod-commands_cat.lst video-cat_mod-commands_cat.lst terminal-cat_mod-commands_cat.lst

CLEAN_MODULE_TARGETS += clean-module-cat_mod-commands_cat-extra.1

COMMANDFILES += cmd-cat_mod-commands_cat.lst
FSFILES += fs-cat_mod-commands_cat.lst
PARTTOOLFILES += parttool-cat_mod-commands_cat.lst
PARTMAPFILES += partmap-cat_mod-commands_cat.lst
HANDLERFILES += handler-cat_mod-commands_cat.lst
TERMINALFILES += terminal-cat_mod-commands_cat.lst
VIDEOFILES += video-cat_mod-commands_cat.lst

cmd-cat_mod-commands_cat.lst: commands/cat.c $(commands/cat.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh cat > $@ || (rm -f $@; exit 1)

fs-cat_mod-commands_cat.lst: commands/cat.c $(commands/cat.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh cat > $@ || (rm -f $@; exit 1)

parttool-cat_mod-commands_cat.lst: commands/cat.c $(commands/cat.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh cat > $@ || (rm -f $@; exit 1)

partmap-cat_mod-commands_cat.lst: commands/cat.c $(commands/cat.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh cat > $@ || (rm -f $@; exit 1)

handler-cat_mod-commands_cat.lst: commands/cat.c $(commands/cat.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh cat > $@ || (rm -f $@; exit 1)

terminal-cat_mod-commands_cat.lst: commands/cat.c $(commands/cat.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(cat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh cat > $@ || (rm -f $@; exit 1)

video-cat_mod-commands_cat.lst: commands/cat.c $(commands/cat.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(cat_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh cat > $@ || (rm -f $@; exit 1)

cat_mod_CFLAGS = $(COMMON_CFLAGS)
cat_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For echo.mod
echo_mod_SOURCES = commands/echo.c

clean-module-echo.mod.1:
	rm -f echo.mod mod-echo.o mod-echo.c pre-echo.o echo_mod-commands_echo.o und-echo.lst

CLEAN_MODULE_TARGETS += clean-module-echo.mod.1

clean-module-echo.mod-symbol.1:
	rm -f def-echo.lst

CLEAN_MODULE_TARGETS += clean-module-echo.mod-symbol.1
DEFSYMFILES += def-echo.lst
mostlyclean-module-echo.mod.1:
	rm -f echo_mod-commands_echo.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-echo.mod.1
UNDSYMFILES += und-echo.lst

ifeq ($(TARGET_NO_MODULES), yes)
echo.mod: pre-echo.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(echo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-echo.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
echo.mod: pre-echo.o mod-echo.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(echo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-echo.o mod-echo.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
echo.mod: pre-echo.o mod-echo.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(echo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-echo.o mod-echo.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-echo.o: $(echo_mod_DEPENDENCIES) echo_mod-commands_echo.o
	-rm -f $@
	$(TARGET_CC) $(echo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ echo_mod-commands_echo.o

mod-echo.o: mod-echo.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(echo_mod_CFLAGS) -DGRUB_FILE=\"mod-echo.c\" -c -o $@ $<

mod-echo.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'echo' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-echo.lst: pre-echo.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 echo/' > $@
else
def-echo.lst: pre-echo.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 echo/' > $@
endif

und-echo.lst: pre-echo.o
	echo 'echo' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

echo_mod-commands_echo.o: commands/echo.c $(commands/echo.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(echo_mod_CFLAGS) -DGRUB_FILE=\"commands/echo.c\" -MD -c -o $@ $<
-include echo_mod-commands_echo.d

clean-module-echo_mod-commands_echo-extra.1:
	rm -f cmd-echo_mod-commands_echo.lst fs-echo_mod-commands_echo.lst partmap-echo_mod-commands_echo.lst handler-echo_mod-commands_echo.lst parttool-echo_mod-commands_echo.lst video-echo_mod-commands_echo.lst terminal-echo_mod-commands_echo.lst

CLEAN_MODULE_TARGETS += clean-module-echo_mod-commands_echo-extra.1

COMMANDFILES += cmd-echo_mod-commands_echo.lst
FSFILES += fs-echo_mod-commands_echo.lst
PARTTOOLFILES += parttool-echo_mod-commands_echo.lst
PARTMAPFILES += partmap-echo_mod-commands_echo.lst
HANDLERFILES += handler-echo_mod-commands_echo.lst
TERMINALFILES += terminal-echo_mod-commands_echo.lst
VIDEOFILES += video-echo_mod-commands_echo.lst

cmd-echo_mod-commands_echo.lst: commands/echo.c $(commands/echo.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(echo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh echo > $@ || (rm -f $@; exit 1)

fs-echo_mod-commands_echo.lst: commands/echo.c $(commands/echo.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(echo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh echo > $@ || (rm -f $@; exit 1)

parttool-echo_mod-commands_echo.lst: commands/echo.c $(commands/echo.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(echo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh echo > $@ || (rm -f $@; exit 1)

partmap-echo_mod-commands_echo.lst: commands/echo.c $(commands/echo.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(echo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh echo > $@ || (rm -f $@; exit 1)

handler-echo_mod-commands_echo.lst: commands/echo.c $(commands/echo.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(echo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh echo > $@ || (rm -f $@; exit 1)

terminal-echo_mod-commands_echo.lst: commands/echo.c $(commands/echo.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(echo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh echo > $@ || (rm -f $@; exit 1)

video-echo_mod-commands_echo.lst: commands/echo.c $(commands/echo.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(echo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh echo > $@ || (rm -f $@; exit 1)

echo_mod_CFLAGS = $(COMMON_CFLAGS)
echo_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For help.mod.
help_mod_SOURCES = commands/help.c

clean-module-help.mod.1:
	rm -f help.mod mod-help.o mod-help.c pre-help.o help_mod-commands_help.o und-help.lst

CLEAN_MODULE_TARGETS += clean-module-help.mod.1

clean-module-help.mod-symbol.1:
	rm -f def-help.lst

CLEAN_MODULE_TARGETS += clean-module-help.mod-symbol.1
DEFSYMFILES += def-help.lst
mostlyclean-module-help.mod.1:
	rm -f help_mod-commands_help.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-help.mod.1
UNDSYMFILES += und-help.lst

ifeq ($(TARGET_NO_MODULES), yes)
help.mod: pre-help.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(help_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-help.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
help.mod: pre-help.o mod-help.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(help_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-help.o mod-help.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
help.mod: pre-help.o mod-help.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(help_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-help.o mod-help.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-help.o: $(help_mod_DEPENDENCIES) help_mod-commands_help.o
	-rm -f $@
	$(TARGET_CC) $(help_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ help_mod-commands_help.o

mod-help.o: mod-help.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(help_mod_CFLAGS) -DGRUB_FILE=\"mod-help.c\" -c -o $@ $<

mod-help.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'help' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-help.lst: pre-help.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 help/' > $@
else
def-help.lst: pre-help.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 help/' > $@
endif

und-help.lst: pre-help.o
	echo 'help' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

help_mod-commands_help.o: commands/help.c $(commands/help.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(help_mod_CFLAGS) -DGRUB_FILE=\"commands/help.c\" -MD -c -o $@ $<
-include help_mod-commands_help.d

clean-module-help_mod-commands_help-extra.1:
	rm -f cmd-help_mod-commands_help.lst fs-help_mod-commands_help.lst partmap-help_mod-commands_help.lst handler-help_mod-commands_help.lst parttool-help_mod-commands_help.lst video-help_mod-commands_help.lst terminal-help_mod-commands_help.lst

CLEAN_MODULE_TARGETS += clean-module-help_mod-commands_help-extra.1

COMMANDFILES += cmd-help_mod-commands_help.lst
FSFILES += fs-help_mod-commands_help.lst
PARTTOOLFILES += parttool-help_mod-commands_help.lst
PARTMAPFILES += partmap-help_mod-commands_help.lst
HANDLERFILES += handler-help_mod-commands_help.lst
TERMINALFILES += terminal-help_mod-commands_help.lst
VIDEOFILES += video-help_mod-commands_help.lst

cmd-help_mod-commands_help.lst: commands/help.c $(commands/help.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(help_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh help > $@ || (rm -f $@; exit 1)

fs-help_mod-commands_help.lst: commands/help.c $(commands/help.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(help_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh help > $@ || (rm -f $@; exit 1)

parttool-help_mod-commands_help.lst: commands/help.c $(commands/help.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(help_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh help > $@ || (rm -f $@; exit 1)

partmap-help_mod-commands_help.lst: commands/help.c $(commands/help.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(help_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh help > $@ || (rm -f $@; exit 1)

handler-help_mod-commands_help.lst: commands/help.c $(commands/help.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(help_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh help > $@ || (rm -f $@; exit 1)

terminal-help_mod-commands_help.lst: commands/help.c $(commands/help.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(help_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh help > $@ || (rm -f $@; exit 1)

video-help_mod-commands_help.lst: commands/help.c $(commands/help.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(help_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh help > $@ || (rm -f $@; exit 1)

help_mod_CFLAGS = $(COMMON_CFLAGS)
help_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For search.mod.
search_mod_SOURCES = commands/search_wrap.c

clean-module-search.mod.1:
	rm -f search.mod mod-search.o mod-search.c pre-search.o search_mod-commands_search_wrap.o und-search.lst

CLEAN_MODULE_TARGETS += clean-module-search.mod.1

clean-module-search.mod-symbol.1:
	rm -f def-search.lst

CLEAN_MODULE_TARGETS += clean-module-search.mod-symbol.1
DEFSYMFILES += def-search.lst
mostlyclean-module-search.mod.1:
	rm -f search_mod-commands_search_wrap.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-search.mod.1
UNDSYMFILES += und-search.lst

ifeq ($(TARGET_NO_MODULES), yes)
search.mod: pre-search.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(search_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-search.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
search.mod: pre-search.o mod-search.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(search_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-search.o mod-search.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
search.mod: pre-search.o mod-search.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(search_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-search.o mod-search.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-search.o: $(search_mod_DEPENDENCIES) search_mod-commands_search_wrap.o
	-rm -f $@
	$(TARGET_CC) $(search_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ search_mod-commands_search_wrap.o

mod-search.o: mod-search.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(search_mod_CFLAGS) -DGRUB_FILE=\"mod-search.c\" -c -o $@ $<

mod-search.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'search' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-search.lst: pre-search.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 search/' > $@
else
def-search.lst: pre-search.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 search/' > $@
endif

und-search.lst: pre-search.o
	echo 'search' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

search_mod-commands_search_wrap.o: commands/search_wrap.c $(commands/search_wrap.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_mod_CFLAGS) -DGRUB_FILE=\"commands/search_wrap.c\" -MD -c -o $@ $<
-include search_mod-commands_search_wrap.d

clean-module-search_mod-commands_search_wrap-extra.1:
	rm -f cmd-search_mod-commands_search_wrap.lst fs-search_mod-commands_search_wrap.lst partmap-search_mod-commands_search_wrap.lst handler-search_mod-commands_search_wrap.lst parttool-search_mod-commands_search_wrap.lst video-search_mod-commands_search_wrap.lst terminal-search_mod-commands_search_wrap.lst

CLEAN_MODULE_TARGETS += clean-module-search_mod-commands_search_wrap-extra.1

COMMANDFILES += cmd-search_mod-commands_search_wrap.lst
FSFILES += fs-search_mod-commands_search_wrap.lst
PARTTOOLFILES += parttool-search_mod-commands_search_wrap.lst
PARTMAPFILES += partmap-search_mod-commands_search_wrap.lst
HANDLERFILES += handler-search_mod-commands_search_wrap.lst
TERMINALFILES += terminal-search_mod-commands_search_wrap.lst
VIDEOFILES += video-search_mod-commands_search_wrap.lst

cmd-search_mod-commands_search_wrap.lst: commands/search_wrap.c $(commands/search_wrap.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh search > $@ || (rm -f $@; exit 1)

fs-search_mod-commands_search_wrap.lst: commands/search_wrap.c $(commands/search_wrap.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh search > $@ || (rm -f $@; exit 1)

parttool-search_mod-commands_search_wrap.lst: commands/search_wrap.c $(commands/search_wrap.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh search > $@ || (rm -f $@; exit 1)

partmap-search_mod-commands_search_wrap.lst: commands/search_wrap.c $(commands/search_wrap.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh search > $@ || (rm -f $@; exit 1)

handler-search_mod-commands_search_wrap.lst: commands/search_wrap.c $(commands/search_wrap.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh search > $@ || (rm -f $@; exit 1)

terminal-search_mod-commands_search_wrap.lst: commands/search_wrap.c $(commands/search_wrap.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh search > $@ || (rm -f $@; exit 1)

video-search_mod-commands_search_wrap.lst: commands/search_wrap.c $(commands/search_wrap.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh search > $@ || (rm -f $@; exit 1)

search_mod_CFLAGS = $(COMMON_CFLAGS)
search_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += search_fs_file.mod search_fs_uuid.mod search_label.mod

# For search.mod.
search_fs_file_mod_SOURCES = commands/search_file.c

clean-module-search_fs_file.mod.1:
	rm -f search_fs_file.mod mod-search_fs_file.o mod-search_fs_file.c pre-search_fs_file.o search_fs_file_mod-commands_search_file.o und-search_fs_file.lst

CLEAN_MODULE_TARGETS += clean-module-search_fs_file.mod.1

clean-module-search_fs_file.mod-symbol.1:
	rm -f def-search_fs_file.lst

CLEAN_MODULE_TARGETS += clean-module-search_fs_file.mod-symbol.1
DEFSYMFILES += def-search_fs_file.lst
mostlyclean-module-search_fs_file.mod.1:
	rm -f search_fs_file_mod-commands_search_file.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-search_fs_file.mod.1
UNDSYMFILES += und-search_fs_file.lst

ifeq ($(TARGET_NO_MODULES), yes)
search_fs_file.mod: pre-search_fs_file.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(search_fs_file_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-search_fs_file.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
search_fs_file.mod: pre-search_fs_file.o mod-search_fs_file.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(search_fs_file_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-search_fs_file.o mod-search_fs_file.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
search_fs_file.mod: pre-search_fs_file.o mod-search_fs_file.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(search_fs_file_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-search_fs_file.o mod-search_fs_file.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-search_fs_file.o: $(search_fs_file_mod_DEPENDENCIES) search_fs_file_mod-commands_search_file.o
	-rm -f $@
	$(TARGET_CC) $(search_fs_file_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ search_fs_file_mod-commands_search_file.o

mod-search_fs_file.o: mod-search_fs_file.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(search_fs_file_mod_CFLAGS) -DGRUB_FILE=\"mod-search_fs_file.c\" -c -o $@ $<

mod-search_fs_file.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'search_fs_file' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-search_fs_file.lst: pre-search_fs_file.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 search_fs_file/' > $@
else
def-search_fs_file.lst: pre-search_fs_file.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 search_fs_file/' > $@
endif

und-search_fs_file.lst: pre-search_fs_file.o
	echo 'search_fs_file' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

search_fs_file_mod-commands_search_file.o: commands/search_file.c $(commands/search_file.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_file_mod_CFLAGS) -DGRUB_FILE=\"commands/search_file.c\" -MD -c -o $@ $<
-include search_fs_file_mod-commands_search_file.d

clean-module-search_fs_file_mod-commands_search_file-extra.1:
	rm -f cmd-search_fs_file_mod-commands_search_file.lst fs-search_fs_file_mod-commands_search_file.lst partmap-search_fs_file_mod-commands_search_file.lst handler-search_fs_file_mod-commands_search_file.lst parttool-search_fs_file_mod-commands_search_file.lst video-search_fs_file_mod-commands_search_file.lst terminal-search_fs_file_mod-commands_search_file.lst

CLEAN_MODULE_TARGETS += clean-module-search_fs_file_mod-commands_search_file-extra.1

COMMANDFILES += cmd-search_fs_file_mod-commands_search_file.lst
FSFILES += fs-search_fs_file_mod-commands_search_file.lst
PARTTOOLFILES += parttool-search_fs_file_mod-commands_search_file.lst
PARTMAPFILES += partmap-search_fs_file_mod-commands_search_file.lst
HANDLERFILES += handler-search_fs_file_mod-commands_search_file.lst
TERMINALFILES += terminal-search_fs_file_mod-commands_search_file.lst
VIDEOFILES += video-search_fs_file_mod-commands_search_file.lst

cmd-search_fs_file_mod-commands_search_file.lst: commands/search_file.c $(commands/search_file.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_file_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh search_fs_file > $@ || (rm -f $@; exit 1)

fs-search_fs_file_mod-commands_search_file.lst: commands/search_file.c $(commands/search_file.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_fs_file_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh search_fs_file > $@ || (rm -f $@; exit 1)

parttool-search_fs_file_mod-commands_search_file.lst: commands/search_file.c $(commands/search_file.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_file_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh search_fs_file > $@ || (rm -f $@; exit 1)

partmap-search_fs_file_mod-commands_search_file.lst: commands/search_file.c $(commands/search_file.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_fs_file_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh search_fs_file > $@ || (rm -f $@; exit 1)

handler-search_fs_file_mod-commands_search_file.lst: commands/search_file.c $(commands/search_file.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_file_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh search_fs_file > $@ || (rm -f $@; exit 1)

terminal-search_fs_file_mod-commands_search_file.lst: commands/search_file.c $(commands/search_file.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_file_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh search_fs_file > $@ || (rm -f $@; exit 1)

video-search_fs_file_mod-commands_search_file.lst: commands/search_file.c $(commands/search_file.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_fs_file_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh search_fs_file > $@ || (rm -f $@; exit 1)

search_fs_file_mod_CFLAGS = $(COMMON_CFLAGS)
search_fs_file_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For search.mod.
search_label_mod_SOURCES = commands/search_label.c

clean-module-search_label.mod.1:
	rm -f search_label.mod mod-search_label.o mod-search_label.c pre-search_label.o search_label_mod-commands_search_label.o und-search_label.lst

CLEAN_MODULE_TARGETS += clean-module-search_label.mod.1

clean-module-search_label.mod-symbol.1:
	rm -f def-search_label.lst

CLEAN_MODULE_TARGETS += clean-module-search_label.mod-symbol.1
DEFSYMFILES += def-search_label.lst
mostlyclean-module-search_label.mod.1:
	rm -f search_label_mod-commands_search_label.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-search_label.mod.1
UNDSYMFILES += und-search_label.lst

ifeq ($(TARGET_NO_MODULES), yes)
search_label.mod: pre-search_label.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(search_label_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-search_label.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
search_label.mod: pre-search_label.o mod-search_label.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(search_label_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-search_label.o mod-search_label.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
search_label.mod: pre-search_label.o mod-search_label.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(search_label_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-search_label.o mod-search_label.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-search_label.o: $(search_label_mod_DEPENDENCIES) search_label_mod-commands_search_label.o
	-rm -f $@
	$(TARGET_CC) $(search_label_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ search_label_mod-commands_search_label.o

mod-search_label.o: mod-search_label.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(search_label_mod_CFLAGS) -DGRUB_FILE=\"mod-search_label.c\" -c -o $@ $<

mod-search_label.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'search_label' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-search_label.lst: pre-search_label.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 search_label/' > $@
else
def-search_label.lst: pre-search_label.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 search_label/' > $@
endif

und-search_label.lst: pre-search_label.o
	echo 'search_label' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

search_label_mod-commands_search_label.o: commands/search_label.c $(commands/search_label.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_label_mod_CFLAGS) -DGRUB_FILE=\"commands/search_label.c\" -MD -c -o $@ $<
-include search_label_mod-commands_search_label.d

clean-module-search_label_mod-commands_search_label-extra.1:
	rm -f cmd-search_label_mod-commands_search_label.lst fs-search_label_mod-commands_search_label.lst partmap-search_label_mod-commands_search_label.lst handler-search_label_mod-commands_search_label.lst parttool-search_label_mod-commands_search_label.lst video-search_label_mod-commands_search_label.lst terminal-search_label_mod-commands_search_label.lst

CLEAN_MODULE_TARGETS += clean-module-search_label_mod-commands_search_label-extra.1

COMMANDFILES += cmd-search_label_mod-commands_search_label.lst
FSFILES += fs-search_label_mod-commands_search_label.lst
PARTTOOLFILES += parttool-search_label_mod-commands_search_label.lst
PARTMAPFILES += partmap-search_label_mod-commands_search_label.lst
HANDLERFILES += handler-search_label_mod-commands_search_label.lst
TERMINALFILES += terminal-search_label_mod-commands_search_label.lst
VIDEOFILES += video-search_label_mod-commands_search_label.lst

cmd-search_label_mod-commands_search_label.lst: commands/search_label.c $(commands/search_label.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_label_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh search_label > $@ || (rm -f $@; exit 1)

fs-search_label_mod-commands_search_label.lst: commands/search_label.c $(commands/search_label.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_label_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh search_label > $@ || (rm -f $@; exit 1)

parttool-search_label_mod-commands_search_label.lst: commands/search_label.c $(commands/search_label.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_label_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh search_label > $@ || (rm -f $@; exit 1)

partmap-search_label_mod-commands_search_label.lst: commands/search_label.c $(commands/search_label.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_label_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh search_label > $@ || (rm -f $@; exit 1)

handler-search_label_mod-commands_search_label.lst: commands/search_label.c $(commands/search_label.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_label_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh search_label > $@ || (rm -f $@; exit 1)

terminal-search_label_mod-commands_search_label.lst: commands/search_label.c $(commands/search_label.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_label_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh search_label > $@ || (rm -f $@; exit 1)

video-search_label_mod-commands_search_label.lst: commands/search_label.c $(commands/search_label.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_label_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh search_label > $@ || (rm -f $@; exit 1)

search_label_mod_CFLAGS = $(COMMON_CFLAGS)
search_label_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For search.mod.
search_fs_uuid_mod_SOURCES = commands/search_uuid.c

clean-module-search_fs_uuid.mod.1:
	rm -f search_fs_uuid.mod mod-search_fs_uuid.o mod-search_fs_uuid.c pre-search_fs_uuid.o search_fs_uuid_mod-commands_search_uuid.o und-search_fs_uuid.lst

CLEAN_MODULE_TARGETS += clean-module-search_fs_uuid.mod.1

clean-module-search_fs_uuid.mod-symbol.1:
	rm -f def-search_fs_uuid.lst

CLEAN_MODULE_TARGETS += clean-module-search_fs_uuid.mod-symbol.1
DEFSYMFILES += def-search_fs_uuid.lst
mostlyclean-module-search_fs_uuid.mod.1:
	rm -f search_fs_uuid_mod-commands_search_uuid.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-search_fs_uuid.mod.1
UNDSYMFILES += und-search_fs_uuid.lst

ifeq ($(TARGET_NO_MODULES), yes)
search_fs_uuid.mod: pre-search_fs_uuid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(search_fs_uuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-search_fs_uuid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
search_fs_uuid.mod: pre-search_fs_uuid.o mod-search_fs_uuid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(search_fs_uuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-search_fs_uuid.o mod-search_fs_uuid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
search_fs_uuid.mod: pre-search_fs_uuid.o mod-search_fs_uuid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(search_fs_uuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-search_fs_uuid.o mod-search_fs_uuid.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-search_fs_uuid.o: $(search_fs_uuid_mod_DEPENDENCIES) search_fs_uuid_mod-commands_search_uuid.o
	-rm -f $@
	$(TARGET_CC) $(search_fs_uuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ search_fs_uuid_mod-commands_search_uuid.o

mod-search_fs_uuid.o: mod-search_fs_uuid.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(search_fs_uuid_mod_CFLAGS) -DGRUB_FILE=\"mod-search_fs_uuid.c\" -c -o $@ $<

mod-search_fs_uuid.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'search_fs_uuid' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-search_fs_uuid.lst: pre-search_fs_uuid.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 search_fs_uuid/' > $@
else
def-search_fs_uuid.lst: pre-search_fs_uuid.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 search_fs_uuid/' > $@
endif

und-search_fs_uuid.lst: pre-search_fs_uuid.o
	echo 'search_fs_uuid' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

search_fs_uuid_mod-commands_search_uuid.o: commands/search_uuid.c $(commands/search_uuid.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_uuid_mod_CFLAGS) -DGRUB_FILE=\"commands/search_uuid.c\" -MD -c -o $@ $<
-include search_fs_uuid_mod-commands_search_uuid.d

clean-module-search_fs_uuid_mod-commands_search_uuid-extra.1:
	rm -f cmd-search_fs_uuid_mod-commands_search_uuid.lst fs-search_fs_uuid_mod-commands_search_uuid.lst partmap-search_fs_uuid_mod-commands_search_uuid.lst handler-search_fs_uuid_mod-commands_search_uuid.lst parttool-search_fs_uuid_mod-commands_search_uuid.lst video-search_fs_uuid_mod-commands_search_uuid.lst terminal-search_fs_uuid_mod-commands_search_uuid.lst

CLEAN_MODULE_TARGETS += clean-module-search_fs_uuid_mod-commands_search_uuid-extra.1

COMMANDFILES += cmd-search_fs_uuid_mod-commands_search_uuid.lst
FSFILES += fs-search_fs_uuid_mod-commands_search_uuid.lst
PARTTOOLFILES += parttool-search_fs_uuid_mod-commands_search_uuid.lst
PARTMAPFILES += partmap-search_fs_uuid_mod-commands_search_uuid.lst
HANDLERFILES += handler-search_fs_uuid_mod-commands_search_uuid.lst
TERMINALFILES += terminal-search_fs_uuid_mod-commands_search_uuid.lst
VIDEOFILES += video-search_fs_uuid_mod-commands_search_uuid.lst

cmd-search_fs_uuid_mod-commands_search_uuid.lst: commands/search_uuid.c $(commands/search_uuid.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh search_fs_uuid > $@ || (rm -f $@; exit 1)

fs-search_fs_uuid_mod-commands_search_uuid.lst: commands/search_uuid.c $(commands/search_uuid.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_fs_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh search_fs_uuid > $@ || (rm -f $@; exit 1)

parttool-search_fs_uuid_mod-commands_search_uuid.lst: commands/search_uuid.c $(commands/search_uuid.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh search_fs_uuid > $@ || (rm -f $@; exit 1)

partmap-search_fs_uuid_mod-commands_search_uuid.lst: commands/search_uuid.c $(commands/search_uuid.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_fs_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh search_fs_uuid > $@ || (rm -f $@; exit 1)

handler-search_fs_uuid_mod-commands_search_uuid.lst: commands/search_uuid.c $(commands/search_uuid.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh search_fs_uuid > $@ || (rm -f $@; exit 1)

terminal-search_fs_uuid_mod-commands_search_uuid.lst: commands/search_uuid.c $(commands/search_uuid.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(search_fs_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh search_fs_uuid > $@ || (rm -f $@; exit 1)

video-search_fs_uuid_mod-commands_search_uuid.lst: commands/search_uuid.c $(commands/search_uuid.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(search_fs_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh search_fs_uuid > $@ || (rm -f $@; exit 1)

search_fs_uuid_mod_CFLAGS = $(COMMON_CFLAGS)
search_fs_uuid_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For test.mod.
test_mod_SOURCES = commands/test.c

clean-module-test.mod.1:
	rm -f test.mod mod-test.o mod-test.c pre-test.o test_mod-commands_test.o und-test.lst

CLEAN_MODULE_TARGETS += clean-module-test.mod.1

clean-module-test.mod-symbol.1:
	rm -f def-test.lst

CLEAN_MODULE_TARGETS += clean-module-test.mod-symbol.1
DEFSYMFILES += def-test.lst
mostlyclean-module-test.mod.1:
	rm -f test_mod-commands_test.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-test.mod.1
UNDSYMFILES += und-test.lst

ifeq ($(TARGET_NO_MODULES), yes)
test.mod: pre-test.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(test_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-test.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
test.mod: pre-test.o mod-test.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(test_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-test.o mod-test.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
test.mod: pre-test.o mod-test.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(test_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-test.o mod-test.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-test.o: $(test_mod_DEPENDENCIES) test_mod-commands_test.o
	-rm -f $@
	$(TARGET_CC) $(test_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ test_mod-commands_test.o

mod-test.o: mod-test.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(test_mod_CFLAGS) -DGRUB_FILE=\"mod-test.c\" -c -o $@ $<

mod-test.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'test' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-test.lst: pre-test.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 test/' > $@
else
def-test.lst: pre-test.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 test/' > $@
endif

und-test.lst: pre-test.o
	echo 'test' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

test_mod-commands_test.o: commands/test.c $(commands/test.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(test_mod_CFLAGS) -DGRUB_FILE=\"commands/test.c\" -MD -c -o $@ $<
-include test_mod-commands_test.d

clean-module-test_mod-commands_test-extra.1:
	rm -f cmd-test_mod-commands_test.lst fs-test_mod-commands_test.lst partmap-test_mod-commands_test.lst handler-test_mod-commands_test.lst parttool-test_mod-commands_test.lst video-test_mod-commands_test.lst terminal-test_mod-commands_test.lst

CLEAN_MODULE_TARGETS += clean-module-test_mod-commands_test-extra.1

COMMANDFILES += cmd-test_mod-commands_test.lst
FSFILES += fs-test_mod-commands_test.lst
PARTTOOLFILES += parttool-test_mod-commands_test.lst
PARTMAPFILES += partmap-test_mod-commands_test.lst
HANDLERFILES += handler-test_mod-commands_test.lst
TERMINALFILES += terminal-test_mod-commands_test.lst
VIDEOFILES += video-test_mod-commands_test.lst

cmd-test_mod-commands_test.lst: commands/test.c $(commands/test.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(test_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh test > $@ || (rm -f $@; exit 1)

fs-test_mod-commands_test.lst: commands/test.c $(commands/test.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(test_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh test > $@ || (rm -f $@; exit 1)

parttool-test_mod-commands_test.lst: commands/test.c $(commands/test.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(test_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh test > $@ || (rm -f $@; exit 1)

partmap-test_mod-commands_test.lst: commands/test.c $(commands/test.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(test_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh test > $@ || (rm -f $@; exit 1)

handler-test_mod-commands_test.lst: commands/test.c $(commands/test.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(test_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh test > $@ || (rm -f $@; exit 1)

terminal-test_mod-commands_test.lst: commands/test.c $(commands/test.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(test_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh test > $@ || (rm -f $@; exit 1)

video-test_mod-commands_test.lst: commands/test.c $(commands/test.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(test_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh test > $@ || (rm -f $@; exit 1)

test_mod_CFLAGS = $(COMMON_CFLAGS)
test_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For loopback.mod
loopback_mod_SOURCES = disk/loopback.c

clean-module-loopback.mod.1:
	rm -f loopback.mod mod-loopback.o mod-loopback.c pre-loopback.o loopback_mod-disk_loopback.o und-loopback.lst

CLEAN_MODULE_TARGETS += clean-module-loopback.mod.1

clean-module-loopback.mod-symbol.1:
	rm -f def-loopback.lst

CLEAN_MODULE_TARGETS += clean-module-loopback.mod-symbol.1
DEFSYMFILES += def-loopback.lst
mostlyclean-module-loopback.mod.1:
	rm -f loopback_mod-disk_loopback.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-loopback.mod.1
UNDSYMFILES += und-loopback.lst

ifeq ($(TARGET_NO_MODULES), yes)
loopback.mod: pre-loopback.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(loopback_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-loopback.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
loopback.mod: pre-loopback.o mod-loopback.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(loopback_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-loopback.o mod-loopback.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
loopback.mod: pre-loopback.o mod-loopback.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(loopback_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-loopback.o mod-loopback.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-loopback.o: $(loopback_mod_DEPENDENCIES) loopback_mod-disk_loopback.o
	-rm -f $@
	$(TARGET_CC) $(loopback_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ loopback_mod-disk_loopback.o

mod-loopback.o: mod-loopback.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(loopback_mod_CFLAGS) -DGRUB_FILE=\"mod-loopback.c\" -c -o $@ $<

mod-loopback.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'loopback' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-loopback.lst: pre-loopback.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 loopback/' > $@
else
def-loopback.lst: pre-loopback.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 loopback/' > $@
endif

und-loopback.lst: pre-loopback.o
	echo 'loopback' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

loopback_mod-disk_loopback.o: disk/loopback.c $(disk/loopback.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loopback_mod_CFLAGS) -DGRUB_FILE=\"disk/loopback.c\" -MD -c -o $@ $<
-include loopback_mod-disk_loopback.d

clean-module-loopback_mod-disk_loopback-extra.1:
	rm -f cmd-loopback_mod-disk_loopback.lst fs-loopback_mod-disk_loopback.lst partmap-loopback_mod-disk_loopback.lst handler-loopback_mod-disk_loopback.lst parttool-loopback_mod-disk_loopback.lst video-loopback_mod-disk_loopback.lst terminal-loopback_mod-disk_loopback.lst

CLEAN_MODULE_TARGETS += clean-module-loopback_mod-disk_loopback-extra.1

COMMANDFILES += cmd-loopback_mod-disk_loopback.lst
FSFILES += fs-loopback_mod-disk_loopback.lst
PARTTOOLFILES += parttool-loopback_mod-disk_loopback.lst
PARTMAPFILES += partmap-loopback_mod-disk_loopback.lst
HANDLERFILES += handler-loopback_mod-disk_loopback.lst
TERMINALFILES += terminal-loopback_mod-disk_loopback.lst
VIDEOFILES += video-loopback_mod-disk_loopback.lst

cmd-loopback_mod-disk_loopback.lst: disk/loopback.c $(disk/loopback.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loopback_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh loopback > $@ || (rm -f $@; exit 1)

fs-loopback_mod-disk_loopback.lst: disk/loopback.c $(disk/loopback.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loopback_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh loopback > $@ || (rm -f $@; exit 1)

parttool-loopback_mod-disk_loopback.lst: disk/loopback.c $(disk/loopback.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loopback_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh loopback > $@ || (rm -f $@; exit 1)

partmap-loopback_mod-disk_loopback.lst: disk/loopback.c $(disk/loopback.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loopback_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh loopback > $@ || (rm -f $@; exit 1)

handler-loopback_mod-disk_loopback.lst: disk/loopback.c $(disk/loopback.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loopback_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh loopback > $@ || (rm -f $@; exit 1)

terminal-loopback_mod-disk_loopback.lst: disk/loopback.c $(disk/loopback.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loopback_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh loopback > $@ || (rm -f $@; exit 1)

video-loopback_mod-disk_loopback.lst: disk/loopback.c $(disk/loopback.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loopback_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh loopback > $@ || (rm -f $@; exit 1)

loopback_mod_CFLAGS = $(COMMON_CFLAGS)
loopback_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For configfile.mod
configfile_mod_SOURCES = commands/configfile.c

clean-module-configfile.mod.1:
	rm -f configfile.mod mod-configfile.o mod-configfile.c pre-configfile.o configfile_mod-commands_configfile.o und-configfile.lst

CLEAN_MODULE_TARGETS += clean-module-configfile.mod.1

clean-module-configfile.mod-symbol.1:
	rm -f def-configfile.lst

CLEAN_MODULE_TARGETS += clean-module-configfile.mod-symbol.1
DEFSYMFILES += def-configfile.lst
mostlyclean-module-configfile.mod.1:
	rm -f configfile_mod-commands_configfile.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-configfile.mod.1
UNDSYMFILES += und-configfile.lst

ifeq ($(TARGET_NO_MODULES), yes)
configfile.mod: pre-configfile.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(configfile_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-configfile.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
configfile.mod: pre-configfile.o mod-configfile.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(configfile_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-configfile.o mod-configfile.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
configfile.mod: pre-configfile.o mod-configfile.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(configfile_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-configfile.o mod-configfile.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-configfile.o: $(configfile_mod_DEPENDENCIES) configfile_mod-commands_configfile.o
	-rm -f $@
	$(TARGET_CC) $(configfile_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ configfile_mod-commands_configfile.o

mod-configfile.o: mod-configfile.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(configfile_mod_CFLAGS) -DGRUB_FILE=\"mod-configfile.c\" -c -o $@ $<

mod-configfile.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'configfile' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-configfile.lst: pre-configfile.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 configfile/' > $@
else
def-configfile.lst: pre-configfile.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 configfile/' > $@
endif

und-configfile.lst: pre-configfile.o
	echo 'configfile' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

configfile_mod-commands_configfile.o: commands/configfile.c $(commands/configfile.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(configfile_mod_CFLAGS) -DGRUB_FILE=\"commands/configfile.c\" -MD -c -o $@ $<
-include configfile_mod-commands_configfile.d

clean-module-configfile_mod-commands_configfile-extra.1:
	rm -f cmd-configfile_mod-commands_configfile.lst fs-configfile_mod-commands_configfile.lst partmap-configfile_mod-commands_configfile.lst handler-configfile_mod-commands_configfile.lst parttool-configfile_mod-commands_configfile.lst video-configfile_mod-commands_configfile.lst terminal-configfile_mod-commands_configfile.lst

CLEAN_MODULE_TARGETS += clean-module-configfile_mod-commands_configfile-extra.1

COMMANDFILES += cmd-configfile_mod-commands_configfile.lst
FSFILES += fs-configfile_mod-commands_configfile.lst
PARTTOOLFILES += parttool-configfile_mod-commands_configfile.lst
PARTMAPFILES += partmap-configfile_mod-commands_configfile.lst
HANDLERFILES += handler-configfile_mod-commands_configfile.lst
TERMINALFILES += terminal-configfile_mod-commands_configfile.lst
VIDEOFILES += video-configfile_mod-commands_configfile.lst

cmd-configfile_mod-commands_configfile.lst: commands/configfile.c $(commands/configfile.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(configfile_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh configfile > $@ || (rm -f $@; exit 1)

fs-configfile_mod-commands_configfile.lst: commands/configfile.c $(commands/configfile.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(configfile_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh configfile > $@ || (rm -f $@; exit 1)

parttool-configfile_mod-commands_configfile.lst: commands/configfile.c $(commands/configfile.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(configfile_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh configfile > $@ || (rm -f $@; exit 1)

partmap-configfile_mod-commands_configfile.lst: commands/configfile.c $(commands/configfile.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(configfile_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh configfile > $@ || (rm -f $@; exit 1)

handler-configfile_mod-commands_configfile.lst: commands/configfile.c $(commands/configfile.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(configfile_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh configfile > $@ || (rm -f $@; exit 1)

terminal-configfile_mod-commands_configfile.lst: commands/configfile.c $(commands/configfile.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(configfile_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh configfile > $@ || (rm -f $@; exit 1)

video-configfile_mod-commands_configfile.lst: commands/configfile.c $(commands/configfile.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(configfile_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh configfile > $@ || (rm -f $@; exit 1)

configfile_mod_CFLAGS = $(COMMON_CFLAGS)
configfile_mod_LDFLAGS = $(COMMON_LDFLAGS)

ifneq ($(platform), ieee1275)
# For terminfo.mod.
pkglib_MODULES += terminfo.mod
terminfo_mod_SOURCES = term/terminfo.c term/tparm.c

clean-module-terminfo.mod.1:
	rm -f terminfo.mod mod-terminfo.o mod-terminfo.c pre-terminfo.o terminfo_mod-term_terminfo.o terminfo_mod-term_tparm.o und-terminfo.lst

CLEAN_MODULE_TARGETS += clean-module-terminfo.mod.1

clean-module-terminfo.mod-symbol.1:
	rm -f def-terminfo.lst

CLEAN_MODULE_TARGETS += clean-module-terminfo.mod-symbol.1
DEFSYMFILES += def-terminfo.lst
mostlyclean-module-terminfo.mod.1:
	rm -f terminfo_mod-term_terminfo.d terminfo_mod-term_tparm.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-terminfo.mod.1
UNDSYMFILES += und-terminfo.lst

ifeq ($(TARGET_NO_MODULES), yes)
terminfo.mod: pre-terminfo.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(terminfo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-terminfo.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
terminfo.mod: pre-terminfo.o mod-terminfo.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(terminfo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-terminfo.o mod-terminfo.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
terminfo.mod: pre-terminfo.o mod-terminfo.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(terminfo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-terminfo.o mod-terminfo.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-terminfo.o: $(terminfo_mod_DEPENDENCIES) terminfo_mod-term_terminfo.o terminfo_mod-term_tparm.o
	-rm -f $@
	$(TARGET_CC) $(terminfo_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ terminfo_mod-term_terminfo.o terminfo_mod-term_tparm.o

mod-terminfo.o: mod-terminfo.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -DGRUB_FILE=\"mod-terminfo.c\" -c -o $@ $<

mod-terminfo.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'terminfo' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-terminfo.lst: pre-terminfo.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 terminfo/' > $@
else
def-terminfo.lst: pre-terminfo.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 terminfo/' > $@
endif

und-terminfo.lst: pre-terminfo.o
	echo 'terminfo' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

terminfo_mod-term_terminfo.o: term/terminfo.c $(term/terminfo.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -DGRUB_FILE=\"term/terminfo.c\" -MD -c -o $@ $<
-include terminfo_mod-term_terminfo.d

clean-module-terminfo_mod-term_terminfo-extra.1:
	rm -f cmd-terminfo_mod-term_terminfo.lst fs-terminfo_mod-term_terminfo.lst partmap-terminfo_mod-term_terminfo.lst handler-terminfo_mod-term_terminfo.lst parttool-terminfo_mod-term_terminfo.lst video-terminfo_mod-term_terminfo.lst terminal-terminfo_mod-term_terminfo.lst

CLEAN_MODULE_TARGETS += clean-module-terminfo_mod-term_terminfo-extra.1

COMMANDFILES += cmd-terminfo_mod-term_terminfo.lst
FSFILES += fs-terminfo_mod-term_terminfo.lst
PARTTOOLFILES += parttool-terminfo_mod-term_terminfo.lst
PARTMAPFILES += partmap-terminfo_mod-term_terminfo.lst
HANDLERFILES += handler-terminfo_mod-term_terminfo.lst
TERMINALFILES += terminal-terminfo_mod-term_terminfo.lst
VIDEOFILES += video-terminfo_mod-term_terminfo.lst

cmd-terminfo_mod-term_terminfo.lst: term/terminfo.c $(term/terminfo.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh terminfo > $@ || (rm -f $@; exit 1)

fs-terminfo_mod-term_terminfo.lst: term/terminfo.c $(term/terminfo.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh terminfo > $@ || (rm -f $@; exit 1)

parttool-terminfo_mod-term_terminfo.lst: term/terminfo.c $(term/terminfo.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh terminfo > $@ || (rm -f $@; exit 1)

partmap-terminfo_mod-term_terminfo.lst: term/terminfo.c $(term/terminfo.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh terminfo > $@ || (rm -f $@; exit 1)

handler-terminfo_mod-term_terminfo.lst: term/terminfo.c $(term/terminfo.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh terminfo > $@ || (rm -f $@; exit 1)

terminal-terminfo_mod-term_terminfo.lst: term/terminfo.c $(term/terminfo.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh terminfo > $@ || (rm -f $@; exit 1)

video-terminfo_mod-term_terminfo.lst: term/terminfo.c $(term/terminfo.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh terminfo > $@ || (rm -f $@; exit 1)

terminfo_mod-term_tparm.o: term/tparm.c $(term/tparm.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -DGRUB_FILE=\"term/tparm.c\" -MD -c -o $@ $<
-include terminfo_mod-term_tparm.d

clean-module-terminfo_mod-term_tparm-extra.1:
	rm -f cmd-terminfo_mod-term_tparm.lst fs-terminfo_mod-term_tparm.lst partmap-terminfo_mod-term_tparm.lst handler-terminfo_mod-term_tparm.lst parttool-terminfo_mod-term_tparm.lst video-terminfo_mod-term_tparm.lst terminal-terminfo_mod-term_tparm.lst

CLEAN_MODULE_TARGETS += clean-module-terminfo_mod-term_tparm-extra.1

COMMANDFILES += cmd-terminfo_mod-term_tparm.lst
FSFILES += fs-terminfo_mod-term_tparm.lst
PARTTOOLFILES += parttool-terminfo_mod-term_tparm.lst
PARTMAPFILES += partmap-terminfo_mod-term_tparm.lst
HANDLERFILES += handler-terminfo_mod-term_tparm.lst
TERMINALFILES += terminal-terminfo_mod-term_tparm.lst
VIDEOFILES += video-terminfo_mod-term_tparm.lst

cmd-terminfo_mod-term_tparm.lst: term/tparm.c $(term/tparm.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh terminfo > $@ || (rm -f $@; exit 1)

fs-terminfo_mod-term_tparm.lst: term/tparm.c $(term/tparm.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh terminfo > $@ || (rm -f $@; exit 1)

parttool-terminfo_mod-term_tparm.lst: term/tparm.c $(term/tparm.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh terminfo > $@ || (rm -f $@; exit 1)

partmap-terminfo_mod-term_tparm.lst: term/tparm.c $(term/tparm.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh terminfo > $@ || (rm -f $@; exit 1)

handler-terminfo_mod-term_tparm.lst: term/tparm.c $(term/tparm.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh terminfo > $@ || (rm -f $@; exit 1)

terminal-terminfo_mod-term_tparm.lst: term/tparm.c $(term/tparm.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh terminfo > $@ || (rm -f $@; exit 1)

video-terminfo_mod-term_tparm.lst: term/tparm.c $(term/tparm.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(terminfo_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh terminfo > $@ || (rm -f $@; exit 1)

terminfo_mod_CFLAGS = $(COMMON_CFLAGS)
terminfo_mod_LDFLAGS = $(COMMON_LDFLAGS)
endif

# For blocklist.mod.
blocklist_mod_SOURCES = commands/blocklist.c

clean-module-blocklist.mod.1:
	rm -f blocklist.mod mod-blocklist.o mod-blocklist.c pre-blocklist.o blocklist_mod-commands_blocklist.o und-blocklist.lst

CLEAN_MODULE_TARGETS += clean-module-blocklist.mod.1

clean-module-blocklist.mod-symbol.1:
	rm -f def-blocklist.lst

CLEAN_MODULE_TARGETS += clean-module-blocklist.mod-symbol.1
DEFSYMFILES += def-blocklist.lst
mostlyclean-module-blocklist.mod.1:
	rm -f blocklist_mod-commands_blocklist.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-blocklist.mod.1
UNDSYMFILES += und-blocklist.lst

ifeq ($(TARGET_NO_MODULES), yes)
blocklist.mod: pre-blocklist.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(blocklist_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-blocklist.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
blocklist.mod: pre-blocklist.o mod-blocklist.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(blocklist_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-blocklist.o mod-blocklist.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
blocklist.mod: pre-blocklist.o mod-blocklist.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(blocklist_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-blocklist.o mod-blocklist.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-blocklist.o: $(blocklist_mod_DEPENDENCIES) blocklist_mod-commands_blocklist.o
	-rm -f $@
	$(TARGET_CC) $(blocklist_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ blocklist_mod-commands_blocklist.o

mod-blocklist.o: mod-blocklist.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(blocklist_mod_CFLAGS) -DGRUB_FILE=\"mod-blocklist.c\" -c -o $@ $<

mod-blocklist.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'blocklist' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-blocklist.lst: pre-blocklist.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 blocklist/' > $@
else
def-blocklist.lst: pre-blocklist.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 blocklist/' > $@
endif

und-blocklist.lst: pre-blocklist.o
	echo 'blocklist' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

blocklist_mod-commands_blocklist.o: commands/blocklist.c $(commands/blocklist.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(blocklist_mod_CFLAGS) -DGRUB_FILE=\"commands/blocklist.c\" -MD -c -o $@ $<
-include blocklist_mod-commands_blocklist.d

clean-module-blocklist_mod-commands_blocklist-extra.1:
	rm -f cmd-blocklist_mod-commands_blocklist.lst fs-blocklist_mod-commands_blocklist.lst partmap-blocklist_mod-commands_blocklist.lst handler-blocklist_mod-commands_blocklist.lst parttool-blocklist_mod-commands_blocklist.lst video-blocklist_mod-commands_blocklist.lst terminal-blocklist_mod-commands_blocklist.lst

CLEAN_MODULE_TARGETS += clean-module-blocklist_mod-commands_blocklist-extra.1

COMMANDFILES += cmd-blocklist_mod-commands_blocklist.lst
FSFILES += fs-blocklist_mod-commands_blocklist.lst
PARTTOOLFILES += parttool-blocklist_mod-commands_blocklist.lst
PARTMAPFILES += partmap-blocklist_mod-commands_blocklist.lst
HANDLERFILES += handler-blocklist_mod-commands_blocklist.lst
TERMINALFILES += terminal-blocklist_mod-commands_blocklist.lst
VIDEOFILES += video-blocklist_mod-commands_blocklist.lst

cmd-blocklist_mod-commands_blocklist.lst: commands/blocklist.c $(commands/blocklist.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(blocklist_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh blocklist > $@ || (rm -f $@; exit 1)

fs-blocklist_mod-commands_blocklist.lst: commands/blocklist.c $(commands/blocklist.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(blocklist_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh blocklist > $@ || (rm -f $@; exit 1)

parttool-blocklist_mod-commands_blocklist.lst: commands/blocklist.c $(commands/blocklist.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(blocklist_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh blocklist > $@ || (rm -f $@; exit 1)

partmap-blocklist_mod-commands_blocklist.lst: commands/blocklist.c $(commands/blocklist.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(blocklist_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh blocklist > $@ || (rm -f $@; exit 1)

handler-blocklist_mod-commands_blocklist.lst: commands/blocklist.c $(commands/blocklist.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(blocklist_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh blocklist > $@ || (rm -f $@; exit 1)

terminal-blocklist_mod-commands_blocklist.lst: commands/blocklist.c $(commands/blocklist.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(blocklist_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh blocklist > $@ || (rm -f $@; exit 1)

video-blocklist_mod-commands_blocklist.lst: commands/blocklist.c $(commands/blocklist.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(blocklist_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh blocklist > $@ || (rm -f $@; exit 1)

blocklist_mod_CFLAGS = $(COMMON_CFLAGS)
blocklist_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For hexdump.mod.
hexdump_mod_SOURCES = commands/hexdump.c lib/hexdump.c

clean-module-hexdump.mod.1:
	rm -f hexdump.mod mod-hexdump.o mod-hexdump.c pre-hexdump.o hexdump_mod-commands_hexdump.o hexdump_mod-lib_hexdump.o und-hexdump.lst

CLEAN_MODULE_TARGETS += clean-module-hexdump.mod.1

clean-module-hexdump.mod-symbol.1:
	rm -f def-hexdump.lst

CLEAN_MODULE_TARGETS += clean-module-hexdump.mod-symbol.1
DEFSYMFILES += def-hexdump.lst
mostlyclean-module-hexdump.mod.1:
	rm -f hexdump_mod-commands_hexdump.d hexdump_mod-lib_hexdump.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-hexdump.mod.1
UNDSYMFILES += und-hexdump.lst

ifeq ($(TARGET_NO_MODULES), yes)
hexdump.mod: pre-hexdump.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hexdump_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hexdump.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
hexdump.mod: pre-hexdump.o mod-hexdump.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hexdump_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hexdump.o mod-hexdump.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
hexdump.mod: pre-hexdump.o mod-hexdump.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(hexdump_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-hexdump.o mod-hexdump.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-hexdump.o: $(hexdump_mod_DEPENDENCIES) hexdump_mod-commands_hexdump.o hexdump_mod-lib_hexdump.o
	-rm -f $@
	$(TARGET_CC) $(hexdump_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ hexdump_mod-commands_hexdump.o hexdump_mod-lib_hexdump.o

mod-hexdump.o: mod-hexdump.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -DGRUB_FILE=\"mod-hexdump.c\" -c -o $@ $<

mod-hexdump.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'hexdump' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-hexdump.lst: pre-hexdump.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 hexdump/' > $@
else
def-hexdump.lst: pre-hexdump.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 hexdump/' > $@
endif

und-hexdump.lst: pre-hexdump.o
	echo 'hexdump' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

hexdump_mod-commands_hexdump.o: commands/hexdump.c $(commands/hexdump.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -DGRUB_FILE=\"commands/hexdump.c\" -MD -c -o $@ $<
-include hexdump_mod-commands_hexdump.d

clean-module-hexdump_mod-commands_hexdump-extra.1:
	rm -f cmd-hexdump_mod-commands_hexdump.lst fs-hexdump_mod-commands_hexdump.lst partmap-hexdump_mod-commands_hexdump.lst handler-hexdump_mod-commands_hexdump.lst parttool-hexdump_mod-commands_hexdump.lst video-hexdump_mod-commands_hexdump.lst terminal-hexdump_mod-commands_hexdump.lst

CLEAN_MODULE_TARGETS += clean-module-hexdump_mod-commands_hexdump-extra.1

COMMANDFILES += cmd-hexdump_mod-commands_hexdump.lst
FSFILES += fs-hexdump_mod-commands_hexdump.lst
PARTTOOLFILES += parttool-hexdump_mod-commands_hexdump.lst
PARTMAPFILES += partmap-hexdump_mod-commands_hexdump.lst
HANDLERFILES += handler-hexdump_mod-commands_hexdump.lst
TERMINALFILES += terminal-hexdump_mod-commands_hexdump.lst
VIDEOFILES += video-hexdump_mod-commands_hexdump.lst

cmd-hexdump_mod-commands_hexdump.lst: commands/hexdump.c $(commands/hexdump.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh hexdump > $@ || (rm -f $@; exit 1)

fs-hexdump_mod-commands_hexdump.lst: commands/hexdump.c $(commands/hexdump.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh hexdump > $@ || (rm -f $@; exit 1)

parttool-hexdump_mod-commands_hexdump.lst: commands/hexdump.c $(commands/hexdump.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh hexdump > $@ || (rm -f $@; exit 1)

partmap-hexdump_mod-commands_hexdump.lst: commands/hexdump.c $(commands/hexdump.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh hexdump > $@ || (rm -f $@; exit 1)

handler-hexdump_mod-commands_hexdump.lst: commands/hexdump.c $(commands/hexdump.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh hexdump > $@ || (rm -f $@; exit 1)

terminal-hexdump_mod-commands_hexdump.lst: commands/hexdump.c $(commands/hexdump.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh hexdump > $@ || (rm -f $@; exit 1)

video-hexdump_mod-commands_hexdump.lst: commands/hexdump.c $(commands/hexdump.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh hexdump > $@ || (rm -f $@; exit 1)

hexdump_mod-lib_hexdump.o: lib/hexdump.c $(lib/hexdump.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -DGRUB_FILE=\"lib/hexdump.c\" -MD -c -o $@ $<
-include hexdump_mod-lib_hexdump.d

clean-module-hexdump_mod-lib_hexdump-extra.1:
	rm -f cmd-hexdump_mod-lib_hexdump.lst fs-hexdump_mod-lib_hexdump.lst partmap-hexdump_mod-lib_hexdump.lst handler-hexdump_mod-lib_hexdump.lst parttool-hexdump_mod-lib_hexdump.lst video-hexdump_mod-lib_hexdump.lst terminal-hexdump_mod-lib_hexdump.lst

CLEAN_MODULE_TARGETS += clean-module-hexdump_mod-lib_hexdump-extra.1

COMMANDFILES += cmd-hexdump_mod-lib_hexdump.lst
FSFILES += fs-hexdump_mod-lib_hexdump.lst
PARTTOOLFILES += parttool-hexdump_mod-lib_hexdump.lst
PARTMAPFILES += partmap-hexdump_mod-lib_hexdump.lst
HANDLERFILES += handler-hexdump_mod-lib_hexdump.lst
TERMINALFILES += terminal-hexdump_mod-lib_hexdump.lst
VIDEOFILES += video-hexdump_mod-lib_hexdump.lst

cmd-hexdump_mod-lib_hexdump.lst: lib/hexdump.c $(lib/hexdump.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh hexdump > $@ || (rm -f $@; exit 1)

fs-hexdump_mod-lib_hexdump.lst: lib/hexdump.c $(lib/hexdump.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh hexdump > $@ || (rm -f $@; exit 1)

parttool-hexdump_mod-lib_hexdump.lst: lib/hexdump.c $(lib/hexdump.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh hexdump > $@ || (rm -f $@; exit 1)

partmap-hexdump_mod-lib_hexdump.lst: lib/hexdump.c $(lib/hexdump.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh hexdump > $@ || (rm -f $@; exit 1)

handler-hexdump_mod-lib_hexdump.lst: lib/hexdump.c $(lib/hexdump.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh hexdump > $@ || (rm -f $@; exit 1)

terminal-hexdump_mod-lib_hexdump.lst: lib/hexdump.c $(lib/hexdump.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh hexdump > $@ || (rm -f $@; exit 1)

video-hexdump_mod-lib_hexdump.lst: lib/hexdump.c $(lib/hexdump.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hexdump_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh hexdump > $@ || (rm -f $@; exit 1)

hexdump_mod_CFLAGS = $(COMMON_CFLAGS)
hexdump_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For read.mod.
read_mod_SOURCES = commands/read.c

clean-module-read.mod.1:
	rm -f read.mod mod-read.o mod-read.c pre-read.o read_mod-commands_read.o und-read.lst

CLEAN_MODULE_TARGETS += clean-module-read.mod.1

clean-module-read.mod-symbol.1:
	rm -f def-read.lst

CLEAN_MODULE_TARGETS += clean-module-read.mod-symbol.1
DEFSYMFILES += def-read.lst
mostlyclean-module-read.mod.1:
	rm -f read_mod-commands_read.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-read.mod.1
UNDSYMFILES += und-read.lst

ifeq ($(TARGET_NO_MODULES), yes)
read.mod: pre-read.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(read_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-read.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
read.mod: pre-read.o mod-read.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(read_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-read.o mod-read.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
read.mod: pre-read.o mod-read.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(read_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-read.o mod-read.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-read.o: $(read_mod_DEPENDENCIES) read_mod-commands_read.o
	-rm -f $@
	$(TARGET_CC) $(read_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ read_mod-commands_read.o

mod-read.o: mod-read.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(read_mod_CFLAGS) -DGRUB_FILE=\"mod-read.c\" -c -o $@ $<

mod-read.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'read' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-read.lst: pre-read.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 read/' > $@
else
def-read.lst: pre-read.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 read/' > $@
endif

und-read.lst: pre-read.o
	echo 'read' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

read_mod-commands_read.o: commands/read.c $(commands/read.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(read_mod_CFLAGS) -DGRUB_FILE=\"commands/read.c\" -MD -c -o $@ $<
-include read_mod-commands_read.d

clean-module-read_mod-commands_read-extra.1:
	rm -f cmd-read_mod-commands_read.lst fs-read_mod-commands_read.lst partmap-read_mod-commands_read.lst handler-read_mod-commands_read.lst parttool-read_mod-commands_read.lst video-read_mod-commands_read.lst terminal-read_mod-commands_read.lst

CLEAN_MODULE_TARGETS += clean-module-read_mod-commands_read-extra.1

COMMANDFILES += cmd-read_mod-commands_read.lst
FSFILES += fs-read_mod-commands_read.lst
PARTTOOLFILES += parttool-read_mod-commands_read.lst
PARTMAPFILES += partmap-read_mod-commands_read.lst
HANDLERFILES += handler-read_mod-commands_read.lst
TERMINALFILES += terminal-read_mod-commands_read.lst
VIDEOFILES += video-read_mod-commands_read.lst

cmd-read_mod-commands_read.lst: commands/read.c $(commands/read.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(read_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh read > $@ || (rm -f $@; exit 1)

fs-read_mod-commands_read.lst: commands/read.c $(commands/read.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(read_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh read > $@ || (rm -f $@; exit 1)

parttool-read_mod-commands_read.lst: commands/read.c $(commands/read.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(read_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh read > $@ || (rm -f $@; exit 1)

partmap-read_mod-commands_read.lst: commands/read.c $(commands/read.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(read_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh read > $@ || (rm -f $@; exit 1)

handler-read_mod-commands_read.lst: commands/read.c $(commands/read.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(read_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh read > $@ || (rm -f $@; exit 1)

terminal-read_mod-commands_read.lst: commands/read.c $(commands/read.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(read_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh read > $@ || (rm -f $@; exit 1)

video-read_mod-commands_read.lst: commands/read.c $(commands/read.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(read_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh read > $@ || (rm -f $@; exit 1)

read_mod_CFLAGS = $(COMMON_CFLAGS)
read_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For sleep.mod.
sleep_mod_SOURCES = commands/sleep.c

clean-module-sleep.mod.1:
	rm -f sleep.mod mod-sleep.o mod-sleep.c pre-sleep.o sleep_mod-commands_sleep.o und-sleep.lst

CLEAN_MODULE_TARGETS += clean-module-sleep.mod.1

clean-module-sleep.mod-symbol.1:
	rm -f def-sleep.lst

CLEAN_MODULE_TARGETS += clean-module-sleep.mod-symbol.1
DEFSYMFILES += def-sleep.lst
mostlyclean-module-sleep.mod.1:
	rm -f sleep_mod-commands_sleep.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-sleep.mod.1
UNDSYMFILES += und-sleep.lst

ifeq ($(TARGET_NO_MODULES), yes)
sleep.mod: pre-sleep.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(sleep_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-sleep.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
sleep.mod: pre-sleep.o mod-sleep.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(sleep_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-sleep.o mod-sleep.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
sleep.mod: pre-sleep.o mod-sleep.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(sleep_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-sleep.o mod-sleep.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-sleep.o: $(sleep_mod_DEPENDENCIES) sleep_mod-commands_sleep.o
	-rm -f $@
	$(TARGET_CC) $(sleep_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ sleep_mod-commands_sleep.o

mod-sleep.o: mod-sleep.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(sleep_mod_CFLAGS) -DGRUB_FILE=\"mod-sleep.c\" -c -o $@ $<

mod-sleep.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'sleep' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-sleep.lst: pre-sleep.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 sleep/' > $@
else
def-sleep.lst: pre-sleep.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 sleep/' > $@
endif

und-sleep.lst: pre-sleep.o
	echo 'sleep' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

sleep_mod-commands_sleep.o: commands/sleep.c $(commands/sleep.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sleep_mod_CFLAGS) -DGRUB_FILE=\"commands/sleep.c\" -MD -c -o $@ $<
-include sleep_mod-commands_sleep.d

clean-module-sleep_mod-commands_sleep-extra.1:
	rm -f cmd-sleep_mod-commands_sleep.lst fs-sleep_mod-commands_sleep.lst partmap-sleep_mod-commands_sleep.lst handler-sleep_mod-commands_sleep.lst parttool-sleep_mod-commands_sleep.lst video-sleep_mod-commands_sleep.lst terminal-sleep_mod-commands_sleep.lst

CLEAN_MODULE_TARGETS += clean-module-sleep_mod-commands_sleep-extra.1

COMMANDFILES += cmd-sleep_mod-commands_sleep.lst
FSFILES += fs-sleep_mod-commands_sleep.lst
PARTTOOLFILES += parttool-sleep_mod-commands_sleep.lst
PARTMAPFILES += partmap-sleep_mod-commands_sleep.lst
HANDLERFILES += handler-sleep_mod-commands_sleep.lst
TERMINALFILES += terminal-sleep_mod-commands_sleep.lst
VIDEOFILES += video-sleep_mod-commands_sleep.lst

cmd-sleep_mod-commands_sleep.lst: commands/sleep.c $(commands/sleep.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sleep_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh sleep > $@ || (rm -f $@; exit 1)

fs-sleep_mod-commands_sleep.lst: commands/sleep.c $(commands/sleep.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(sleep_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh sleep > $@ || (rm -f $@; exit 1)

parttool-sleep_mod-commands_sleep.lst: commands/sleep.c $(commands/sleep.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sleep_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh sleep > $@ || (rm -f $@; exit 1)

partmap-sleep_mod-commands_sleep.lst: commands/sleep.c $(commands/sleep.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(sleep_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh sleep > $@ || (rm -f $@; exit 1)

handler-sleep_mod-commands_sleep.lst: commands/sleep.c $(commands/sleep.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sleep_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh sleep > $@ || (rm -f $@; exit 1)

terminal-sleep_mod-commands_sleep.lst: commands/sleep.c $(commands/sleep.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(sleep_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh sleep > $@ || (rm -f $@; exit 1)

video-sleep_mod-commands_sleep.lst: commands/sleep.c $(commands/sleep.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(sleep_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh sleep > $@ || (rm -f $@; exit 1)

sleep_mod_CFLAGS = $(COMMON_CFLAGS)
sleep_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For loadenv.mod.
loadenv_mod_SOURCES = commands/loadenv.c lib/envblk.c

clean-module-loadenv.mod.1:
	rm -f loadenv.mod mod-loadenv.o mod-loadenv.c pre-loadenv.o loadenv_mod-commands_loadenv.o loadenv_mod-lib_envblk.o und-loadenv.lst

CLEAN_MODULE_TARGETS += clean-module-loadenv.mod.1

clean-module-loadenv.mod-symbol.1:
	rm -f def-loadenv.lst

CLEAN_MODULE_TARGETS += clean-module-loadenv.mod-symbol.1
DEFSYMFILES += def-loadenv.lst
mostlyclean-module-loadenv.mod.1:
	rm -f loadenv_mod-commands_loadenv.d loadenv_mod-lib_envblk.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-loadenv.mod.1
UNDSYMFILES += und-loadenv.lst

ifeq ($(TARGET_NO_MODULES), yes)
loadenv.mod: pre-loadenv.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(loadenv_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-loadenv.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
loadenv.mod: pre-loadenv.o mod-loadenv.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(loadenv_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-loadenv.o mod-loadenv.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
loadenv.mod: pre-loadenv.o mod-loadenv.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(loadenv_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-loadenv.o mod-loadenv.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-loadenv.o: $(loadenv_mod_DEPENDENCIES) loadenv_mod-commands_loadenv.o loadenv_mod-lib_envblk.o
	-rm -f $@
	$(TARGET_CC) $(loadenv_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ loadenv_mod-commands_loadenv.o loadenv_mod-lib_envblk.o

mod-loadenv.o: mod-loadenv.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -DGRUB_FILE=\"mod-loadenv.c\" -c -o $@ $<

mod-loadenv.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'loadenv' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-loadenv.lst: pre-loadenv.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 loadenv/' > $@
else
def-loadenv.lst: pre-loadenv.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 loadenv/' > $@
endif

und-loadenv.lst: pre-loadenv.o
	echo 'loadenv' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

loadenv_mod-commands_loadenv.o: commands/loadenv.c $(commands/loadenv.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -DGRUB_FILE=\"commands/loadenv.c\" -MD -c -o $@ $<
-include loadenv_mod-commands_loadenv.d

clean-module-loadenv_mod-commands_loadenv-extra.1:
	rm -f cmd-loadenv_mod-commands_loadenv.lst fs-loadenv_mod-commands_loadenv.lst partmap-loadenv_mod-commands_loadenv.lst handler-loadenv_mod-commands_loadenv.lst parttool-loadenv_mod-commands_loadenv.lst video-loadenv_mod-commands_loadenv.lst terminal-loadenv_mod-commands_loadenv.lst

CLEAN_MODULE_TARGETS += clean-module-loadenv_mod-commands_loadenv-extra.1

COMMANDFILES += cmd-loadenv_mod-commands_loadenv.lst
FSFILES += fs-loadenv_mod-commands_loadenv.lst
PARTTOOLFILES += parttool-loadenv_mod-commands_loadenv.lst
PARTMAPFILES += partmap-loadenv_mod-commands_loadenv.lst
HANDLERFILES += handler-loadenv_mod-commands_loadenv.lst
TERMINALFILES += terminal-loadenv_mod-commands_loadenv.lst
VIDEOFILES += video-loadenv_mod-commands_loadenv.lst

cmd-loadenv_mod-commands_loadenv.lst: commands/loadenv.c $(commands/loadenv.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh loadenv > $@ || (rm -f $@; exit 1)

fs-loadenv_mod-commands_loadenv.lst: commands/loadenv.c $(commands/loadenv.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh loadenv > $@ || (rm -f $@; exit 1)

parttool-loadenv_mod-commands_loadenv.lst: commands/loadenv.c $(commands/loadenv.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh loadenv > $@ || (rm -f $@; exit 1)

partmap-loadenv_mod-commands_loadenv.lst: commands/loadenv.c $(commands/loadenv.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh loadenv > $@ || (rm -f $@; exit 1)

handler-loadenv_mod-commands_loadenv.lst: commands/loadenv.c $(commands/loadenv.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh loadenv > $@ || (rm -f $@; exit 1)

terminal-loadenv_mod-commands_loadenv.lst: commands/loadenv.c $(commands/loadenv.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh loadenv > $@ || (rm -f $@; exit 1)

video-loadenv_mod-commands_loadenv.lst: commands/loadenv.c $(commands/loadenv.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh loadenv > $@ || (rm -f $@; exit 1)

loadenv_mod-lib_envblk.o: lib/envblk.c $(lib/envblk.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -DGRUB_FILE=\"lib/envblk.c\" -MD -c -o $@ $<
-include loadenv_mod-lib_envblk.d

clean-module-loadenv_mod-lib_envblk-extra.1:
	rm -f cmd-loadenv_mod-lib_envblk.lst fs-loadenv_mod-lib_envblk.lst partmap-loadenv_mod-lib_envblk.lst handler-loadenv_mod-lib_envblk.lst parttool-loadenv_mod-lib_envblk.lst video-loadenv_mod-lib_envblk.lst terminal-loadenv_mod-lib_envblk.lst

CLEAN_MODULE_TARGETS += clean-module-loadenv_mod-lib_envblk-extra.1

COMMANDFILES += cmd-loadenv_mod-lib_envblk.lst
FSFILES += fs-loadenv_mod-lib_envblk.lst
PARTTOOLFILES += parttool-loadenv_mod-lib_envblk.lst
PARTMAPFILES += partmap-loadenv_mod-lib_envblk.lst
HANDLERFILES += handler-loadenv_mod-lib_envblk.lst
TERMINALFILES += terminal-loadenv_mod-lib_envblk.lst
VIDEOFILES += video-loadenv_mod-lib_envblk.lst

cmd-loadenv_mod-lib_envblk.lst: lib/envblk.c $(lib/envblk.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh loadenv > $@ || (rm -f $@; exit 1)

fs-loadenv_mod-lib_envblk.lst: lib/envblk.c $(lib/envblk.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh loadenv > $@ || (rm -f $@; exit 1)

parttool-loadenv_mod-lib_envblk.lst: lib/envblk.c $(lib/envblk.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh loadenv > $@ || (rm -f $@; exit 1)

partmap-loadenv_mod-lib_envblk.lst: lib/envblk.c $(lib/envblk.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh loadenv > $@ || (rm -f $@; exit 1)

handler-loadenv_mod-lib_envblk.lst: lib/envblk.c $(lib/envblk.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh loadenv > $@ || (rm -f $@; exit 1)

terminal-loadenv_mod-lib_envblk.lst: lib/envblk.c $(lib/envblk.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh loadenv > $@ || (rm -f $@; exit 1)

video-loadenv_mod-lib_envblk.lst: lib/envblk.c $(lib/envblk.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(loadenv_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh loadenv > $@ || (rm -f $@; exit 1)

loadenv_mod_CFLAGS = $(COMMON_CFLAGS)
loadenv_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For crc.mod.
crc_mod_SOURCES = commands/crc.c lib/crc.c

clean-module-crc.mod.1:
	rm -f crc.mod mod-crc.o mod-crc.c pre-crc.o crc_mod-commands_crc.o crc_mod-lib_crc.o und-crc.lst

CLEAN_MODULE_TARGETS += clean-module-crc.mod.1

clean-module-crc.mod-symbol.1:
	rm -f def-crc.lst

CLEAN_MODULE_TARGETS += clean-module-crc.mod-symbol.1
DEFSYMFILES += def-crc.lst
mostlyclean-module-crc.mod.1:
	rm -f crc_mod-commands_crc.d crc_mod-lib_crc.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-crc.mod.1
UNDSYMFILES += und-crc.lst

ifeq ($(TARGET_NO_MODULES), yes)
crc.mod: pre-crc.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(crc_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-crc.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
crc.mod: pre-crc.o mod-crc.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(crc_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-crc.o mod-crc.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
crc.mod: pre-crc.o mod-crc.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(crc_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-crc.o mod-crc.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-crc.o: $(crc_mod_DEPENDENCIES) crc_mod-commands_crc.o crc_mod-lib_crc.o
	-rm -f $@
	$(TARGET_CC) $(crc_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ crc_mod-commands_crc.o crc_mod-lib_crc.o

mod-crc.o: mod-crc.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -DGRUB_FILE=\"mod-crc.c\" -c -o $@ $<

mod-crc.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'crc' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-crc.lst: pre-crc.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 crc/' > $@
else
def-crc.lst: pre-crc.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 crc/' > $@
endif

und-crc.lst: pre-crc.o
	echo 'crc' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

crc_mod-commands_crc.o: commands/crc.c $(commands/crc.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -DGRUB_FILE=\"commands/crc.c\" -MD -c -o $@ $<
-include crc_mod-commands_crc.d

clean-module-crc_mod-commands_crc-extra.1:
	rm -f cmd-crc_mod-commands_crc.lst fs-crc_mod-commands_crc.lst partmap-crc_mod-commands_crc.lst handler-crc_mod-commands_crc.lst parttool-crc_mod-commands_crc.lst video-crc_mod-commands_crc.lst terminal-crc_mod-commands_crc.lst

CLEAN_MODULE_TARGETS += clean-module-crc_mod-commands_crc-extra.1

COMMANDFILES += cmd-crc_mod-commands_crc.lst
FSFILES += fs-crc_mod-commands_crc.lst
PARTTOOLFILES += parttool-crc_mod-commands_crc.lst
PARTMAPFILES += partmap-crc_mod-commands_crc.lst
HANDLERFILES += handler-crc_mod-commands_crc.lst
TERMINALFILES += terminal-crc_mod-commands_crc.lst
VIDEOFILES += video-crc_mod-commands_crc.lst

cmd-crc_mod-commands_crc.lst: commands/crc.c $(commands/crc.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh crc > $@ || (rm -f $@; exit 1)

fs-crc_mod-commands_crc.lst: commands/crc.c $(commands/crc.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh crc > $@ || (rm -f $@; exit 1)

parttool-crc_mod-commands_crc.lst: commands/crc.c $(commands/crc.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh crc > $@ || (rm -f $@; exit 1)

partmap-crc_mod-commands_crc.lst: commands/crc.c $(commands/crc.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh crc > $@ || (rm -f $@; exit 1)

handler-crc_mod-commands_crc.lst: commands/crc.c $(commands/crc.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh crc > $@ || (rm -f $@; exit 1)

terminal-crc_mod-commands_crc.lst: commands/crc.c $(commands/crc.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh crc > $@ || (rm -f $@; exit 1)

video-crc_mod-commands_crc.lst: commands/crc.c $(commands/crc.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh crc > $@ || (rm -f $@; exit 1)

crc_mod-lib_crc.o: lib/crc.c $(lib/crc.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -DGRUB_FILE=\"lib/crc.c\" -MD -c -o $@ $<
-include crc_mod-lib_crc.d

clean-module-crc_mod-lib_crc-extra.1:
	rm -f cmd-crc_mod-lib_crc.lst fs-crc_mod-lib_crc.lst partmap-crc_mod-lib_crc.lst handler-crc_mod-lib_crc.lst parttool-crc_mod-lib_crc.lst video-crc_mod-lib_crc.lst terminal-crc_mod-lib_crc.lst

CLEAN_MODULE_TARGETS += clean-module-crc_mod-lib_crc-extra.1

COMMANDFILES += cmd-crc_mod-lib_crc.lst
FSFILES += fs-crc_mod-lib_crc.lst
PARTTOOLFILES += parttool-crc_mod-lib_crc.lst
PARTMAPFILES += partmap-crc_mod-lib_crc.lst
HANDLERFILES += handler-crc_mod-lib_crc.lst
TERMINALFILES += terminal-crc_mod-lib_crc.lst
VIDEOFILES += video-crc_mod-lib_crc.lst

cmd-crc_mod-lib_crc.lst: lib/crc.c $(lib/crc.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh crc > $@ || (rm -f $@; exit 1)

fs-crc_mod-lib_crc.lst: lib/crc.c $(lib/crc.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh crc > $@ || (rm -f $@; exit 1)

parttool-crc_mod-lib_crc.lst: lib/crc.c $(lib/crc.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh crc > $@ || (rm -f $@; exit 1)

partmap-crc_mod-lib_crc.lst: lib/crc.c $(lib/crc.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh crc > $@ || (rm -f $@; exit 1)

handler-crc_mod-lib_crc.lst: lib/crc.c $(lib/crc.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh crc > $@ || (rm -f $@; exit 1)

terminal-crc_mod-lib_crc.lst: lib/crc.c $(lib/crc.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh crc > $@ || (rm -f $@; exit 1)

video-crc_mod-lib_crc.lst: lib/crc.c $(lib/crc.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(crc_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh crc > $@ || (rm -f $@; exit 1)

crc_mod_CFLAGS = $(COMMON_CFLAGS)
crc_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For memrw.mod.
memrw_mod_SOURCES = commands/memrw.c

clean-module-memrw.mod.1:
	rm -f memrw.mod mod-memrw.o mod-memrw.c pre-memrw.o memrw_mod-commands_memrw.o und-memrw.lst

CLEAN_MODULE_TARGETS += clean-module-memrw.mod.1

clean-module-memrw.mod-symbol.1:
	rm -f def-memrw.lst

CLEAN_MODULE_TARGETS += clean-module-memrw.mod-symbol.1
DEFSYMFILES += def-memrw.lst
mostlyclean-module-memrw.mod.1:
	rm -f memrw_mod-commands_memrw.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-memrw.mod.1
UNDSYMFILES += und-memrw.lst

ifeq ($(TARGET_NO_MODULES), yes)
memrw.mod: pre-memrw.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(memrw_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-memrw.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
memrw.mod: pre-memrw.o mod-memrw.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(memrw_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-memrw.o mod-memrw.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
memrw.mod: pre-memrw.o mod-memrw.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(memrw_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-memrw.o mod-memrw.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-memrw.o: $(memrw_mod_DEPENDENCIES) memrw_mod-commands_memrw.o
	-rm -f $@
	$(TARGET_CC) $(memrw_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ memrw_mod-commands_memrw.o

mod-memrw.o: mod-memrw.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(memrw_mod_CFLAGS) -DGRUB_FILE=\"mod-memrw.c\" -c -o $@ $<

mod-memrw.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'memrw' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-memrw.lst: pre-memrw.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 memrw/' > $@
else
def-memrw.lst: pre-memrw.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 memrw/' > $@
endif

und-memrw.lst: pre-memrw.o
	echo 'memrw' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

memrw_mod-commands_memrw.o: commands/memrw.c $(commands/memrw.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memrw_mod_CFLAGS) -DGRUB_FILE=\"commands/memrw.c\" -MD -c -o $@ $<
-include memrw_mod-commands_memrw.d

clean-module-memrw_mod-commands_memrw-extra.1:
	rm -f cmd-memrw_mod-commands_memrw.lst fs-memrw_mod-commands_memrw.lst partmap-memrw_mod-commands_memrw.lst handler-memrw_mod-commands_memrw.lst parttool-memrw_mod-commands_memrw.lst video-memrw_mod-commands_memrw.lst terminal-memrw_mod-commands_memrw.lst

CLEAN_MODULE_TARGETS += clean-module-memrw_mod-commands_memrw-extra.1

COMMANDFILES += cmd-memrw_mod-commands_memrw.lst
FSFILES += fs-memrw_mod-commands_memrw.lst
PARTTOOLFILES += parttool-memrw_mod-commands_memrw.lst
PARTMAPFILES += partmap-memrw_mod-commands_memrw.lst
HANDLERFILES += handler-memrw_mod-commands_memrw.lst
TERMINALFILES += terminal-memrw_mod-commands_memrw.lst
VIDEOFILES += video-memrw_mod-commands_memrw.lst

cmd-memrw_mod-commands_memrw.lst: commands/memrw.c $(commands/memrw.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memrw_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh memrw > $@ || (rm -f $@; exit 1)

fs-memrw_mod-commands_memrw.lst: commands/memrw.c $(commands/memrw.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(memrw_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh memrw > $@ || (rm -f $@; exit 1)

parttool-memrw_mod-commands_memrw.lst: commands/memrw.c $(commands/memrw.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memrw_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh memrw > $@ || (rm -f $@; exit 1)

partmap-memrw_mod-commands_memrw.lst: commands/memrw.c $(commands/memrw.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(memrw_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh memrw > $@ || (rm -f $@; exit 1)

handler-memrw_mod-commands_memrw.lst: commands/memrw.c $(commands/memrw.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memrw_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh memrw > $@ || (rm -f $@; exit 1)

terminal-memrw_mod-commands_memrw.lst: commands/memrw.c $(commands/memrw.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memrw_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh memrw > $@ || (rm -f $@; exit 1)

video-memrw_mod-commands_memrw.lst: commands/memrw.c $(commands/memrw.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(memrw_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh memrw > $@ || (rm -f $@; exit 1)

memrw_mod_CFLAGS = $(COMMON_CFLAGS)
memrw_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For true.mod
true_mod_SOURCES = commands/true.c

clean-module-true.mod.1:
	rm -f true.mod mod-true.o mod-true.c pre-true.o true_mod-commands_true.o und-true.lst

CLEAN_MODULE_TARGETS += clean-module-true.mod.1

clean-module-true.mod-symbol.1:
	rm -f def-true.lst

CLEAN_MODULE_TARGETS += clean-module-true.mod-symbol.1
DEFSYMFILES += def-true.lst
mostlyclean-module-true.mod.1:
	rm -f true_mod-commands_true.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-true.mod.1
UNDSYMFILES += und-true.lst

ifeq ($(TARGET_NO_MODULES), yes)
true.mod: pre-true.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(true_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-true.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
true.mod: pre-true.o mod-true.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(true_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-true.o mod-true.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
true.mod: pre-true.o mod-true.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(true_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-true.o mod-true.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-true.o: $(true_mod_DEPENDENCIES) true_mod-commands_true.o
	-rm -f $@
	$(TARGET_CC) $(true_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ true_mod-commands_true.o

mod-true.o: mod-true.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(true_mod_CFLAGS) -DGRUB_FILE=\"mod-true.c\" -c -o $@ $<

mod-true.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'true' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-true.lst: pre-true.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 true/' > $@
else
def-true.lst: pre-true.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 true/' > $@
endif

und-true.lst: pre-true.o
	echo 'true' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

true_mod-commands_true.o: commands/true.c $(commands/true.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(true_mod_CFLAGS) -DGRUB_FILE=\"commands/true.c\" -MD -c -o $@ $<
-include true_mod-commands_true.d

clean-module-true_mod-commands_true-extra.1:
	rm -f cmd-true_mod-commands_true.lst fs-true_mod-commands_true.lst partmap-true_mod-commands_true.lst handler-true_mod-commands_true.lst parttool-true_mod-commands_true.lst video-true_mod-commands_true.lst terminal-true_mod-commands_true.lst

CLEAN_MODULE_TARGETS += clean-module-true_mod-commands_true-extra.1

COMMANDFILES += cmd-true_mod-commands_true.lst
FSFILES += fs-true_mod-commands_true.lst
PARTTOOLFILES += parttool-true_mod-commands_true.lst
PARTMAPFILES += partmap-true_mod-commands_true.lst
HANDLERFILES += handler-true_mod-commands_true.lst
TERMINALFILES += terminal-true_mod-commands_true.lst
VIDEOFILES += video-true_mod-commands_true.lst

cmd-true_mod-commands_true.lst: commands/true.c $(commands/true.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(true_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh true > $@ || (rm -f $@; exit 1)

fs-true_mod-commands_true.lst: commands/true.c $(commands/true.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(true_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh true > $@ || (rm -f $@; exit 1)

parttool-true_mod-commands_true.lst: commands/true.c $(commands/true.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(true_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh true > $@ || (rm -f $@; exit 1)

partmap-true_mod-commands_true.lst: commands/true.c $(commands/true.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(true_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh true > $@ || (rm -f $@; exit 1)

handler-true_mod-commands_true.lst: commands/true.c $(commands/true.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(true_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh true > $@ || (rm -f $@; exit 1)

terminal-true_mod-commands_true.lst: commands/true.c $(commands/true.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(true_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh true > $@ || (rm -f $@; exit 1)

video-true_mod-commands_true.lst: commands/true.c $(commands/true.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(true_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh true > $@ || (rm -f $@; exit 1)

true_mod_CFLAGS = $(COMMON_CFLAGS)
true_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For probe.mod.
probe_mod_SOURCES = commands/probe.c

clean-module-probe.mod.1:
	rm -f probe.mod mod-probe.o mod-probe.c pre-probe.o probe_mod-commands_probe.o und-probe.lst

CLEAN_MODULE_TARGETS += clean-module-probe.mod.1

clean-module-probe.mod-symbol.1:
	rm -f def-probe.lst

CLEAN_MODULE_TARGETS += clean-module-probe.mod-symbol.1
DEFSYMFILES += def-probe.lst
mostlyclean-module-probe.mod.1:
	rm -f probe_mod-commands_probe.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-probe.mod.1
UNDSYMFILES += und-probe.lst

ifeq ($(TARGET_NO_MODULES), yes)
probe.mod: pre-probe.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(probe_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-probe.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
probe.mod: pre-probe.o mod-probe.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(probe_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-probe.o mod-probe.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
probe.mod: pre-probe.o mod-probe.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(probe_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-probe.o mod-probe.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-probe.o: $(probe_mod_DEPENDENCIES) probe_mod-commands_probe.o
	-rm -f $@
	$(TARGET_CC) $(probe_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ probe_mod-commands_probe.o

mod-probe.o: mod-probe.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(probe_mod_CFLAGS) -DGRUB_FILE=\"mod-probe.c\" -c -o $@ $<

mod-probe.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'probe' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-probe.lst: pre-probe.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 probe/' > $@
else
def-probe.lst: pre-probe.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 probe/' > $@
endif

und-probe.lst: pre-probe.o
	echo 'probe' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

probe_mod-commands_probe.o: commands/probe.c $(commands/probe.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(probe_mod_CFLAGS) -DGRUB_FILE=\"commands/probe.c\" -MD -c -o $@ $<
-include probe_mod-commands_probe.d

clean-module-probe_mod-commands_probe-extra.1:
	rm -f cmd-probe_mod-commands_probe.lst fs-probe_mod-commands_probe.lst partmap-probe_mod-commands_probe.lst handler-probe_mod-commands_probe.lst parttool-probe_mod-commands_probe.lst video-probe_mod-commands_probe.lst terminal-probe_mod-commands_probe.lst

CLEAN_MODULE_TARGETS += clean-module-probe_mod-commands_probe-extra.1

COMMANDFILES += cmd-probe_mod-commands_probe.lst
FSFILES += fs-probe_mod-commands_probe.lst
PARTTOOLFILES += parttool-probe_mod-commands_probe.lst
PARTMAPFILES += partmap-probe_mod-commands_probe.lst
HANDLERFILES += handler-probe_mod-commands_probe.lst
TERMINALFILES += terminal-probe_mod-commands_probe.lst
VIDEOFILES += video-probe_mod-commands_probe.lst

cmd-probe_mod-commands_probe.lst: commands/probe.c $(commands/probe.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(probe_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh probe > $@ || (rm -f $@; exit 1)

fs-probe_mod-commands_probe.lst: commands/probe.c $(commands/probe.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(probe_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh probe > $@ || (rm -f $@; exit 1)

parttool-probe_mod-commands_probe.lst: commands/probe.c $(commands/probe.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(probe_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh probe > $@ || (rm -f $@; exit 1)

partmap-probe_mod-commands_probe.lst: commands/probe.c $(commands/probe.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(probe_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh probe > $@ || (rm -f $@; exit 1)

handler-probe_mod-commands_probe.lst: commands/probe.c $(commands/probe.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(probe_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh probe > $@ || (rm -f $@; exit 1)

terminal-probe_mod-commands_probe.lst: commands/probe.c $(commands/probe.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(probe_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh probe > $@ || (rm -f $@; exit 1)

video-probe_mod-commands_probe.lst: commands/probe.c $(commands/probe.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(probe_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh probe > $@ || (rm -f $@; exit 1)

probe_mod_CFLAGS = $(COMMON_CFLAGS)
probe_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For keystatus.mod.
keystatus_mod_SOURCES = commands/keystatus.c

clean-module-keystatus.mod.1:
	rm -f keystatus.mod mod-keystatus.o mod-keystatus.c pre-keystatus.o keystatus_mod-commands_keystatus.o und-keystatus.lst

CLEAN_MODULE_TARGETS += clean-module-keystatus.mod.1

clean-module-keystatus.mod-symbol.1:
	rm -f def-keystatus.lst

CLEAN_MODULE_TARGETS += clean-module-keystatus.mod-symbol.1
DEFSYMFILES += def-keystatus.lst
mostlyclean-module-keystatus.mod.1:
	rm -f keystatus_mod-commands_keystatus.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-keystatus.mod.1
UNDSYMFILES += und-keystatus.lst

ifeq ($(TARGET_NO_MODULES), yes)
keystatus.mod: pre-keystatus.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(keystatus_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-keystatus.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
keystatus.mod: pre-keystatus.o mod-keystatus.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(keystatus_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-keystatus.o mod-keystatus.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
keystatus.mod: pre-keystatus.o mod-keystatus.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(keystatus_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-keystatus.o mod-keystatus.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-keystatus.o: $(keystatus_mod_DEPENDENCIES) keystatus_mod-commands_keystatus.o
	-rm -f $@
	$(TARGET_CC) $(keystatus_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ keystatus_mod-commands_keystatus.o

mod-keystatus.o: mod-keystatus.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(keystatus_mod_CFLAGS) -DGRUB_FILE=\"mod-keystatus.c\" -c -o $@ $<

mod-keystatus.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'keystatus' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-keystatus.lst: pre-keystatus.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 keystatus/' > $@
else
def-keystatus.lst: pre-keystatus.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 keystatus/' > $@
endif

und-keystatus.lst: pre-keystatus.o
	echo 'keystatus' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

keystatus_mod-commands_keystatus.o: commands/keystatus.c $(commands/keystatus.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(keystatus_mod_CFLAGS) -DGRUB_FILE=\"commands/keystatus.c\" -MD -c -o $@ $<
-include keystatus_mod-commands_keystatus.d

clean-module-keystatus_mod-commands_keystatus-extra.1:
	rm -f cmd-keystatus_mod-commands_keystatus.lst fs-keystatus_mod-commands_keystatus.lst partmap-keystatus_mod-commands_keystatus.lst handler-keystatus_mod-commands_keystatus.lst parttool-keystatus_mod-commands_keystatus.lst video-keystatus_mod-commands_keystatus.lst terminal-keystatus_mod-commands_keystatus.lst

CLEAN_MODULE_TARGETS += clean-module-keystatus_mod-commands_keystatus-extra.1

COMMANDFILES += cmd-keystatus_mod-commands_keystatus.lst
FSFILES += fs-keystatus_mod-commands_keystatus.lst
PARTTOOLFILES += parttool-keystatus_mod-commands_keystatus.lst
PARTMAPFILES += partmap-keystatus_mod-commands_keystatus.lst
HANDLERFILES += handler-keystatus_mod-commands_keystatus.lst
TERMINALFILES += terminal-keystatus_mod-commands_keystatus.lst
VIDEOFILES += video-keystatus_mod-commands_keystatus.lst

cmd-keystatus_mod-commands_keystatus.lst: commands/keystatus.c $(commands/keystatus.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(keystatus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh keystatus > $@ || (rm -f $@; exit 1)

fs-keystatus_mod-commands_keystatus.lst: commands/keystatus.c $(commands/keystatus.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(keystatus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh keystatus > $@ || (rm -f $@; exit 1)

parttool-keystatus_mod-commands_keystatus.lst: commands/keystatus.c $(commands/keystatus.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(keystatus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh keystatus > $@ || (rm -f $@; exit 1)

partmap-keystatus_mod-commands_keystatus.lst: commands/keystatus.c $(commands/keystatus.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(keystatus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh keystatus > $@ || (rm -f $@; exit 1)

handler-keystatus_mod-commands_keystatus.lst: commands/keystatus.c $(commands/keystatus.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(keystatus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh keystatus > $@ || (rm -f $@; exit 1)

terminal-keystatus_mod-commands_keystatus.lst: commands/keystatus.c $(commands/keystatus.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(keystatus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh keystatus > $@ || (rm -f $@; exit 1)

video-keystatus_mod-commands_keystatus.lst: commands/keystatus.c $(commands/keystatus.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(keystatus_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh keystatus > $@ || (rm -f $@; exit 1)

keystatus_mod_CFLAGS = $(COMMON_CFLAGS)
keystatus_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For normal.mod.
ifneq (, $(FONT_SOURCE))
normal/charset.c_DEPENDENCIES = widthspec.h
endif
normal_mod_SOURCES = normal/main.c normal/cmdline.c normal/dyncmd.c \
	normal/auth.c normal/autofs.c  \
	normal/color.c normal/completion.c normal/datetime.c normal/menu.c \
	normal/menu_entry.c normal/menu_text.c normal/charset.c \
	normal/misc.c normal/crypto.c normal/term.c normal/context.c \
	script/main.c script/script.c script/execute.c unidata.c \
	script/function.c script/lexer.c grub_script.tab.c grub_script.yy.c

clean-module-normal.mod.1:
	rm -f normal.mod mod-normal.o mod-normal.c pre-normal.o normal_mod-normal_main.o normal_mod-normal_cmdline.o normal_mod-normal_dyncmd.o normal_mod-normal_auth.o normal_mod-normal_autofs.o normal_mod-normal_color.o normal_mod-normal_completion.o normal_mod-normal_datetime.o normal_mod-normal_menu.o normal_mod-normal_menu_entry.o normal_mod-normal_menu_text.o normal_mod-normal_charset.o normal_mod-normal_misc.o normal_mod-normal_crypto.o normal_mod-normal_term.o normal_mod-normal_context.o normal_mod-script_main.o normal_mod-script_script.o normal_mod-script_execute.o normal_mod-unidata.o normal_mod-script_function.o normal_mod-script_lexer.o normal_mod-grub_script_tab.o normal_mod-grub_script_yy.o und-normal.lst

CLEAN_MODULE_TARGETS += clean-module-normal.mod.1

clean-module-normal.mod-symbol.1:
	rm -f def-normal.lst

CLEAN_MODULE_TARGETS += clean-module-normal.mod-symbol.1
DEFSYMFILES += def-normal.lst
mostlyclean-module-normal.mod.1:
	rm -f normal_mod-normal_main.d normal_mod-normal_cmdline.d normal_mod-normal_dyncmd.d normal_mod-normal_auth.d normal_mod-normal_autofs.d normal_mod-normal_color.d normal_mod-normal_completion.d normal_mod-normal_datetime.d normal_mod-normal_menu.d normal_mod-normal_menu_entry.d normal_mod-normal_menu_text.d normal_mod-normal_charset.d normal_mod-normal_misc.d normal_mod-normal_crypto.d normal_mod-normal_term.d normal_mod-normal_context.d normal_mod-script_main.d normal_mod-script_script.d normal_mod-script_execute.d normal_mod-unidata.d normal_mod-script_function.d normal_mod-script_lexer.d normal_mod-grub_script_tab.d normal_mod-grub_script_yy.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-normal.mod.1
UNDSYMFILES += und-normal.lst

ifeq ($(TARGET_NO_MODULES), yes)
normal.mod: pre-normal.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(normal_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-normal.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
normal.mod: pre-normal.o mod-normal.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(normal_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-normal.o mod-normal.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
normal.mod: pre-normal.o mod-normal.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(normal_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-normal.o mod-normal.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-normal.o: $(normal_mod_DEPENDENCIES) normal_mod-normal_main.o normal_mod-normal_cmdline.o normal_mod-normal_dyncmd.o normal_mod-normal_auth.o normal_mod-normal_autofs.o normal_mod-normal_color.o normal_mod-normal_completion.o normal_mod-normal_datetime.o normal_mod-normal_menu.o normal_mod-normal_menu_entry.o normal_mod-normal_menu_text.o normal_mod-normal_charset.o normal_mod-normal_misc.o normal_mod-normal_crypto.o normal_mod-normal_term.o normal_mod-normal_context.o normal_mod-script_main.o normal_mod-script_script.o normal_mod-script_execute.o normal_mod-unidata.o normal_mod-script_function.o normal_mod-script_lexer.o normal_mod-grub_script_tab.o normal_mod-grub_script_yy.o
	-rm -f $@
	$(TARGET_CC) $(normal_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ normal_mod-normal_main.o normal_mod-normal_cmdline.o normal_mod-normal_dyncmd.o normal_mod-normal_auth.o normal_mod-normal_autofs.o normal_mod-normal_color.o normal_mod-normal_completion.o normal_mod-normal_datetime.o normal_mod-normal_menu.o normal_mod-normal_menu_entry.o normal_mod-normal_menu_text.o normal_mod-normal_charset.o normal_mod-normal_misc.o normal_mod-normal_crypto.o normal_mod-normal_term.o normal_mod-normal_context.o normal_mod-script_main.o normal_mod-script_script.o normal_mod-script_execute.o normal_mod-unidata.o normal_mod-script_function.o normal_mod-script_lexer.o normal_mod-grub_script_tab.o normal_mod-grub_script_yy.o

mod-normal.o: mod-normal.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"mod-normal.c\" -c -o $@ $<

mod-normal.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'normal' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-normal.lst: pre-normal.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 normal/' > $@
else
def-normal.lst: pre-normal.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 normal/' > $@
endif

und-normal.lst: pre-normal.o
	echo 'normal' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

normal_mod-normal_main.o: normal/main.c $(normal/main.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/main.c\" -MD -c -o $@ $<
-include normal_mod-normal_main.d

clean-module-normal_mod-normal_main-extra.1:
	rm -f cmd-normal_mod-normal_main.lst fs-normal_mod-normal_main.lst partmap-normal_mod-normal_main.lst handler-normal_mod-normal_main.lst parttool-normal_mod-normal_main.lst video-normal_mod-normal_main.lst terminal-normal_mod-normal_main.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_main-extra.1

COMMANDFILES += cmd-normal_mod-normal_main.lst
FSFILES += fs-normal_mod-normal_main.lst
PARTTOOLFILES += parttool-normal_mod-normal_main.lst
PARTMAPFILES += partmap-normal_mod-normal_main.lst
HANDLERFILES += handler-normal_mod-normal_main.lst
TERMINALFILES += terminal-normal_mod-normal_main.lst
VIDEOFILES += video-normal_mod-normal_main.lst

cmd-normal_mod-normal_main.lst: normal/main.c $(normal/main.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_main.lst: normal/main.c $(normal/main.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_main.lst: normal/main.c $(normal/main.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_main.lst: normal/main.c $(normal/main.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_main.lst: normal/main.c $(normal/main.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_main.lst: normal/main.c $(normal/main.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_main.lst: normal/main.c $(normal/main.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_cmdline.o: normal/cmdline.c $(normal/cmdline.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/cmdline.c\" -MD -c -o $@ $<
-include normal_mod-normal_cmdline.d

clean-module-normal_mod-normal_cmdline-extra.1:
	rm -f cmd-normal_mod-normal_cmdline.lst fs-normal_mod-normal_cmdline.lst partmap-normal_mod-normal_cmdline.lst handler-normal_mod-normal_cmdline.lst parttool-normal_mod-normal_cmdline.lst video-normal_mod-normal_cmdline.lst terminal-normal_mod-normal_cmdline.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_cmdline-extra.1

COMMANDFILES += cmd-normal_mod-normal_cmdline.lst
FSFILES += fs-normal_mod-normal_cmdline.lst
PARTTOOLFILES += parttool-normal_mod-normal_cmdline.lst
PARTMAPFILES += partmap-normal_mod-normal_cmdline.lst
HANDLERFILES += handler-normal_mod-normal_cmdline.lst
TERMINALFILES += terminal-normal_mod-normal_cmdline.lst
VIDEOFILES += video-normal_mod-normal_cmdline.lst

cmd-normal_mod-normal_cmdline.lst: normal/cmdline.c $(normal/cmdline.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_cmdline.lst: normal/cmdline.c $(normal/cmdline.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_cmdline.lst: normal/cmdline.c $(normal/cmdline.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_cmdline.lst: normal/cmdline.c $(normal/cmdline.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_cmdline.lst: normal/cmdline.c $(normal/cmdline.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_cmdline.lst: normal/cmdline.c $(normal/cmdline.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_cmdline.lst: normal/cmdline.c $(normal/cmdline.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_dyncmd.o: normal/dyncmd.c $(normal/dyncmd.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/dyncmd.c\" -MD -c -o $@ $<
-include normal_mod-normal_dyncmd.d

clean-module-normal_mod-normal_dyncmd-extra.1:
	rm -f cmd-normal_mod-normal_dyncmd.lst fs-normal_mod-normal_dyncmd.lst partmap-normal_mod-normal_dyncmd.lst handler-normal_mod-normal_dyncmd.lst parttool-normal_mod-normal_dyncmd.lst video-normal_mod-normal_dyncmd.lst terminal-normal_mod-normal_dyncmd.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_dyncmd-extra.1

COMMANDFILES += cmd-normal_mod-normal_dyncmd.lst
FSFILES += fs-normal_mod-normal_dyncmd.lst
PARTTOOLFILES += parttool-normal_mod-normal_dyncmd.lst
PARTMAPFILES += partmap-normal_mod-normal_dyncmd.lst
HANDLERFILES += handler-normal_mod-normal_dyncmd.lst
TERMINALFILES += terminal-normal_mod-normal_dyncmd.lst
VIDEOFILES += video-normal_mod-normal_dyncmd.lst

cmd-normal_mod-normal_dyncmd.lst: normal/dyncmd.c $(normal/dyncmd.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_dyncmd.lst: normal/dyncmd.c $(normal/dyncmd.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_dyncmd.lst: normal/dyncmd.c $(normal/dyncmd.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_dyncmd.lst: normal/dyncmd.c $(normal/dyncmd.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_dyncmd.lst: normal/dyncmd.c $(normal/dyncmd.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_dyncmd.lst: normal/dyncmd.c $(normal/dyncmd.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_dyncmd.lst: normal/dyncmd.c $(normal/dyncmd.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_auth.o: normal/auth.c $(normal/auth.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/auth.c\" -MD -c -o $@ $<
-include normal_mod-normal_auth.d

clean-module-normal_mod-normal_auth-extra.1:
	rm -f cmd-normal_mod-normal_auth.lst fs-normal_mod-normal_auth.lst partmap-normal_mod-normal_auth.lst handler-normal_mod-normal_auth.lst parttool-normal_mod-normal_auth.lst video-normal_mod-normal_auth.lst terminal-normal_mod-normal_auth.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_auth-extra.1

COMMANDFILES += cmd-normal_mod-normal_auth.lst
FSFILES += fs-normal_mod-normal_auth.lst
PARTTOOLFILES += parttool-normal_mod-normal_auth.lst
PARTMAPFILES += partmap-normal_mod-normal_auth.lst
HANDLERFILES += handler-normal_mod-normal_auth.lst
TERMINALFILES += terminal-normal_mod-normal_auth.lst
VIDEOFILES += video-normal_mod-normal_auth.lst

cmd-normal_mod-normal_auth.lst: normal/auth.c $(normal/auth.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_auth.lst: normal/auth.c $(normal/auth.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_auth.lst: normal/auth.c $(normal/auth.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_auth.lst: normal/auth.c $(normal/auth.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_auth.lst: normal/auth.c $(normal/auth.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_auth.lst: normal/auth.c $(normal/auth.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_auth.lst: normal/auth.c $(normal/auth.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_autofs.o: normal/autofs.c $(normal/autofs.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/autofs.c\" -MD -c -o $@ $<
-include normal_mod-normal_autofs.d

clean-module-normal_mod-normal_autofs-extra.1:
	rm -f cmd-normal_mod-normal_autofs.lst fs-normal_mod-normal_autofs.lst partmap-normal_mod-normal_autofs.lst handler-normal_mod-normal_autofs.lst parttool-normal_mod-normal_autofs.lst video-normal_mod-normal_autofs.lst terminal-normal_mod-normal_autofs.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_autofs-extra.1

COMMANDFILES += cmd-normal_mod-normal_autofs.lst
FSFILES += fs-normal_mod-normal_autofs.lst
PARTTOOLFILES += parttool-normal_mod-normal_autofs.lst
PARTMAPFILES += partmap-normal_mod-normal_autofs.lst
HANDLERFILES += handler-normal_mod-normal_autofs.lst
TERMINALFILES += terminal-normal_mod-normal_autofs.lst
VIDEOFILES += video-normal_mod-normal_autofs.lst

cmd-normal_mod-normal_autofs.lst: normal/autofs.c $(normal/autofs.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_autofs.lst: normal/autofs.c $(normal/autofs.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_autofs.lst: normal/autofs.c $(normal/autofs.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_autofs.lst: normal/autofs.c $(normal/autofs.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_autofs.lst: normal/autofs.c $(normal/autofs.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_autofs.lst: normal/autofs.c $(normal/autofs.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_autofs.lst: normal/autofs.c $(normal/autofs.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_color.o: normal/color.c $(normal/color.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/color.c\" -MD -c -o $@ $<
-include normal_mod-normal_color.d

clean-module-normal_mod-normal_color-extra.1:
	rm -f cmd-normal_mod-normal_color.lst fs-normal_mod-normal_color.lst partmap-normal_mod-normal_color.lst handler-normal_mod-normal_color.lst parttool-normal_mod-normal_color.lst video-normal_mod-normal_color.lst terminal-normal_mod-normal_color.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_color-extra.1

COMMANDFILES += cmd-normal_mod-normal_color.lst
FSFILES += fs-normal_mod-normal_color.lst
PARTTOOLFILES += parttool-normal_mod-normal_color.lst
PARTMAPFILES += partmap-normal_mod-normal_color.lst
HANDLERFILES += handler-normal_mod-normal_color.lst
TERMINALFILES += terminal-normal_mod-normal_color.lst
VIDEOFILES += video-normal_mod-normal_color.lst

cmd-normal_mod-normal_color.lst: normal/color.c $(normal/color.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_color.lst: normal/color.c $(normal/color.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_color.lst: normal/color.c $(normal/color.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_color.lst: normal/color.c $(normal/color.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_color.lst: normal/color.c $(normal/color.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_color.lst: normal/color.c $(normal/color.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_color.lst: normal/color.c $(normal/color.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_completion.o: normal/completion.c $(normal/completion.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/completion.c\" -MD -c -o $@ $<
-include normal_mod-normal_completion.d

clean-module-normal_mod-normal_completion-extra.1:
	rm -f cmd-normal_mod-normal_completion.lst fs-normal_mod-normal_completion.lst partmap-normal_mod-normal_completion.lst handler-normal_mod-normal_completion.lst parttool-normal_mod-normal_completion.lst video-normal_mod-normal_completion.lst terminal-normal_mod-normal_completion.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_completion-extra.1

COMMANDFILES += cmd-normal_mod-normal_completion.lst
FSFILES += fs-normal_mod-normal_completion.lst
PARTTOOLFILES += parttool-normal_mod-normal_completion.lst
PARTMAPFILES += partmap-normal_mod-normal_completion.lst
HANDLERFILES += handler-normal_mod-normal_completion.lst
TERMINALFILES += terminal-normal_mod-normal_completion.lst
VIDEOFILES += video-normal_mod-normal_completion.lst

cmd-normal_mod-normal_completion.lst: normal/completion.c $(normal/completion.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_completion.lst: normal/completion.c $(normal/completion.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_completion.lst: normal/completion.c $(normal/completion.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_completion.lst: normal/completion.c $(normal/completion.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_completion.lst: normal/completion.c $(normal/completion.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_completion.lst: normal/completion.c $(normal/completion.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_completion.lst: normal/completion.c $(normal/completion.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_datetime.o: normal/datetime.c $(normal/datetime.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/datetime.c\" -MD -c -o $@ $<
-include normal_mod-normal_datetime.d

clean-module-normal_mod-normal_datetime-extra.1:
	rm -f cmd-normal_mod-normal_datetime.lst fs-normal_mod-normal_datetime.lst partmap-normal_mod-normal_datetime.lst handler-normal_mod-normal_datetime.lst parttool-normal_mod-normal_datetime.lst video-normal_mod-normal_datetime.lst terminal-normal_mod-normal_datetime.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_datetime-extra.1

COMMANDFILES += cmd-normal_mod-normal_datetime.lst
FSFILES += fs-normal_mod-normal_datetime.lst
PARTTOOLFILES += parttool-normal_mod-normal_datetime.lst
PARTMAPFILES += partmap-normal_mod-normal_datetime.lst
HANDLERFILES += handler-normal_mod-normal_datetime.lst
TERMINALFILES += terminal-normal_mod-normal_datetime.lst
VIDEOFILES += video-normal_mod-normal_datetime.lst

cmd-normal_mod-normal_datetime.lst: normal/datetime.c $(normal/datetime.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_datetime.lst: normal/datetime.c $(normal/datetime.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_datetime.lst: normal/datetime.c $(normal/datetime.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_datetime.lst: normal/datetime.c $(normal/datetime.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_datetime.lst: normal/datetime.c $(normal/datetime.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_datetime.lst: normal/datetime.c $(normal/datetime.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_datetime.lst: normal/datetime.c $(normal/datetime.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_menu.o: normal/menu.c $(normal/menu.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/menu.c\" -MD -c -o $@ $<
-include normal_mod-normal_menu.d

clean-module-normal_mod-normal_menu-extra.1:
	rm -f cmd-normal_mod-normal_menu.lst fs-normal_mod-normal_menu.lst partmap-normal_mod-normal_menu.lst handler-normal_mod-normal_menu.lst parttool-normal_mod-normal_menu.lst video-normal_mod-normal_menu.lst terminal-normal_mod-normal_menu.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_menu-extra.1

COMMANDFILES += cmd-normal_mod-normal_menu.lst
FSFILES += fs-normal_mod-normal_menu.lst
PARTTOOLFILES += parttool-normal_mod-normal_menu.lst
PARTMAPFILES += partmap-normal_mod-normal_menu.lst
HANDLERFILES += handler-normal_mod-normal_menu.lst
TERMINALFILES += terminal-normal_mod-normal_menu.lst
VIDEOFILES += video-normal_mod-normal_menu.lst

cmd-normal_mod-normal_menu.lst: normal/menu.c $(normal/menu.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_menu.lst: normal/menu.c $(normal/menu.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_menu.lst: normal/menu.c $(normal/menu.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_menu.lst: normal/menu.c $(normal/menu.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_menu.lst: normal/menu.c $(normal/menu.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_menu.lst: normal/menu.c $(normal/menu.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_menu.lst: normal/menu.c $(normal/menu.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_menu_entry.o: normal/menu_entry.c $(normal/menu_entry.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/menu_entry.c\" -MD -c -o $@ $<
-include normal_mod-normal_menu_entry.d

clean-module-normal_mod-normal_menu_entry-extra.1:
	rm -f cmd-normal_mod-normal_menu_entry.lst fs-normal_mod-normal_menu_entry.lst partmap-normal_mod-normal_menu_entry.lst handler-normal_mod-normal_menu_entry.lst parttool-normal_mod-normal_menu_entry.lst video-normal_mod-normal_menu_entry.lst terminal-normal_mod-normal_menu_entry.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_menu_entry-extra.1

COMMANDFILES += cmd-normal_mod-normal_menu_entry.lst
FSFILES += fs-normal_mod-normal_menu_entry.lst
PARTTOOLFILES += parttool-normal_mod-normal_menu_entry.lst
PARTMAPFILES += partmap-normal_mod-normal_menu_entry.lst
HANDLERFILES += handler-normal_mod-normal_menu_entry.lst
TERMINALFILES += terminal-normal_mod-normal_menu_entry.lst
VIDEOFILES += video-normal_mod-normal_menu_entry.lst

cmd-normal_mod-normal_menu_entry.lst: normal/menu_entry.c $(normal/menu_entry.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_menu_entry.lst: normal/menu_entry.c $(normal/menu_entry.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_menu_entry.lst: normal/menu_entry.c $(normal/menu_entry.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_menu_entry.lst: normal/menu_entry.c $(normal/menu_entry.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_menu_entry.lst: normal/menu_entry.c $(normal/menu_entry.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_menu_entry.lst: normal/menu_entry.c $(normal/menu_entry.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_menu_entry.lst: normal/menu_entry.c $(normal/menu_entry.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_menu_text.o: normal/menu_text.c $(normal/menu_text.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/menu_text.c\" -MD -c -o $@ $<
-include normal_mod-normal_menu_text.d

clean-module-normal_mod-normal_menu_text-extra.1:
	rm -f cmd-normal_mod-normal_menu_text.lst fs-normal_mod-normal_menu_text.lst partmap-normal_mod-normal_menu_text.lst handler-normal_mod-normal_menu_text.lst parttool-normal_mod-normal_menu_text.lst video-normal_mod-normal_menu_text.lst terminal-normal_mod-normal_menu_text.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_menu_text-extra.1

COMMANDFILES += cmd-normal_mod-normal_menu_text.lst
FSFILES += fs-normal_mod-normal_menu_text.lst
PARTTOOLFILES += parttool-normal_mod-normal_menu_text.lst
PARTMAPFILES += partmap-normal_mod-normal_menu_text.lst
HANDLERFILES += handler-normal_mod-normal_menu_text.lst
TERMINALFILES += terminal-normal_mod-normal_menu_text.lst
VIDEOFILES += video-normal_mod-normal_menu_text.lst

cmd-normal_mod-normal_menu_text.lst: normal/menu_text.c $(normal/menu_text.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_menu_text.lst: normal/menu_text.c $(normal/menu_text.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_menu_text.lst: normal/menu_text.c $(normal/menu_text.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_menu_text.lst: normal/menu_text.c $(normal/menu_text.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_menu_text.lst: normal/menu_text.c $(normal/menu_text.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_menu_text.lst: normal/menu_text.c $(normal/menu_text.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_menu_text.lst: normal/menu_text.c $(normal/menu_text.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_charset.o: normal/charset.c $(normal/charset.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/charset.c\" -MD -c -o $@ $<
-include normal_mod-normal_charset.d

clean-module-normal_mod-normal_charset-extra.1:
	rm -f cmd-normal_mod-normal_charset.lst fs-normal_mod-normal_charset.lst partmap-normal_mod-normal_charset.lst handler-normal_mod-normal_charset.lst parttool-normal_mod-normal_charset.lst video-normal_mod-normal_charset.lst terminal-normal_mod-normal_charset.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_charset-extra.1

COMMANDFILES += cmd-normal_mod-normal_charset.lst
FSFILES += fs-normal_mod-normal_charset.lst
PARTTOOLFILES += parttool-normal_mod-normal_charset.lst
PARTMAPFILES += partmap-normal_mod-normal_charset.lst
HANDLERFILES += handler-normal_mod-normal_charset.lst
TERMINALFILES += terminal-normal_mod-normal_charset.lst
VIDEOFILES += video-normal_mod-normal_charset.lst

cmd-normal_mod-normal_charset.lst: normal/charset.c $(normal/charset.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_charset.lst: normal/charset.c $(normal/charset.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_charset.lst: normal/charset.c $(normal/charset.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_charset.lst: normal/charset.c $(normal/charset.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_charset.lst: normal/charset.c $(normal/charset.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_charset.lst: normal/charset.c $(normal/charset.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_charset.lst: normal/charset.c $(normal/charset.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_misc.o: normal/misc.c $(normal/misc.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/misc.c\" -MD -c -o $@ $<
-include normal_mod-normal_misc.d

clean-module-normal_mod-normal_misc-extra.1:
	rm -f cmd-normal_mod-normal_misc.lst fs-normal_mod-normal_misc.lst partmap-normal_mod-normal_misc.lst handler-normal_mod-normal_misc.lst parttool-normal_mod-normal_misc.lst video-normal_mod-normal_misc.lst terminal-normal_mod-normal_misc.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_misc-extra.1

COMMANDFILES += cmd-normal_mod-normal_misc.lst
FSFILES += fs-normal_mod-normal_misc.lst
PARTTOOLFILES += parttool-normal_mod-normal_misc.lst
PARTMAPFILES += partmap-normal_mod-normal_misc.lst
HANDLERFILES += handler-normal_mod-normal_misc.lst
TERMINALFILES += terminal-normal_mod-normal_misc.lst
VIDEOFILES += video-normal_mod-normal_misc.lst

cmd-normal_mod-normal_misc.lst: normal/misc.c $(normal/misc.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_misc.lst: normal/misc.c $(normal/misc.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_misc.lst: normal/misc.c $(normal/misc.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_misc.lst: normal/misc.c $(normal/misc.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_misc.lst: normal/misc.c $(normal/misc.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_misc.lst: normal/misc.c $(normal/misc.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_misc.lst: normal/misc.c $(normal/misc.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_crypto.o: normal/crypto.c $(normal/crypto.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/crypto.c\" -MD -c -o $@ $<
-include normal_mod-normal_crypto.d

clean-module-normal_mod-normal_crypto-extra.1:
	rm -f cmd-normal_mod-normal_crypto.lst fs-normal_mod-normal_crypto.lst partmap-normal_mod-normal_crypto.lst handler-normal_mod-normal_crypto.lst parttool-normal_mod-normal_crypto.lst video-normal_mod-normal_crypto.lst terminal-normal_mod-normal_crypto.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_crypto-extra.1

COMMANDFILES += cmd-normal_mod-normal_crypto.lst
FSFILES += fs-normal_mod-normal_crypto.lst
PARTTOOLFILES += parttool-normal_mod-normal_crypto.lst
PARTMAPFILES += partmap-normal_mod-normal_crypto.lst
HANDLERFILES += handler-normal_mod-normal_crypto.lst
TERMINALFILES += terminal-normal_mod-normal_crypto.lst
VIDEOFILES += video-normal_mod-normal_crypto.lst

cmd-normal_mod-normal_crypto.lst: normal/crypto.c $(normal/crypto.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_crypto.lst: normal/crypto.c $(normal/crypto.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_crypto.lst: normal/crypto.c $(normal/crypto.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_crypto.lst: normal/crypto.c $(normal/crypto.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_crypto.lst: normal/crypto.c $(normal/crypto.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_crypto.lst: normal/crypto.c $(normal/crypto.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_crypto.lst: normal/crypto.c $(normal/crypto.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_term.o: normal/term.c $(normal/term.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/term.c\" -MD -c -o $@ $<
-include normal_mod-normal_term.d

clean-module-normal_mod-normal_term-extra.1:
	rm -f cmd-normal_mod-normal_term.lst fs-normal_mod-normal_term.lst partmap-normal_mod-normal_term.lst handler-normal_mod-normal_term.lst parttool-normal_mod-normal_term.lst video-normal_mod-normal_term.lst terminal-normal_mod-normal_term.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_term-extra.1

COMMANDFILES += cmd-normal_mod-normal_term.lst
FSFILES += fs-normal_mod-normal_term.lst
PARTTOOLFILES += parttool-normal_mod-normal_term.lst
PARTMAPFILES += partmap-normal_mod-normal_term.lst
HANDLERFILES += handler-normal_mod-normal_term.lst
TERMINALFILES += terminal-normal_mod-normal_term.lst
VIDEOFILES += video-normal_mod-normal_term.lst

cmd-normal_mod-normal_term.lst: normal/term.c $(normal/term.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_term.lst: normal/term.c $(normal/term.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_term.lst: normal/term.c $(normal/term.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_term.lst: normal/term.c $(normal/term.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_term.lst: normal/term.c $(normal/term.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_term.lst: normal/term.c $(normal/term.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_term.lst: normal/term.c $(normal/term.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-normal_context.o: normal/context.c $(normal/context.c_DEPENDENCIES)
	$(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"normal/context.c\" -MD -c -o $@ $<
-include normal_mod-normal_context.d

clean-module-normal_mod-normal_context-extra.1:
	rm -f cmd-normal_mod-normal_context.lst fs-normal_mod-normal_context.lst partmap-normal_mod-normal_context.lst handler-normal_mod-normal_context.lst parttool-normal_mod-normal_context.lst video-normal_mod-normal_context.lst terminal-normal_mod-normal_context.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-normal_context-extra.1

COMMANDFILES += cmd-normal_mod-normal_context.lst
FSFILES += fs-normal_mod-normal_context.lst
PARTTOOLFILES += parttool-normal_mod-normal_context.lst
PARTMAPFILES += partmap-normal_mod-normal_context.lst
HANDLERFILES += handler-normal_mod-normal_context.lst
TERMINALFILES += terminal-normal_mod-normal_context.lst
VIDEOFILES += video-normal_mod-normal_context.lst

cmd-normal_mod-normal_context.lst: normal/context.c $(normal/context.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-normal_context.lst: normal/context.c $(normal/context.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-normal_context.lst: normal/context.c $(normal/context.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-normal_context.lst: normal/context.c $(normal/context.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-normal_context.lst: normal/context.c $(normal/context.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-normal_context.lst: normal/context.c $(normal/context.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-normal_context.lst: normal/context.c $(normal/context.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Inormal -I$(srcdir)/normal $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-script_main.o: script/main.c $(script/main.c_DEPENDENCIES)
	$(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"script/main.c\" -MD -c -o $@ $<
-include normal_mod-script_main.d

clean-module-normal_mod-script_main-extra.1:
	rm -f cmd-normal_mod-script_main.lst fs-normal_mod-script_main.lst partmap-normal_mod-script_main.lst handler-normal_mod-script_main.lst parttool-normal_mod-script_main.lst video-normal_mod-script_main.lst terminal-normal_mod-script_main.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-script_main-extra.1

COMMANDFILES += cmd-normal_mod-script_main.lst
FSFILES += fs-normal_mod-script_main.lst
PARTTOOLFILES += parttool-normal_mod-script_main.lst
PARTMAPFILES += partmap-normal_mod-script_main.lst
HANDLERFILES += handler-normal_mod-script_main.lst
TERMINALFILES += terminal-normal_mod-script_main.lst
VIDEOFILES += video-normal_mod-script_main.lst

cmd-normal_mod-script_main.lst: script/main.c $(script/main.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-script_main.lst: script/main.c $(script/main.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-script_main.lst: script/main.c $(script/main.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-script_main.lst: script/main.c $(script/main.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-script_main.lst: script/main.c $(script/main.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-script_main.lst: script/main.c $(script/main.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-script_main.lst: script/main.c $(script/main.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-script_script.o: script/script.c $(script/script.c_DEPENDENCIES)
	$(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"script/script.c\" -MD -c -o $@ $<
-include normal_mod-script_script.d

clean-module-normal_mod-script_script-extra.1:
	rm -f cmd-normal_mod-script_script.lst fs-normal_mod-script_script.lst partmap-normal_mod-script_script.lst handler-normal_mod-script_script.lst parttool-normal_mod-script_script.lst video-normal_mod-script_script.lst terminal-normal_mod-script_script.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-script_script-extra.1

COMMANDFILES += cmd-normal_mod-script_script.lst
FSFILES += fs-normal_mod-script_script.lst
PARTTOOLFILES += parttool-normal_mod-script_script.lst
PARTMAPFILES += partmap-normal_mod-script_script.lst
HANDLERFILES += handler-normal_mod-script_script.lst
TERMINALFILES += terminal-normal_mod-script_script.lst
VIDEOFILES += video-normal_mod-script_script.lst

cmd-normal_mod-script_script.lst: script/script.c $(script/script.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-script_script.lst: script/script.c $(script/script.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-script_script.lst: script/script.c $(script/script.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-script_script.lst: script/script.c $(script/script.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-script_script.lst: script/script.c $(script/script.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-script_script.lst: script/script.c $(script/script.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-script_script.lst: script/script.c $(script/script.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-script_execute.o: script/execute.c $(script/execute.c_DEPENDENCIES)
	$(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"script/execute.c\" -MD -c -o $@ $<
-include normal_mod-script_execute.d

clean-module-normal_mod-script_execute-extra.1:
	rm -f cmd-normal_mod-script_execute.lst fs-normal_mod-script_execute.lst partmap-normal_mod-script_execute.lst handler-normal_mod-script_execute.lst parttool-normal_mod-script_execute.lst video-normal_mod-script_execute.lst terminal-normal_mod-script_execute.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-script_execute-extra.1

COMMANDFILES += cmd-normal_mod-script_execute.lst
FSFILES += fs-normal_mod-script_execute.lst
PARTTOOLFILES += parttool-normal_mod-script_execute.lst
PARTMAPFILES += partmap-normal_mod-script_execute.lst
HANDLERFILES += handler-normal_mod-script_execute.lst
TERMINALFILES += terminal-normal_mod-script_execute.lst
VIDEOFILES += video-normal_mod-script_execute.lst

cmd-normal_mod-script_execute.lst: script/execute.c $(script/execute.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-script_execute.lst: script/execute.c $(script/execute.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-script_execute.lst: script/execute.c $(script/execute.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-script_execute.lst: script/execute.c $(script/execute.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-script_execute.lst: script/execute.c $(script/execute.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-script_execute.lst: script/execute.c $(script/execute.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-script_execute.lst: script/execute.c $(script/execute.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-unidata.o: unidata.c $(unidata.c_DEPENDENCIES)
	$(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"unidata.c\" -MD -c -o $@ $<
-include normal_mod-unidata.d

clean-module-normal_mod-unidata-extra.1:
	rm -f cmd-normal_mod-unidata.lst fs-normal_mod-unidata.lst partmap-normal_mod-unidata.lst handler-normal_mod-unidata.lst parttool-normal_mod-unidata.lst video-normal_mod-unidata.lst terminal-normal_mod-unidata.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-unidata-extra.1

COMMANDFILES += cmd-normal_mod-unidata.lst
FSFILES += fs-normal_mod-unidata.lst
PARTTOOLFILES += parttool-normal_mod-unidata.lst
PARTMAPFILES += partmap-normal_mod-unidata.lst
HANDLERFILES += handler-normal_mod-unidata.lst
TERMINALFILES += terminal-normal_mod-unidata.lst
VIDEOFILES += video-normal_mod-unidata.lst

cmd-normal_mod-unidata.lst: unidata.c $(unidata.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-unidata.lst: unidata.c $(unidata.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-unidata.lst: unidata.c $(unidata.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-unidata.lst: unidata.c $(unidata.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-unidata.lst: unidata.c $(unidata.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-unidata.lst: unidata.c $(unidata.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-unidata.lst: unidata.c $(unidata.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-script_function.o: script/function.c $(script/function.c_DEPENDENCIES)
	$(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"script/function.c\" -MD -c -o $@ $<
-include normal_mod-script_function.d

clean-module-normal_mod-script_function-extra.1:
	rm -f cmd-normal_mod-script_function.lst fs-normal_mod-script_function.lst partmap-normal_mod-script_function.lst handler-normal_mod-script_function.lst parttool-normal_mod-script_function.lst video-normal_mod-script_function.lst terminal-normal_mod-script_function.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-script_function-extra.1

COMMANDFILES += cmd-normal_mod-script_function.lst
FSFILES += fs-normal_mod-script_function.lst
PARTTOOLFILES += parttool-normal_mod-script_function.lst
PARTMAPFILES += partmap-normal_mod-script_function.lst
HANDLERFILES += handler-normal_mod-script_function.lst
TERMINALFILES += terminal-normal_mod-script_function.lst
VIDEOFILES += video-normal_mod-script_function.lst

cmd-normal_mod-script_function.lst: script/function.c $(script/function.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-script_function.lst: script/function.c $(script/function.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-script_function.lst: script/function.c $(script/function.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-script_function.lst: script/function.c $(script/function.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-script_function.lst: script/function.c $(script/function.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-script_function.lst: script/function.c $(script/function.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-script_function.lst: script/function.c $(script/function.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-script_lexer.o: script/lexer.c $(script/lexer.c_DEPENDENCIES)
	$(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"script/lexer.c\" -MD -c -o $@ $<
-include normal_mod-script_lexer.d

clean-module-normal_mod-script_lexer-extra.1:
	rm -f cmd-normal_mod-script_lexer.lst fs-normal_mod-script_lexer.lst partmap-normal_mod-script_lexer.lst handler-normal_mod-script_lexer.lst parttool-normal_mod-script_lexer.lst video-normal_mod-script_lexer.lst terminal-normal_mod-script_lexer.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-script_lexer-extra.1

COMMANDFILES += cmd-normal_mod-script_lexer.lst
FSFILES += fs-normal_mod-script_lexer.lst
PARTTOOLFILES += parttool-normal_mod-script_lexer.lst
PARTMAPFILES += partmap-normal_mod-script_lexer.lst
HANDLERFILES += handler-normal_mod-script_lexer.lst
TERMINALFILES += terminal-normal_mod-script_lexer.lst
VIDEOFILES += video-normal_mod-script_lexer.lst

cmd-normal_mod-script_lexer.lst: script/lexer.c $(script/lexer.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-script_lexer.lst: script/lexer.c $(script/lexer.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-script_lexer.lst: script/lexer.c $(script/lexer.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-script_lexer.lst: script/lexer.c $(script/lexer.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-script_lexer.lst: script/lexer.c $(script/lexer.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-script_lexer.lst: script/lexer.c $(script/lexer.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-script_lexer.lst: script/lexer.c $(script/lexer.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iscript -I$(srcdir)/script $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-grub_script_tab.o: grub_script.tab.c $(grub_script.tab.c_DEPENDENCIES)
	$(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"grub_script.tab.c\" -MD -c -o $@ $<
-include normal_mod-grub_script_tab.d

clean-module-normal_mod-grub_script_tab-extra.1:
	rm -f cmd-normal_mod-grub_script_tab.lst fs-normal_mod-grub_script_tab.lst partmap-normal_mod-grub_script_tab.lst handler-normal_mod-grub_script_tab.lst parttool-normal_mod-grub_script_tab.lst video-normal_mod-grub_script_tab.lst terminal-normal_mod-grub_script_tab.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-grub_script_tab-extra.1

COMMANDFILES += cmd-normal_mod-grub_script_tab.lst
FSFILES += fs-normal_mod-grub_script_tab.lst
PARTTOOLFILES += parttool-normal_mod-grub_script_tab.lst
PARTMAPFILES += partmap-normal_mod-grub_script_tab.lst
HANDLERFILES += handler-normal_mod-grub_script_tab.lst
TERMINALFILES += terminal-normal_mod-grub_script_tab.lst
VIDEOFILES += video-normal_mod-grub_script_tab.lst

cmd-normal_mod-grub_script_tab.lst: grub_script.tab.c $(grub_script.tab.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-grub_script_tab.lst: grub_script.tab.c $(grub_script.tab.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-grub_script_tab.lst: grub_script.tab.c $(grub_script.tab.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-grub_script_tab.lst: grub_script.tab.c $(grub_script.tab.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-grub_script_tab.lst: grub_script.tab.c $(grub_script.tab.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-grub_script_tab.lst: grub_script.tab.c $(grub_script.tab.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-grub_script_tab.lst: grub_script.tab.c $(grub_script.tab.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod-grub_script_yy.o: grub_script.yy.c $(grub_script.yy.c_DEPENDENCIES)
	$(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -DGRUB_FILE=\"grub_script.yy.c\" -MD -c -o $@ $<
-include normal_mod-grub_script_yy.d

clean-module-normal_mod-grub_script_yy-extra.1:
	rm -f cmd-normal_mod-grub_script_yy.lst fs-normal_mod-grub_script_yy.lst partmap-normal_mod-grub_script_yy.lst handler-normal_mod-grub_script_yy.lst parttool-normal_mod-grub_script_yy.lst video-normal_mod-grub_script_yy.lst terminal-normal_mod-grub_script_yy.lst

CLEAN_MODULE_TARGETS += clean-module-normal_mod-grub_script_yy-extra.1

COMMANDFILES += cmd-normal_mod-grub_script_yy.lst
FSFILES += fs-normal_mod-grub_script_yy.lst
PARTTOOLFILES += parttool-normal_mod-grub_script_yy.lst
PARTMAPFILES += partmap-normal_mod-grub_script_yy.lst
HANDLERFILES += handler-normal_mod-grub_script_yy.lst
TERMINALFILES += terminal-normal_mod-grub_script_yy.lst
VIDEOFILES += video-normal_mod-grub_script_yy.lst

cmd-normal_mod-grub_script_yy.lst: grub_script.yy.c $(grub_script.yy.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh normal > $@ || (rm -f $@; exit 1)

fs-normal_mod-grub_script_yy.lst: grub_script.yy.c $(grub_script.yy.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh normal > $@ || (rm -f $@; exit 1)

parttool-normal_mod-grub_script_yy.lst: grub_script.yy.c $(grub_script.yy.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh normal > $@ || (rm -f $@; exit 1)

partmap-normal_mod-grub_script_yy.lst: grub_script.yy.c $(grub_script.yy.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh normal > $@ || (rm -f $@; exit 1)

handler-normal_mod-grub_script_yy.lst: grub_script.yy.c $(grub_script.yy.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh normal > $@ || (rm -f $@; exit 1)

terminal-normal_mod-grub_script_yy.lst: grub_script.yy.c $(grub_script.yy.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh normal > $@ || (rm -f $@; exit 1)

video-normal_mod-grub_script_yy.lst: grub_script.yy.c $(grub_script.yy.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(normal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh normal > $@ || (rm -f $@; exit 1)

normal_mod_CFLAGS = $(COMMON_CFLAGS) $(POSIX_CFLAGS) -Wno-error
normal_mod_LDFLAGS = $(COMMON_LDFLAGS)

ifneq (, $(FONT_SOURCE))
font/font.c_DEPENDENCIES = ascii.h
endif

# Common Video Subsystem specific modules.
# On Yeeloong it's part of kernel
ifneq ($(platform), yeeloong)

# For video.mod.
pkglib_MODULES += video.mod
video_mod_SOURCES = video/video.c

clean-module-video.mod.1:
	rm -f video.mod mod-video.o mod-video.c pre-video.o video_mod-video_video.o und-video.lst

CLEAN_MODULE_TARGETS += clean-module-video.mod.1

clean-module-video.mod-symbol.1:
	rm -f def-video.lst

CLEAN_MODULE_TARGETS += clean-module-video.mod-symbol.1
DEFSYMFILES += def-video.lst
mostlyclean-module-video.mod.1:
	rm -f video_mod-video_video.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-video.mod.1
UNDSYMFILES += und-video.lst

ifeq ($(TARGET_NO_MODULES), yes)
video.mod: pre-video.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(video_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-video.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
video.mod: pre-video.o mod-video.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(video_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-video.o mod-video.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
video.mod: pre-video.o mod-video.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(video_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-video.o mod-video.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-video.o: $(video_mod_DEPENDENCIES) video_mod-video_video.o
	-rm -f $@
	$(TARGET_CC) $(video_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ video_mod-video_video.o

mod-video.o: mod-video.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(video_mod_CFLAGS) -DGRUB_FILE=\"mod-video.c\" -c -o $@ $<

mod-video.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'video' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-video.lst: pre-video.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 video/' > $@
else
def-video.lst: pre-video.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 video/' > $@
endif

und-video.lst: pre-video.o
	echo 'video' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

video_mod-video_video.o: video/video.c $(video/video.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_mod_CFLAGS) -DGRUB_FILE=\"video/video.c\" -MD -c -o $@ $<
-include video_mod-video_video.d

clean-module-video_mod-video_video-extra.1:
	rm -f cmd-video_mod-video_video.lst fs-video_mod-video_video.lst partmap-video_mod-video_video.lst handler-video_mod-video_video.lst parttool-video_mod-video_video.lst video-video_mod-video_video.lst terminal-video_mod-video_video.lst

CLEAN_MODULE_TARGETS += clean-module-video_mod-video_video-extra.1

COMMANDFILES += cmd-video_mod-video_video.lst
FSFILES += fs-video_mod-video_video.lst
PARTTOOLFILES += parttool-video_mod-video_video.lst
PARTMAPFILES += partmap-video_mod-video_video.lst
HANDLERFILES += handler-video_mod-video_video.lst
TERMINALFILES += terminal-video_mod-video_video.lst
VIDEOFILES += video-video_mod-video_video.lst

cmd-video_mod-video_video.lst: video/video.c $(video/video.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh video > $@ || (rm -f $@; exit 1)

fs-video_mod-video_video.lst: video/video.c $(video/video.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh video > $@ || (rm -f $@; exit 1)

parttool-video_mod-video_video.lst: video/video.c $(video/video.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh video > $@ || (rm -f $@; exit 1)

partmap-video_mod-video_video.lst: video/video.c $(video/video.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh video > $@ || (rm -f $@; exit 1)

handler-video_mod-video_video.lst: video/video.c $(video/video.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh video > $@ || (rm -f $@; exit 1)

terminal-video_mod-video_video.lst: video/video.c $(video/video.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh video > $@ || (rm -f $@; exit 1)

video-video_mod-video_video.lst: video/video.c $(video/video.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh video > $@ || (rm -f $@; exit 1)

video_mod_CFLAGS = $(COMMON_CFLAGS)
video_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += video_fb.mod
video_fb_mod_SOURCES = video/fb/video_fb.c video/fb/fbblit.c \
		  video/fb/fbfill.c video/fb/fbutil.c

clean-module-video_fb.mod.1:
	rm -f video_fb.mod mod-video_fb.o mod-video_fb.c pre-video_fb.o video_fb_mod-video_fb_video_fb.o video_fb_mod-video_fb_fbblit.o video_fb_mod-video_fb_fbfill.o video_fb_mod-video_fb_fbutil.o und-video_fb.lst

CLEAN_MODULE_TARGETS += clean-module-video_fb.mod.1

clean-module-video_fb.mod-symbol.1:
	rm -f def-video_fb.lst

CLEAN_MODULE_TARGETS += clean-module-video_fb.mod-symbol.1
DEFSYMFILES += def-video_fb.lst
mostlyclean-module-video_fb.mod.1:
	rm -f video_fb_mod-video_fb_video_fb.d video_fb_mod-video_fb_fbblit.d video_fb_mod-video_fb_fbfill.d video_fb_mod-video_fb_fbutil.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-video_fb.mod.1
UNDSYMFILES += und-video_fb.lst

ifeq ($(TARGET_NO_MODULES), yes)
video_fb.mod: pre-video_fb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(video_fb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-video_fb.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
video_fb.mod: pre-video_fb.o mod-video_fb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(video_fb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-video_fb.o mod-video_fb.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
video_fb.mod: pre-video_fb.o mod-video_fb.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(video_fb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-video_fb.o mod-video_fb.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-video_fb.o: $(video_fb_mod_DEPENDENCIES) video_fb_mod-video_fb_video_fb.o video_fb_mod-video_fb_fbblit.o video_fb_mod-video_fb_fbfill.o video_fb_mod-video_fb_fbutil.o
	-rm -f $@
	$(TARGET_CC) $(video_fb_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ video_fb_mod-video_fb_video_fb.o video_fb_mod-video_fb_fbblit.o video_fb_mod-video_fb_fbfill.o video_fb_mod-video_fb_fbutil.o

mod-video_fb.o: mod-video_fb.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -DGRUB_FILE=\"mod-video_fb.c\" -c -o $@ $<

mod-video_fb.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'video_fb' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-video_fb.lst: pre-video_fb.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 video_fb/' > $@
else
def-video_fb.lst: pre-video_fb.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 video_fb/' > $@
endif

und-video_fb.lst: pre-video_fb.o
	echo 'video_fb' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

video_fb_mod-video_fb_video_fb.o: video/fb/video_fb.c $(video/fb/video_fb.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -DGRUB_FILE=\"video/fb/video_fb.c\" -MD -c -o $@ $<
-include video_fb_mod-video_fb_video_fb.d

clean-module-video_fb_mod-video_fb_video_fb-extra.1:
	rm -f cmd-video_fb_mod-video_fb_video_fb.lst fs-video_fb_mod-video_fb_video_fb.lst partmap-video_fb_mod-video_fb_video_fb.lst handler-video_fb_mod-video_fb_video_fb.lst parttool-video_fb_mod-video_fb_video_fb.lst video-video_fb_mod-video_fb_video_fb.lst terminal-video_fb_mod-video_fb_video_fb.lst

CLEAN_MODULE_TARGETS += clean-module-video_fb_mod-video_fb_video_fb-extra.1

COMMANDFILES += cmd-video_fb_mod-video_fb_video_fb.lst
FSFILES += fs-video_fb_mod-video_fb_video_fb.lst
PARTTOOLFILES += parttool-video_fb_mod-video_fb_video_fb.lst
PARTMAPFILES += partmap-video_fb_mod-video_fb_video_fb.lst
HANDLERFILES += handler-video_fb_mod-video_fb_video_fb.lst
TERMINALFILES += terminal-video_fb_mod-video_fb_video_fb.lst
VIDEOFILES += video-video_fb_mod-video_fb_video_fb.lst

cmd-video_fb_mod-video_fb_video_fb.lst: video/fb/video_fb.c $(video/fb/video_fb.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh video_fb > $@ || (rm -f $@; exit 1)

fs-video_fb_mod-video_fb_video_fb.lst: video/fb/video_fb.c $(video/fb/video_fb.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh video_fb > $@ || (rm -f $@; exit 1)

parttool-video_fb_mod-video_fb_video_fb.lst: video/fb/video_fb.c $(video/fb/video_fb.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh video_fb > $@ || (rm -f $@; exit 1)

partmap-video_fb_mod-video_fb_video_fb.lst: video/fb/video_fb.c $(video/fb/video_fb.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh video_fb > $@ || (rm -f $@; exit 1)

handler-video_fb_mod-video_fb_video_fb.lst: video/fb/video_fb.c $(video/fb/video_fb.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh video_fb > $@ || (rm -f $@; exit 1)

terminal-video_fb_mod-video_fb_video_fb.lst: video/fb/video_fb.c $(video/fb/video_fb.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh video_fb > $@ || (rm -f $@; exit 1)

video-video_fb_mod-video_fb_video_fb.lst: video/fb/video_fb.c $(video/fb/video_fb.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh video_fb > $@ || (rm -f $@; exit 1)

video_fb_mod-video_fb_fbblit.o: video/fb/fbblit.c $(video/fb/fbblit.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -DGRUB_FILE=\"video/fb/fbblit.c\" -MD -c -o $@ $<
-include video_fb_mod-video_fb_fbblit.d

clean-module-video_fb_mod-video_fb_fbblit-extra.1:
	rm -f cmd-video_fb_mod-video_fb_fbblit.lst fs-video_fb_mod-video_fb_fbblit.lst partmap-video_fb_mod-video_fb_fbblit.lst handler-video_fb_mod-video_fb_fbblit.lst parttool-video_fb_mod-video_fb_fbblit.lst video-video_fb_mod-video_fb_fbblit.lst terminal-video_fb_mod-video_fb_fbblit.lst

CLEAN_MODULE_TARGETS += clean-module-video_fb_mod-video_fb_fbblit-extra.1

COMMANDFILES += cmd-video_fb_mod-video_fb_fbblit.lst
FSFILES += fs-video_fb_mod-video_fb_fbblit.lst
PARTTOOLFILES += parttool-video_fb_mod-video_fb_fbblit.lst
PARTMAPFILES += partmap-video_fb_mod-video_fb_fbblit.lst
HANDLERFILES += handler-video_fb_mod-video_fb_fbblit.lst
TERMINALFILES += terminal-video_fb_mod-video_fb_fbblit.lst
VIDEOFILES += video-video_fb_mod-video_fb_fbblit.lst

cmd-video_fb_mod-video_fb_fbblit.lst: video/fb/fbblit.c $(video/fb/fbblit.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh video_fb > $@ || (rm -f $@; exit 1)

fs-video_fb_mod-video_fb_fbblit.lst: video/fb/fbblit.c $(video/fb/fbblit.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh video_fb > $@ || (rm -f $@; exit 1)

parttool-video_fb_mod-video_fb_fbblit.lst: video/fb/fbblit.c $(video/fb/fbblit.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh video_fb > $@ || (rm -f $@; exit 1)

partmap-video_fb_mod-video_fb_fbblit.lst: video/fb/fbblit.c $(video/fb/fbblit.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh video_fb > $@ || (rm -f $@; exit 1)

handler-video_fb_mod-video_fb_fbblit.lst: video/fb/fbblit.c $(video/fb/fbblit.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh video_fb > $@ || (rm -f $@; exit 1)

terminal-video_fb_mod-video_fb_fbblit.lst: video/fb/fbblit.c $(video/fb/fbblit.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh video_fb > $@ || (rm -f $@; exit 1)

video-video_fb_mod-video_fb_fbblit.lst: video/fb/fbblit.c $(video/fb/fbblit.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh video_fb > $@ || (rm -f $@; exit 1)

video_fb_mod-video_fb_fbfill.o: video/fb/fbfill.c $(video/fb/fbfill.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -DGRUB_FILE=\"video/fb/fbfill.c\" -MD -c -o $@ $<
-include video_fb_mod-video_fb_fbfill.d

clean-module-video_fb_mod-video_fb_fbfill-extra.1:
	rm -f cmd-video_fb_mod-video_fb_fbfill.lst fs-video_fb_mod-video_fb_fbfill.lst partmap-video_fb_mod-video_fb_fbfill.lst handler-video_fb_mod-video_fb_fbfill.lst parttool-video_fb_mod-video_fb_fbfill.lst video-video_fb_mod-video_fb_fbfill.lst terminal-video_fb_mod-video_fb_fbfill.lst

CLEAN_MODULE_TARGETS += clean-module-video_fb_mod-video_fb_fbfill-extra.1

COMMANDFILES += cmd-video_fb_mod-video_fb_fbfill.lst
FSFILES += fs-video_fb_mod-video_fb_fbfill.lst
PARTTOOLFILES += parttool-video_fb_mod-video_fb_fbfill.lst
PARTMAPFILES += partmap-video_fb_mod-video_fb_fbfill.lst
HANDLERFILES += handler-video_fb_mod-video_fb_fbfill.lst
TERMINALFILES += terminal-video_fb_mod-video_fb_fbfill.lst
VIDEOFILES += video-video_fb_mod-video_fb_fbfill.lst

cmd-video_fb_mod-video_fb_fbfill.lst: video/fb/fbfill.c $(video/fb/fbfill.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh video_fb > $@ || (rm -f $@; exit 1)

fs-video_fb_mod-video_fb_fbfill.lst: video/fb/fbfill.c $(video/fb/fbfill.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh video_fb > $@ || (rm -f $@; exit 1)

parttool-video_fb_mod-video_fb_fbfill.lst: video/fb/fbfill.c $(video/fb/fbfill.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh video_fb > $@ || (rm -f $@; exit 1)

partmap-video_fb_mod-video_fb_fbfill.lst: video/fb/fbfill.c $(video/fb/fbfill.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh video_fb > $@ || (rm -f $@; exit 1)

handler-video_fb_mod-video_fb_fbfill.lst: video/fb/fbfill.c $(video/fb/fbfill.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh video_fb > $@ || (rm -f $@; exit 1)

terminal-video_fb_mod-video_fb_fbfill.lst: video/fb/fbfill.c $(video/fb/fbfill.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh video_fb > $@ || (rm -f $@; exit 1)

video-video_fb_mod-video_fb_fbfill.lst: video/fb/fbfill.c $(video/fb/fbfill.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh video_fb > $@ || (rm -f $@; exit 1)

video_fb_mod-video_fb_fbutil.o: video/fb/fbutil.c $(video/fb/fbutil.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -DGRUB_FILE=\"video/fb/fbutil.c\" -MD -c -o $@ $<
-include video_fb_mod-video_fb_fbutil.d

clean-module-video_fb_mod-video_fb_fbutil-extra.1:
	rm -f cmd-video_fb_mod-video_fb_fbutil.lst fs-video_fb_mod-video_fb_fbutil.lst partmap-video_fb_mod-video_fb_fbutil.lst handler-video_fb_mod-video_fb_fbutil.lst parttool-video_fb_mod-video_fb_fbutil.lst video-video_fb_mod-video_fb_fbutil.lst terminal-video_fb_mod-video_fb_fbutil.lst

CLEAN_MODULE_TARGETS += clean-module-video_fb_mod-video_fb_fbutil-extra.1

COMMANDFILES += cmd-video_fb_mod-video_fb_fbutil.lst
FSFILES += fs-video_fb_mod-video_fb_fbutil.lst
PARTTOOLFILES += parttool-video_fb_mod-video_fb_fbutil.lst
PARTMAPFILES += partmap-video_fb_mod-video_fb_fbutil.lst
HANDLERFILES += handler-video_fb_mod-video_fb_fbutil.lst
TERMINALFILES += terminal-video_fb_mod-video_fb_fbutil.lst
VIDEOFILES += video-video_fb_mod-video_fb_fbutil.lst

cmd-video_fb_mod-video_fb_fbutil.lst: video/fb/fbutil.c $(video/fb/fbutil.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh video_fb > $@ || (rm -f $@; exit 1)

fs-video_fb_mod-video_fb_fbutil.lst: video/fb/fbutil.c $(video/fb/fbutil.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh video_fb > $@ || (rm -f $@; exit 1)

parttool-video_fb_mod-video_fb_fbutil.lst: video/fb/fbutil.c $(video/fb/fbutil.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh video_fb > $@ || (rm -f $@; exit 1)

partmap-video_fb_mod-video_fb_fbutil.lst: video/fb/fbutil.c $(video/fb/fbutil.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh video_fb > $@ || (rm -f $@; exit 1)

handler-video_fb_mod-video_fb_fbutil.lst: video/fb/fbutil.c $(video/fb/fbutil.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh video_fb > $@ || (rm -f $@; exit 1)

terminal-video_fb_mod-video_fb_fbutil.lst: video/fb/fbutil.c $(video/fb/fbutil.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh video_fb > $@ || (rm -f $@; exit 1)

video-video_fb_mod-video_fb_fbutil.lst: video/fb/fbutil.c $(video/fb/fbutil.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/fb -I$(srcdir)/video/fb $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(video_fb_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh video_fb > $@ || (rm -f $@; exit 1)

video_fb_mod_CFLAGS = $(COMMON_CFLAGS)
video_fb_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For bitmap.mod
pkglib_MODULES += bitmap.mod
bitmap_mod_SOURCES = video/bitmap.c

clean-module-bitmap.mod.1:
	rm -f bitmap.mod mod-bitmap.o mod-bitmap.c pre-bitmap.o bitmap_mod-video_bitmap.o und-bitmap.lst

CLEAN_MODULE_TARGETS += clean-module-bitmap.mod.1

clean-module-bitmap.mod-symbol.1:
	rm -f def-bitmap.lst

CLEAN_MODULE_TARGETS += clean-module-bitmap.mod-symbol.1
DEFSYMFILES += def-bitmap.lst
mostlyclean-module-bitmap.mod.1:
	rm -f bitmap_mod-video_bitmap.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-bitmap.mod.1
UNDSYMFILES += und-bitmap.lst

ifeq ($(TARGET_NO_MODULES), yes)
bitmap.mod: pre-bitmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(bitmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-bitmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
bitmap.mod: pre-bitmap.o mod-bitmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(bitmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-bitmap.o mod-bitmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
bitmap.mod: pre-bitmap.o mod-bitmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(bitmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-bitmap.o mod-bitmap.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-bitmap.o: $(bitmap_mod_DEPENDENCIES) bitmap_mod-video_bitmap.o
	-rm -f $@
	$(TARGET_CC) $(bitmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ bitmap_mod-video_bitmap.o

mod-bitmap.o: mod-bitmap.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(bitmap_mod_CFLAGS) -DGRUB_FILE=\"mod-bitmap.c\" -c -o $@ $<

mod-bitmap.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'bitmap' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-bitmap.lst: pre-bitmap.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 bitmap/' > $@
else
def-bitmap.lst: pre-bitmap.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 bitmap/' > $@
endif

und-bitmap.lst: pre-bitmap.o
	echo 'bitmap' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

bitmap_mod-video_bitmap.o: video/bitmap.c $(video/bitmap.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_mod_CFLAGS) -DGRUB_FILE=\"video/bitmap.c\" -MD -c -o $@ $<
-include bitmap_mod-video_bitmap.d

clean-module-bitmap_mod-video_bitmap-extra.1:
	rm -f cmd-bitmap_mod-video_bitmap.lst fs-bitmap_mod-video_bitmap.lst partmap-bitmap_mod-video_bitmap.lst handler-bitmap_mod-video_bitmap.lst parttool-bitmap_mod-video_bitmap.lst video-bitmap_mod-video_bitmap.lst terminal-bitmap_mod-video_bitmap.lst

CLEAN_MODULE_TARGETS += clean-module-bitmap_mod-video_bitmap-extra.1

COMMANDFILES += cmd-bitmap_mod-video_bitmap.lst
FSFILES += fs-bitmap_mod-video_bitmap.lst
PARTTOOLFILES += parttool-bitmap_mod-video_bitmap.lst
PARTMAPFILES += partmap-bitmap_mod-video_bitmap.lst
HANDLERFILES += handler-bitmap_mod-video_bitmap.lst
TERMINALFILES += terminal-bitmap_mod-video_bitmap.lst
VIDEOFILES += video-bitmap_mod-video_bitmap.lst

cmd-bitmap_mod-video_bitmap.lst: video/bitmap.c $(video/bitmap.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh bitmap > $@ || (rm -f $@; exit 1)

fs-bitmap_mod-video_bitmap.lst: video/bitmap.c $(video/bitmap.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bitmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh bitmap > $@ || (rm -f $@; exit 1)

parttool-bitmap_mod-video_bitmap.lst: video/bitmap.c $(video/bitmap.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh bitmap > $@ || (rm -f $@; exit 1)

partmap-bitmap_mod-video_bitmap.lst: video/bitmap.c $(video/bitmap.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bitmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh bitmap > $@ || (rm -f $@; exit 1)

handler-bitmap_mod-video_bitmap.lst: video/bitmap.c $(video/bitmap.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh bitmap > $@ || (rm -f $@; exit 1)

terminal-bitmap_mod-video_bitmap.lst: video/bitmap.c $(video/bitmap.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh bitmap > $@ || (rm -f $@; exit 1)

video-bitmap_mod-video_bitmap.lst: video/bitmap.c $(video/bitmap.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bitmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh bitmap > $@ || (rm -f $@; exit 1)

bitmap_mod_CFLAGS = $(COMMON_CFLAGS)
bitmap_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For bitmap_scale.mod
pkglib_MODULES += bitmap_scale.mod
bitmap_scale_mod_SOURCES = video/bitmap_scale.c

clean-module-bitmap_scale.mod.1:
	rm -f bitmap_scale.mod mod-bitmap_scale.o mod-bitmap_scale.c pre-bitmap_scale.o bitmap_scale_mod-video_bitmap_scale.o und-bitmap_scale.lst

CLEAN_MODULE_TARGETS += clean-module-bitmap_scale.mod.1

clean-module-bitmap_scale.mod-symbol.1:
	rm -f def-bitmap_scale.lst

CLEAN_MODULE_TARGETS += clean-module-bitmap_scale.mod-symbol.1
DEFSYMFILES += def-bitmap_scale.lst
mostlyclean-module-bitmap_scale.mod.1:
	rm -f bitmap_scale_mod-video_bitmap_scale.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-bitmap_scale.mod.1
UNDSYMFILES += und-bitmap_scale.lst

ifeq ($(TARGET_NO_MODULES), yes)
bitmap_scale.mod: pre-bitmap_scale.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(bitmap_scale_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-bitmap_scale.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
bitmap_scale.mod: pre-bitmap_scale.o mod-bitmap_scale.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(bitmap_scale_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-bitmap_scale.o mod-bitmap_scale.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
bitmap_scale.mod: pre-bitmap_scale.o mod-bitmap_scale.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(bitmap_scale_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-bitmap_scale.o mod-bitmap_scale.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-bitmap_scale.o: $(bitmap_scale_mod_DEPENDENCIES) bitmap_scale_mod-video_bitmap_scale.o
	-rm -f $@
	$(TARGET_CC) $(bitmap_scale_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ bitmap_scale_mod-video_bitmap_scale.o

mod-bitmap_scale.o: mod-bitmap_scale.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(bitmap_scale_mod_CFLAGS) -DGRUB_FILE=\"mod-bitmap_scale.c\" -c -o $@ $<

mod-bitmap_scale.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'bitmap_scale' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-bitmap_scale.lst: pre-bitmap_scale.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 bitmap_scale/' > $@
else
def-bitmap_scale.lst: pre-bitmap_scale.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 bitmap_scale/' > $@
endif

und-bitmap_scale.lst: pre-bitmap_scale.o
	echo 'bitmap_scale' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

bitmap_scale_mod-video_bitmap_scale.o: video/bitmap_scale.c $(video/bitmap_scale.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_scale_mod_CFLAGS) -DGRUB_FILE=\"video/bitmap_scale.c\" -MD -c -o $@ $<
-include bitmap_scale_mod-video_bitmap_scale.d

clean-module-bitmap_scale_mod-video_bitmap_scale-extra.1:
	rm -f cmd-bitmap_scale_mod-video_bitmap_scale.lst fs-bitmap_scale_mod-video_bitmap_scale.lst partmap-bitmap_scale_mod-video_bitmap_scale.lst handler-bitmap_scale_mod-video_bitmap_scale.lst parttool-bitmap_scale_mod-video_bitmap_scale.lst video-bitmap_scale_mod-video_bitmap_scale.lst terminal-bitmap_scale_mod-video_bitmap_scale.lst

CLEAN_MODULE_TARGETS += clean-module-bitmap_scale_mod-video_bitmap_scale-extra.1

COMMANDFILES += cmd-bitmap_scale_mod-video_bitmap_scale.lst
FSFILES += fs-bitmap_scale_mod-video_bitmap_scale.lst
PARTTOOLFILES += parttool-bitmap_scale_mod-video_bitmap_scale.lst
PARTMAPFILES += partmap-bitmap_scale_mod-video_bitmap_scale.lst
HANDLERFILES += handler-bitmap_scale_mod-video_bitmap_scale.lst
TERMINALFILES += terminal-bitmap_scale_mod-video_bitmap_scale.lst
VIDEOFILES += video-bitmap_scale_mod-video_bitmap_scale.lst

cmd-bitmap_scale_mod-video_bitmap_scale.lst: video/bitmap_scale.c $(video/bitmap_scale.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_scale_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh bitmap_scale > $@ || (rm -f $@; exit 1)

fs-bitmap_scale_mod-video_bitmap_scale.lst: video/bitmap_scale.c $(video/bitmap_scale.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bitmap_scale_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh bitmap_scale > $@ || (rm -f $@; exit 1)

parttool-bitmap_scale_mod-video_bitmap_scale.lst: video/bitmap_scale.c $(video/bitmap_scale.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_scale_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh bitmap_scale > $@ || (rm -f $@; exit 1)

partmap-bitmap_scale_mod-video_bitmap_scale.lst: video/bitmap_scale.c $(video/bitmap_scale.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bitmap_scale_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh bitmap_scale > $@ || (rm -f $@; exit 1)

handler-bitmap_scale_mod-video_bitmap_scale.lst: video/bitmap_scale.c $(video/bitmap_scale.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_scale_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh bitmap_scale > $@ || (rm -f $@; exit 1)

terminal-bitmap_scale_mod-video_bitmap_scale.lst: video/bitmap_scale.c $(video/bitmap_scale.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bitmap_scale_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh bitmap_scale > $@ || (rm -f $@; exit 1)

video-bitmap_scale_mod-video_bitmap_scale.lst: video/bitmap_scale.c $(video/bitmap_scale.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo -I$(srcdir)/video $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bitmap_scale_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh bitmap_scale > $@ || (rm -f $@; exit 1)

bitmap_scale_mod_CFLAGS = $(COMMON_CFLAGS)
bitmap_scale_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += font.mod
font_mod_SOURCES = font/font_cmd.c font/font.c

clean-module-font.mod.1:
	rm -f font.mod mod-font.o mod-font.c pre-font.o font_mod-font_font_cmd.o font_mod-font_font.o und-font.lst

CLEAN_MODULE_TARGETS += clean-module-font.mod.1

clean-module-font.mod-symbol.1:
	rm -f def-font.lst

CLEAN_MODULE_TARGETS += clean-module-font.mod-symbol.1
DEFSYMFILES += def-font.lst
mostlyclean-module-font.mod.1:
	rm -f font_mod-font_font_cmd.d font_mod-font_font.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-font.mod.1
UNDSYMFILES += und-font.lst

ifeq ($(TARGET_NO_MODULES), yes)
font.mod: pre-font.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(font_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-font.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
font.mod: pre-font.o mod-font.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(font_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-font.o mod-font.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
font.mod: pre-font.o mod-font.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(font_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-font.o mod-font.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-font.o: $(font_mod_DEPENDENCIES) font_mod-font_font_cmd.o font_mod-font_font.o
	-rm -f $@
	$(TARGET_CC) $(font_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ font_mod-font_font_cmd.o font_mod-font_font.o

mod-font.o: mod-font.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(font_mod_CFLAGS) -DGRUB_FILE=\"mod-font.c\" -c -o $@ $<

mod-font.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'font' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-font.lst: pre-font.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 font/' > $@
else
def-font.lst: pre-font.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 font/' > $@
endif

und-font.lst: pre-font.o
	echo 'font' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

font_mod-font_font_cmd.o: font/font_cmd.c $(font/font_cmd.c_DEPENDENCIES)
	$(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -DGRUB_FILE=\"font/font_cmd.c\" -MD -c -o $@ $<
-include font_mod-font_font_cmd.d

clean-module-font_mod-font_font_cmd-extra.1:
	rm -f cmd-font_mod-font_font_cmd.lst fs-font_mod-font_font_cmd.lst partmap-font_mod-font_font_cmd.lst handler-font_mod-font_font_cmd.lst parttool-font_mod-font_font_cmd.lst video-font_mod-font_font_cmd.lst terminal-font_mod-font_font_cmd.lst

CLEAN_MODULE_TARGETS += clean-module-font_mod-font_font_cmd-extra.1

COMMANDFILES += cmd-font_mod-font_font_cmd.lst
FSFILES += fs-font_mod-font_font_cmd.lst
PARTTOOLFILES += parttool-font_mod-font_font_cmd.lst
PARTMAPFILES += partmap-font_mod-font_font_cmd.lst
HANDLERFILES += handler-font_mod-font_font_cmd.lst
TERMINALFILES += terminal-font_mod-font_font_cmd.lst
VIDEOFILES += video-font_mod-font_font_cmd.lst

cmd-font_mod-font_font_cmd.lst: font/font_cmd.c $(font/font_cmd.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh font > $@ || (rm -f $@; exit 1)

fs-font_mod-font_font_cmd.lst: font/font_cmd.c $(font/font_cmd.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh font > $@ || (rm -f $@; exit 1)

parttool-font_mod-font_font_cmd.lst: font/font_cmd.c $(font/font_cmd.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh font > $@ || (rm -f $@; exit 1)

partmap-font_mod-font_font_cmd.lst: font/font_cmd.c $(font/font_cmd.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh font > $@ || (rm -f $@; exit 1)

handler-font_mod-font_font_cmd.lst: font/font_cmd.c $(font/font_cmd.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh font > $@ || (rm -f $@; exit 1)

terminal-font_mod-font_font_cmd.lst: font/font_cmd.c $(font/font_cmd.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh font > $@ || (rm -f $@; exit 1)

video-font_mod-font_font_cmd.lst: font/font_cmd.c $(font/font_cmd.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh font > $@ || (rm -f $@; exit 1)

font_mod-font_font.o: font/font.c $(font/font.c_DEPENDENCIES)
	$(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -DGRUB_FILE=\"font/font.c\" -MD -c -o $@ $<
-include font_mod-font_font.d

clean-module-font_mod-font_font-extra.1:
	rm -f cmd-font_mod-font_font.lst fs-font_mod-font_font.lst partmap-font_mod-font_font.lst handler-font_mod-font_font.lst parttool-font_mod-font_font.lst video-font_mod-font_font.lst terminal-font_mod-font_font.lst

CLEAN_MODULE_TARGETS += clean-module-font_mod-font_font-extra.1

COMMANDFILES += cmd-font_mod-font_font.lst
FSFILES += fs-font_mod-font_font.lst
PARTTOOLFILES += parttool-font_mod-font_font.lst
PARTMAPFILES += partmap-font_mod-font_font.lst
HANDLERFILES += handler-font_mod-font_font.lst
TERMINALFILES += terminal-font_mod-font_font.lst
VIDEOFILES += video-font_mod-font_font.lst

cmd-font_mod-font_font.lst: font/font.c $(font/font.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh font > $@ || (rm -f $@; exit 1)

fs-font_mod-font_font.lst: font/font.c $(font/font.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh font > $@ || (rm -f $@; exit 1)

parttool-font_mod-font_font.lst: font/font.c $(font/font.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh font > $@ || (rm -f $@; exit 1)

partmap-font_mod-font_font.lst: font/font.c $(font/font.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh font > $@ || (rm -f $@; exit 1)

handler-font_mod-font_font.lst: font/font.c $(font/font.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh font > $@ || (rm -f $@; exit 1)

terminal-font_mod-font_font.lst: font/font.c $(font/font.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh font > $@ || (rm -f $@; exit 1)

video-font_mod-font_font.lst: font/font.c $(font/font.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ifont -I$(srcdir)/font $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(font_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh font > $@ || (rm -f $@; exit 1)

font_mod_CFLAGS = $(COMMON_CFLAGS)
font_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For gfxterm.mod.
pkglib_MODULES += gfxterm.mod
gfxterm_mod_SOURCES = term/gfxterm.c

clean-module-gfxterm.mod.1:
	rm -f gfxterm.mod mod-gfxterm.o mod-gfxterm.c pre-gfxterm.o gfxterm_mod-term_gfxterm.o und-gfxterm.lst

CLEAN_MODULE_TARGETS += clean-module-gfxterm.mod.1

clean-module-gfxterm.mod-symbol.1:
	rm -f def-gfxterm.lst

CLEAN_MODULE_TARGETS += clean-module-gfxterm.mod-symbol.1
DEFSYMFILES += def-gfxterm.lst
mostlyclean-module-gfxterm.mod.1:
	rm -f gfxterm_mod-term_gfxterm.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-gfxterm.mod.1
UNDSYMFILES += und-gfxterm.lst

ifeq ($(TARGET_NO_MODULES), yes)
gfxterm.mod: pre-gfxterm.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gfxterm_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gfxterm.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
gfxterm.mod: pre-gfxterm.o mod-gfxterm.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gfxterm_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gfxterm.o mod-gfxterm.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
gfxterm.mod: pre-gfxterm.o mod-gfxterm.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(gfxterm_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-gfxterm.o mod-gfxterm.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-gfxterm.o: $(gfxterm_mod_DEPENDENCIES) gfxterm_mod-term_gfxterm.o
	-rm -f $@
	$(TARGET_CC) $(gfxterm_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ gfxterm_mod-term_gfxterm.o

mod-gfxterm.o: mod-gfxterm.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(gfxterm_mod_CFLAGS) -DGRUB_FILE=\"mod-gfxterm.c\" -c -o $@ $<

mod-gfxterm.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'gfxterm' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-gfxterm.lst: pre-gfxterm.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 gfxterm/' > $@
else
def-gfxterm.lst: pre-gfxterm.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 gfxterm/' > $@
endif

und-gfxterm.lst: pre-gfxterm.o
	echo 'gfxterm' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

gfxterm_mod-term_gfxterm.o: term/gfxterm.c $(term/gfxterm.c_DEPENDENCIES)
	$(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxterm_mod_CFLAGS) -DGRUB_FILE=\"term/gfxterm.c\" -MD -c -o $@ $<
-include gfxterm_mod-term_gfxterm.d

clean-module-gfxterm_mod-term_gfxterm-extra.1:
	rm -f cmd-gfxterm_mod-term_gfxterm.lst fs-gfxterm_mod-term_gfxterm.lst partmap-gfxterm_mod-term_gfxterm.lst handler-gfxterm_mod-term_gfxterm.lst parttool-gfxterm_mod-term_gfxterm.lst video-gfxterm_mod-term_gfxterm.lst terminal-gfxterm_mod-term_gfxterm.lst

CLEAN_MODULE_TARGETS += clean-module-gfxterm_mod-term_gfxterm-extra.1

COMMANDFILES += cmd-gfxterm_mod-term_gfxterm.lst
FSFILES += fs-gfxterm_mod-term_gfxterm.lst
PARTTOOLFILES += parttool-gfxterm_mod-term_gfxterm.lst
PARTMAPFILES += partmap-gfxterm_mod-term_gfxterm.lst
HANDLERFILES += handler-gfxterm_mod-term_gfxterm.lst
TERMINALFILES += terminal-gfxterm_mod-term_gfxterm.lst
VIDEOFILES += video-gfxterm_mod-term_gfxterm.lst

cmd-gfxterm_mod-term_gfxterm.lst: term/gfxterm.c $(term/gfxterm.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxterm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gfxterm > $@ || (rm -f $@; exit 1)

fs-gfxterm_mod-term_gfxterm.lst: term/gfxterm.c $(term/gfxterm.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxterm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gfxterm > $@ || (rm -f $@; exit 1)

parttool-gfxterm_mod-term_gfxterm.lst: term/gfxterm.c $(term/gfxterm.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxterm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gfxterm > $@ || (rm -f $@; exit 1)

partmap-gfxterm_mod-term_gfxterm.lst: term/gfxterm.c $(term/gfxterm.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxterm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gfxterm > $@ || (rm -f $@; exit 1)

handler-gfxterm_mod-term_gfxterm.lst: term/gfxterm.c $(term/gfxterm.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxterm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gfxterm > $@ || (rm -f $@; exit 1)

terminal-gfxterm_mod-term_gfxterm.lst: term/gfxterm.c $(term/gfxterm.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gfxterm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gfxterm > $@ || (rm -f $@; exit 1)

video-gfxterm_mod-term_gfxterm.lst: term/gfxterm.c $(term/gfxterm.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iterm -I$(srcdir)/term $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gfxterm_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gfxterm > $@ || (rm -f $@; exit 1)

gfxterm_mod_CFLAGS = $(COMMON_CFLAGS)
gfxterm_mod_LDFLAGS = $(COMMON_LDFLAGS)

endif

# For videotest.mod.
pkglib_MODULES += videotest.mod
videotest_mod_SOURCES = commands/videotest.c

clean-module-videotest.mod.1:
	rm -f videotest.mod mod-videotest.o mod-videotest.c pre-videotest.o videotest_mod-commands_videotest.o und-videotest.lst

CLEAN_MODULE_TARGETS += clean-module-videotest.mod.1

clean-module-videotest.mod-symbol.1:
	rm -f def-videotest.lst

CLEAN_MODULE_TARGETS += clean-module-videotest.mod-symbol.1
DEFSYMFILES += def-videotest.lst
mostlyclean-module-videotest.mod.1:
	rm -f videotest_mod-commands_videotest.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-videotest.mod.1
UNDSYMFILES += und-videotest.lst

ifeq ($(TARGET_NO_MODULES), yes)
videotest.mod: pre-videotest.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(videotest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-videotest.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
videotest.mod: pre-videotest.o mod-videotest.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(videotest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-videotest.o mod-videotest.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
videotest.mod: pre-videotest.o mod-videotest.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(videotest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-videotest.o mod-videotest.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-videotest.o: $(videotest_mod_DEPENDENCIES) videotest_mod-commands_videotest.o
	-rm -f $@
	$(TARGET_CC) $(videotest_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ videotest_mod-commands_videotest.o

mod-videotest.o: mod-videotest.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(videotest_mod_CFLAGS) -DGRUB_FILE=\"mod-videotest.c\" -c -o $@ $<

mod-videotest.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'videotest' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-videotest.lst: pre-videotest.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 videotest/' > $@
else
def-videotest.lst: pre-videotest.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 videotest/' > $@
endif

und-videotest.lst: pre-videotest.o
	echo 'videotest' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

videotest_mod-commands_videotest.o: commands/videotest.c $(commands/videotest.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(videotest_mod_CFLAGS) -DGRUB_FILE=\"commands/videotest.c\" -MD -c -o $@ $<
-include videotest_mod-commands_videotest.d

clean-module-videotest_mod-commands_videotest-extra.1:
	rm -f cmd-videotest_mod-commands_videotest.lst fs-videotest_mod-commands_videotest.lst partmap-videotest_mod-commands_videotest.lst handler-videotest_mod-commands_videotest.lst parttool-videotest_mod-commands_videotest.lst video-videotest_mod-commands_videotest.lst terminal-videotest_mod-commands_videotest.lst

CLEAN_MODULE_TARGETS += clean-module-videotest_mod-commands_videotest-extra.1

COMMANDFILES += cmd-videotest_mod-commands_videotest.lst
FSFILES += fs-videotest_mod-commands_videotest.lst
PARTTOOLFILES += parttool-videotest_mod-commands_videotest.lst
PARTMAPFILES += partmap-videotest_mod-commands_videotest.lst
HANDLERFILES += handler-videotest_mod-commands_videotest.lst
TERMINALFILES += terminal-videotest_mod-commands_videotest.lst
VIDEOFILES += video-videotest_mod-commands_videotest.lst

cmd-videotest_mod-commands_videotest.lst: commands/videotest.c $(commands/videotest.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(videotest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh videotest > $@ || (rm -f $@; exit 1)

fs-videotest_mod-commands_videotest.lst: commands/videotest.c $(commands/videotest.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(videotest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh videotest > $@ || (rm -f $@; exit 1)

parttool-videotest_mod-commands_videotest.lst: commands/videotest.c $(commands/videotest.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(videotest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh videotest > $@ || (rm -f $@; exit 1)

partmap-videotest_mod-commands_videotest.lst: commands/videotest.c $(commands/videotest.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(videotest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh videotest > $@ || (rm -f $@; exit 1)

handler-videotest_mod-commands_videotest.lst: commands/videotest.c $(commands/videotest.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(videotest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh videotest > $@ || (rm -f $@; exit 1)

terminal-videotest_mod-commands_videotest.lst: commands/videotest.c $(commands/videotest.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(videotest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh videotest > $@ || (rm -f $@; exit 1)

video-videotest_mod-commands_videotest.lst: commands/videotest.c $(commands/videotest.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(videotest_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh videotest > $@ || (rm -f $@; exit 1)

videotest_mod_CFLAGS = $(COMMON_CFLAGS)
videotest_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For tga.mod
pkglib_MODULES += tga.mod
tga_mod_SOURCES = video/readers/tga.c

clean-module-tga.mod.1:
	rm -f tga.mod mod-tga.o mod-tga.c pre-tga.o tga_mod-video_readers_tga.o und-tga.lst

CLEAN_MODULE_TARGETS += clean-module-tga.mod.1

clean-module-tga.mod-symbol.1:
	rm -f def-tga.lst

CLEAN_MODULE_TARGETS += clean-module-tga.mod-symbol.1
DEFSYMFILES += def-tga.lst
mostlyclean-module-tga.mod.1:
	rm -f tga_mod-video_readers_tga.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-tga.mod.1
UNDSYMFILES += und-tga.lst

ifeq ($(TARGET_NO_MODULES), yes)
tga.mod: pre-tga.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(tga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-tga.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
tga.mod: pre-tga.o mod-tga.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(tga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-tga.o mod-tga.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
tga.mod: pre-tga.o mod-tga.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(tga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-tga.o mod-tga.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-tga.o: $(tga_mod_DEPENDENCIES) tga_mod-video_readers_tga.o
	-rm -f $@
	$(TARGET_CC) $(tga_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ tga_mod-video_readers_tga.o

mod-tga.o: mod-tga.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(tga_mod_CFLAGS) -DGRUB_FILE=\"mod-tga.c\" -c -o $@ $<

mod-tga.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'tga' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-tga.lst: pre-tga.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 tga/' > $@
else
def-tga.lst: pre-tga.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 tga/' > $@
endif

und-tga.lst: pre-tga.o
	echo 'tga' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

tga_mod-video_readers_tga.o: video/readers/tga.c $(video/readers/tga.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tga_mod_CFLAGS) -DGRUB_FILE=\"video/readers/tga.c\" -MD -c -o $@ $<
-include tga_mod-video_readers_tga.d

clean-module-tga_mod-video_readers_tga-extra.1:
	rm -f cmd-tga_mod-video_readers_tga.lst fs-tga_mod-video_readers_tga.lst partmap-tga_mod-video_readers_tga.lst handler-tga_mod-video_readers_tga.lst parttool-tga_mod-video_readers_tga.lst video-tga_mod-video_readers_tga.lst terminal-tga_mod-video_readers_tga.lst

CLEAN_MODULE_TARGETS += clean-module-tga_mod-video_readers_tga-extra.1

COMMANDFILES += cmd-tga_mod-video_readers_tga.lst
FSFILES += fs-tga_mod-video_readers_tga.lst
PARTTOOLFILES += parttool-tga_mod-video_readers_tga.lst
PARTMAPFILES += partmap-tga_mod-video_readers_tga.lst
HANDLERFILES += handler-tga_mod-video_readers_tga.lst
TERMINALFILES += terminal-tga_mod-video_readers_tga.lst
VIDEOFILES += video-tga_mod-video_readers_tga.lst

cmd-tga_mod-video_readers_tga.lst: video/readers/tga.c $(video/readers/tga.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh tga > $@ || (rm -f $@; exit 1)

fs-tga_mod-video_readers_tga.lst: video/readers/tga.c $(video/readers/tga.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(tga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh tga > $@ || (rm -f $@; exit 1)

parttool-tga_mod-video_readers_tga.lst: video/readers/tga.c $(video/readers/tga.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh tga > $@ || (rm -f $@; exit 1)

partmap-tga_mod-video_readers_tga.lst: video/readers/tga.c $(video/readers/tga.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(tga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh tga > $@ || (rm -f $@; exit 1)

handler-tga_mod-video_readers_tga.lst: video/readers/tga.c $(video/readers/tga.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh tga > $@ || (rm -f $@; exit 1)

terminal-tga_mod-video_readers_tga.lst: video/readers/tga.c $(video/readers/tga.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(tga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh tga > $@ || (rm -f $@; exit 1)

video-tga_mod-video_readers_tga.lst: video/readers/tga.c $(video/readers/tga.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(tga_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh tga > $@ || (rm -f $@; exit 1)

tga_mod_CFLAGS = $(COMMON_CFLAGS)
tga_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For jpeg.mod.
pkglib_MODULES += jpeg.mod
jpeg_mod_SOURCES = video/readers/jpeg.c

clean-module-jpeg.mod.1:
	rm -f jpeg.mod mod-jpeg.o mod-jpeg.c pre-jpeg.o jpeg_mod-video_readers_jpeg.o und-jpeg.lst

CLEAN_MODULE_TARGETS += clean-module-jpeg.mod.1

clean-module-jpeg.mod-symbol.1:
	rm -f def-jpeg.lst

CLEAN_MODULE_TARGETS += clean-module-jpeg.mod-symbol.1
DEFSYMFILES += def-jpeg.lst
mostlyclean-module-jpeg.mod.1:
	rm -f jpeg_mod-video_readers_jpeg.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-jpeg.mod.1
UNDSYMFILES += und-jpeg.lst

ifeq ($(TARGET_NO_MODULES), yes)
jpeg.mod: pre-jpeg.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(jpeg_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-jpeg.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
jpeg.mod: pre-jpeg.o mod-jpeg.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(jpeg_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-jpeg.o mod-jpeg.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
jpeg.mod: pre-jpeg.o mod-jpeg.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(jpeg_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-jpeg.o mod-jpeg.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-jpeg.o: $(jpeg_mod_DEPENDENCIES) jpeg_mod-video_readers_jpeg.o
	-rm -f $@
	$(TARGET_CC) $(jpeg_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ jpeg_mod-video_readers_jpeg.o

mod-jpeg.o: mod-jpeg.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(jpeg_mod_CFLAGS) -DGRUB_FILE=\"mod-jpeg.c\" -c -o $@ $<

mod-jpeg.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'jpeg' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-jpeg.lst: pre-jpeg.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 jpeg/' > $@
else
def-jpeg.lst: pre-jpeg.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 jpeg/' > $@
endif

und-jpeg.lst: pre-jpeg.o
	echo 'jpeg' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

jpeg_mod-video_readers_jpeg.o: video/readers/jpeg.c $(video/readers/jpeg.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jpeg_mod_CFLAGS) -DGRUB_FILE=\"video/readers/jpeg.c\" -MD -c -o $@ $<
-include jpeg_mod-video_readers_jpeg.d

clean-module-jpeg_mod-video_readers_jpeg-extra.1:
	rm -f cmd-jpeg_mod-video_readers_jpeg.lst fs-jpeg_mod-video_readers_jpeg.lst partmap-jpeg_mod-video_readers_jpeg.lst handler-jpeg_mod-video_readers_jpeg.lst parttool-jpeg_mod-video_readers_jpeg.lst video-jpeg_mod-video_readers_jpeg.lst terminal-jpeg_mod-video_readers_jpeg.lst

CLEAN_MODULE_TARGETS += clean-module-jpeg_mod-video_readers_jpeg-extra.1

COMMANDFILES += cmd-jpeg_mod-video_readers_jpeg.lst
FSFILES += fs-jpeg_mod-video_readers_jpeg.lst
PARTTOOLFILES += parttool-jpeg_mod-video_readers_jpeg.lst
PARTMAPFILES += partmap-jpeg_mod-video_readers_jpeg.lst
HANDLERFILES += handler-jpeg_mod-video_readers_jpeg.lst
TERMINALFILES += terminal-jpeg_mod-video_readers_jpeg.lst
VIDEOFILES += video-jpeg_mod-video_readers_jpeg.lst

cmd-jpeg_mod-video_readers_jpeg.lst: video/readers/jpeg.c $(video/readers/jpeg.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jpeg_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh jpeg > $@ || (rm -f $@; exit 1)

fs-jpeg_mod-video_readers_jpeg.lst: video/readers/jpeg.c $(video/readers/jpeg.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(jpeg_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh jpeg > $@ || (rm -f $@; exit 1)

parttool-jpeg_mod-video_readers_jpeg.lst: video/readers/jpeg.c $(video/readers/jpeg.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jpeg_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh jpeg > $@ || (rm -f $@; exit 1)

partmap-jpeg_mod-video_readers_jpeg.lst: video/readers/jpeg.c $(video/readers/jpeg.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(jpeg_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh jpeg > $@ || (rm -f $@; exit 1)

handler-jpeg_mod-video_readers_jpeg.lst: video/readers/jpeg.c $(video/readers/jpeg.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jpeg_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh jpeg > $@ || (rm -f $@; exit 1)

terminal-jpeg_mod-video_readers_jpeg.lst: video/readers/jpeg.c $(video/readers/jpeg.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(jpeg_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh jpeg > $@ || (rm -f $@; exit 1)

video-jpeg_mod-video_readers_jpeg.lst: video/readers/jpeg.c $(video/readers/jpeg.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(jpeg_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh jpeg > $@ || (rm -f $@; exit 1)

jpeg_mod_CFLAGS = $(COMMON_CFLAGS)
jpeg_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For png.mod.
pkglib_MODULES += png.mod
png_mod_SOURCES = video/readers/png.c

clean-module-png.mod.1:
	rm -f png.mod mod-png.o mod-png.c pre-png.o png_mod-video_readers_png.o und-png.lst

CLEAN_MODULE_TARGETS += clean-module-png.mod.1

clean-module-png.mod-symbol.1:
	rm -f def-png.lst

CLEAN_MODULE_TARGETS += clean-module-png.mod-symbol.1
DEFSYMFILES += def-png.lst
mostlyclean-module-png.mod.1:
	rm -f png_mod-video_readers_png.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-png.mod.1
UNDSYMFILES += und-png.lst

ifeq ($(TARGET_NO_MODULES), yes)
png.mod: pre-png.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(png_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-png.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
png.mod: pre-png.o mod-png.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(png_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-png.o mod-png.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
png.mod: pre-png.o mod-png.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(png_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-png.o mod-png.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-png.o: $(png_mod_DEPENDENCIES) png_mod-video_readers_png.o
	-rm -f $@
	$(TARGET_CC) $(png_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ png_mod-video_readers_png.o

mod-png.o: mod-png.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(png_mod_CFLAGS) -DGRUB_FILE=\"mod-png.c\" -c -o $@ $<

mod-png.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'png' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-png.lst: pre-png.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 png/' > $@
else
def-png.lst: pre-png.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 png/' > $@
endif

und-png.lst: pre-png.o
	echo 'png' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

png_mod-video_readers_png.o: video/readers/png.c $(video/readers/png.c_DEPENDENCIES)
	$(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(png_mod_CFLAGS) -DGRUB_FILE=\"video/readers/png.c\" -MD -c -o $@ $<
-include png_mod-video_readers_png.d

clean-module-png_mod-video_readers_png-extra.1:
	rm -f cmd-png_mod-video_readers_png.lst fs-png_mod-video_readers_png.lst partmap-png_mod-video_readers_png.lst handler-png_mod-video_readers_png.lst parttool-png_mod-video_readers_png.lst video-png_mod-video_readers_png.lst terminal-png_mod-video_readers_png.lst

CLEAN_MODULE_TARGETS += clean-module-png_mod-video_readers_png-extra.1

COMMANDFILES += cmd-png_mod-video_readers_png.lst
FSFILES += fs-png_mod-video_readers_png.lst
PARTTOOLFILES += parttool-png_mod-video_readers_png.lst
PARTMAPFILES += partmap-png_mod-video_readers_png.lst
HANDLERFILES += handler-png_mod-video_readers_png.lst
TERMINALFILES += terminal-png_mod-video_readers_png.lst
VIDEOFILES += video-png_mod-video_readers_png.lst

cmd-png_mod-video_readers_png.lst: video/readers/png.c $(video/readers/png.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(png_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh png > $@ || (rm -f $@; exit 1)

fs-png_mod-video_readers_png.lst: video/readers/png.c $(video/readers/png.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(png_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh png > $@ || (rm -f $@; exit 1)

parttool-png_mod-video_readers_png.lst: video/readers/png.c $(video/readers/png.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(png_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh png > $@ || (rm -f $@; exit 1)

partmap-png_mod-video_readers_png.lst: video/readers/png.c $(video/readers/png.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(png_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh png > $@ || (rm -f $@; exit 1)

handler-png_mod-video_readers_png.lst: video/readers/png.c $(video/readers/png.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(png_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh png > $@ || (rm -f $@; exit 1)

terminal-png_mod-video_readers_png.lst: video/readers/png.c $(video/readers/png.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(png_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh png > $@ || (rm -f $@; exit 1)

video-png_mod-video_readers_png.lst: video/readers/png.c $(video/readers/png.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ivideo/readers -I$(srcdir)/video/readers $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(png_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh png > $@ || (rm -f $@; exit 1)

png_mod_CFLAGS = $(COMMON_CFLAGS)
png_mod_LDFLAGS = $(COMMON_LDFLAGS)

# Misc.
pkglib_MODULES += gzio.mod elf.mod

# For elf.mod.
elf_mod_SOURCES = kern/elf.c

clean-module-elf.mod.1:
	rm -f elf.mod mod-elf.o mod-elf.c pre-elf.o elf_mod-kern_elf.o und-elf.lst

CLEAN_MODULE_TARGETS += clean-module-elf.mod.1

clean-module-elf.mod-symbol.1:
	rm -f def-elf.lst

CLEAN_MODULE_TARGETS += clean-module-elf.mod-symbol.1
DEFSYMFILES += def-elf.lst
mostlyclean-module-elf.mod.1:
	rm -f elf_mod-kern_elf.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-elf.mod.1
UNDSYMFILES += und-elf.lst

ifeq ($(TARGET_NO_MODULES), yes)
elf.mod: pre-elf.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(elf_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-elf.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
elf.mod: pre-elf.o mod-elf.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(elf_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-elf.o mod-elf.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
elf.mod: pre-elf.o mod-elf.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(elf_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-elf.o mod-elf.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-elf.o: $(elf_mod_DEPENDENCIES) elf_mod-kern_elf.o
	-rm -f $@
	$(TARGET_CC) $(elf_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ elf_mod-kern_elf.o

mod-elf.o: mod-elf.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(elf_mod_CFLAGS) -DGRUB_FILE=\"mod-elf.c\" -c -o $@ $<

mod-elf.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'elf' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-elf.lst: pre-elf.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 elf/' > $@
else
def-elf.lst: pre-elf.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 elf/' > $@
endif

und-elf.lst: pre-elf.o
	echo 'elf' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

elf_mod-kern_elf.o: kern/elf.c $(kern/elf.c_DEPENDENCIES)
	$(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(elf_mod_CFLAGS) -DGRUB_FILE=\"kern/elf.c\" -MD -c -o $@ $<
-include elf_mod-kern_elf.d

clean-module-elf_mod-kern_elf-extra.1:
	rm -f cmd-elf_mod-kern_elf.lst fs-elf_mod-kern_elf.lst partmap-elf_mod-kern_elf.lst handler-elf_mod-kern_elf.lst parttool-elf_mod-kern_elf.lst video-elf_mod-kern_elf.lst terminal-elf_mod-kern_elf.lst

CLEAN_MODULE_TARGETS += clean-module-elf_mod-kern_elf-extra.1

COMMANDFILES += cmd-elf_mod-kern_elf.lst
FSFILES += fs-elf_mod-kern_elf.lst
PARTTOOLFILES += parttool-elf_mod-kern_elf.lst
PARTMAPFILES += partmap-elf_mod-kern_elf.lst
HANDLERFILES += handler-elf_mod-kern_elf.lst
TERMINALFILES += terminal-elf_mod-kern_elf.lst
VIDEOFILES += video-elf_mod-kern_elf.lst

cmd-elf_mod-kern_elf.lst: kern/elf.c $(kern/elf.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(elf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh elf > $@ || (rm -f $@; exit 1)

fs-elf_mod-kern_elf.lst: kern/elf.c $(kern/elf.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(elf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh elf > $@ || (rm -f $@; exit 1)

parttool-elf_mod-kern_elf.lst: kern/elf.c $(kern/elf.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(elf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh elf > $@ || (rm -f $@; exit 1)

partmap-elf_mod-kern_elf.lst: kern/elf.c $(kern/elf.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(elf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh elf > $@ || (rm -f $@; exit 1)

handler-elf_mod-kern_elf.lst: kern/elf.c $(kern/elf.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(elf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh elf > $@ || (rm -f $@; exit 1)

terminal-elf_mod-kern_elf.lst: kern/elf.c $(kern/elf.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(elf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh elf > $@ || (rm -f $@; exit 1)

video-elf_mod-kern_elf.lst: kern/elf.c $(kern/elf.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ikern -I$(srcdir)/kern $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(elf_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh elf > $@ || (rm -f $@; exit 1)

elf_mod_CFLAGS = $(COMMON_CFLAGS)
elf_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For gzio.mod.
gzio_mod_SOURCES = io/gzio.c

clean-module-gzio.mod.1:
	rm -f gzio.mod mod-gzio.o mod-gzio.c pre-gzio.o gzio_mod-io_gzio.o und-gzio.lst

CLEAN_MODULE_TARGETS += clean-module-gzio.mod.1

clean-module-gzio.mod-symbol.1:
	rm -f def-gzio.lst

CLEAN_MODULE_TARGETS += clean-module-gzio.mod-symbol.1
DEFSYMFILES += def-gzio.lst
mostlyclean-module-gzio.mod.1:
	rm -f gzio_mod-io_gzio.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-gzio.mod.1
UNDSYMFILES += und-gzio.lst

ifeq ($(TARGET_NO_MODULES), yes)
gzio.mod: pre-gzio.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gzio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gzio.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
gzio.mod: pre-gzio.o mod-gzio.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gzio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gzio.o mod-gzio.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
gzio.mod: pre-gzio.o mod-gzio.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(gzio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-gzio.o mod-gzio.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-gzio.o: $(gzio_mod_DEPENDENCIES) gzio_mod-io_gzio.o
	-rm -f $@
	$(TARGET_CC) $(gzio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ gzio_mod-io_gzio.o

mod-gzio.o: mod-gzio.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(gzio_mod_CFLAGS) -DGRUB_FILE=\"mod-gzio.c\" -c -o $@ $<

mod-gzio.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'gzio' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-gzio.lst: pre-gzio.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 gzio/' > $@
else
def-gzio.lst: pre-gzio.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 gzio/' > $@
endif

und-gzio.lst: pre-gzio.o
	echo 'gzio' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

gzio_mod-io_gzio.o: io/gzio.c $(io/gzio.c_DEPENDENCIES)
	$(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gzio_mod_CFLAGS) -DGRUB_FILE=\"io/gzio.c\" -MD -c -o $@ $<
-include gzio_mod-io_gzio.d

clean-module-gzio_mod-io_gzio-extra.1:
	rm -f cmd-gzio_mod-io_gzio.lst fs-gzio_mod-io_gzio.lst partmap-gzio_mod-io_gzio.lst handler-gzio_mod-io_gzio.lst parttool-gzio_mod-io_gzio.lst video-gzio_mod-io_gzio.lst terminal-gzio_mod-io_gzio.lst

CLEAN_MODULE_TARGETS += clean-module-gzio_mod-io_gzio-extra.1

COMMANDFILES += cmd-gzio_mod-io_gzio.lst
FSFILES += fs-gzio_mod-io_gzio.lst
PARTTOOLFILES += parttool-gzio_mod-io_gzio.lst
PARTMAPFILES += partmap-gzio_mod-io_gzio.lst
HANDLERFILES += handler-gzio_mod-io_gzio.lst
TERMINALFILES += terminal-gzio_mod-io_gzio.lst
VIDEOFILES += video-gzio_mod-io_gzio.lst

cmd-gzio_mod-io_gzio.lst: io/gzio.c $(io/gzio.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gzio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gzio > $@ || (rm -f $@; exit 1)

fs-gzio_mod-io_gzio.lst: io/gzio.c $(io/gzio.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gzio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gzio > $@ || (rm -f $@; exit 1)

parttool-gzio_mod-io_gzio.lst: io/gzio.c $(io/gzio.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gzio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gzio > $@ || (rm -f $@; exit 1)

partmap-gzio_mod-io_gzio.lst: io/gzio.c $(io/gzio.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gzio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gzio > $@ || (rm -f $@; exit 1)

handler-gzio_mod-io_gzio.lst: io/gzio.c $(io/gzio.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gzio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gzio > $@ || (rm -f $@; exit 1)

terminal-gzio_mod-io_gzio.lst: io/gzio.c $(io/gzio.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gzio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gzio > $@ || (rm -f $@; exit 1)

video-gzio_mod-io_gzio.lst: io/gzio.c $(io/gzio.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gzio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gzio > $@ || (rm -f $@; exit 1)

gzio_mod_CFLAGS = $(COMMON_CFLAGS)
gzio_mod_LDFLAGS = $(COMMON_LDFLAGS)

# On Yeeloong it's part of kernel
ifneq ($(platform), yeeloong)
# For bufio.mod.
pkglib_MODULES += bufio.mod
bufio_mod_SOURCES = io/bufio.c

clean-module-bufio.mod.1:
	rm -f bufio.mod mod-bufio.o mod-bufio.c pre-bufio.o bufio_mod-io_bufio.o und-bufio.lst

CLEAN_MODULE_TARGETS += clean-module-bufio.mod.1

clean-module-bufio.mod-symbol.1:
	rm -f def-bufio.lst

CLEAN_MODULE_TARGETS += clean-module-bufio.mod-symbol.1
DEFSYMFILES += def-bufio.lst
mostlyclean-module-bufio.mod.1:
	rm -f bufio_mod-io_bufio.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-bufio.mod.1
UNDSYMFILES += und-bufio.lst

ifeq ($(TARGET_NO_MODULES), yes)
bufio.mod: pre-bufio.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(bufio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-bufio.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
bufio.mod: pre-bufio.o mod-bufio.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(bufio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-bufio.o mod-bufio.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
bufio.mod: pre-bufio.o mod-bufio.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(bufio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-bufio.o mod-bufio.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-bufio.o: $(bufio_mod_DEPENDENCIES) bufio_mod-io_bufio.o
	-rm -f $@
	$(TARGET_CC) $(bufio_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ bufio_mod-io_bufio.o

mod-bufio.o: mod-bufio.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(bufio_mod_CFLAGS) -DGRUB_FILE=\"mod-bufio.c\" -c -o $@ $<

mod-bufio.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'bufio' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-bufio.lst: pre-bufio.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 bufio/' > $@
else
def-bufio.lst: pre-bufio.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 bufio/' > $@
endif

und-bufio.lst: pre-bufio.o
	echo 'bufio' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

bufio_mod-io_bufio.o: io/bufio.c $(io/bufio.c_DEPENDENCIES)
	$(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bufio_mod_CFLAGS) -DGRUB_FILE=\"io/bufio.c\" -MD -c -o $@ $<
-include bufio_mod-io_bufio.d

clean-module-bufio_mod-io_bufio-extra.1:
	rm -f cmd-bufio_mod-io_bufio.lst fs-bufio_mod-io_bufio.lst partmap-bufio_mod-io_bufio.lst handler-bufio_mod-io_bufio.lst parttool-bufio_mod-io_bufio.lst video-bufio_mod-io_bufio.lst terminal-bufio_mod-io_bufio.lst

CLEAN_MODULE_TARGETS += clean-module-bufio_mod-io_bufio-extra.1

COMMANDFILES += cmd-bufio_mod-io_bufio.lst
FSFILES += fs-bufio_mod-io_bufio.lst
PARTTOOLFILES += parttool-bufio_mod-io_bufio.lst
PARTMAPFILES += partmap-bufio_mod-io_bufio.lst
HANDLERFILES += handler-bufio_mod-io_bufio.lst
TERMINALFILES += terminal-bufio_mod-io_bufio.lst
VIDEOFILES += video-bufio_mod-io_bufio.lst

cmd-bufio_mod-io_bufio.lst: io/bufio.c $(io/bufio.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bufio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh bufio > $@ || (rm -f $@; exit 1)

fs-bufio_mod-io_bufio.lst: io/bufio.c $(io/bufio.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bufio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh bufio > $@ || (rm -f $@; exit 1)

parttool-bufio_mod-io_bufio.lst: io/bufio.c $(io/bufio.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bufio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh bufio > $@ || (rm -f $@; exit 1)

partmap-bufio_mod-io_bufio.lst: io/bufio.c $(io/bufio.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bufio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh bufio > $@ || (rm -f $@; exit 1)

handler-bufio_mod-io_bufio.lst: io/bufio.c $(io/bufio.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bufio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh bufio > $@ || (rm -f $@; exit 1)

terminal-bufio_mod-io_bufio.lst: io/bufio.c $(io/bufio.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(bufio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh bufio > $@ || (rm -f $@; exit 1)

video-bufio_mod-io_bufio.lst: io/bufio.c $(io/bufio.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Iio -I$(srcdir)/io $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(bufio_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh bufio > $@ || (rm -f $@; exit 1)

bufio_mod_CFLAGS = $(COMMON_CFLAGS)
bufio_mod_LDFLAGS = $(COMMON_LDFLAGS)
endif

# For gettext.mod.
pkglib_MODULES += gettext.mod
gettext_mod_SOURCES = gettext/gettext.c

clean-module-gettext.mod.1:
	rm -f gettext.mod mod-gettext.o mod-gettext.c pre-gettext.o gettext_mod-gettext_gettext.o und-gettext.lst

CLEAN_MODULE_TARGETS += clean-module-gettext.mod.1

clean-module-gettext.mod-symbol.1:
	rm -f def-gettext.lst

CLEAN_MODULE_TARGETS += clean-module-gettext.mod-symbol.1
DEFSYMFILES += def-gettext.lst
mostlyclean-module-gettext.mod.1:
	rm -f gettext_mod-gettext_gettext.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-gettext.mod.1
UNDSYMFILES += und-gettext.lst

ifeq ($(TARGET_NO_MODULES), yes)
gettext.mod: pre-gettext.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gettext_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gettext.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
gettext.mod: pre-gettext.o mod-gettext.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(gettext_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-gettext.o mod-gettext.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
gettext.mod: pre-gettext.o mod-gettext.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(gettext_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-gettext.o mod-gettext.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-gettext.o: $(gettext_mod_DEPENDENCIES) gettext_mod-gettext_gettext.o
	-rm -f $@
	$(TARGET_CC) $(gettext_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ gettext_mod-gettext_gettext.o

mod-gettext.o: mod-gettext.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(gettext_mod_CFLAGS) -DGRUB_FILE=\"mod-gettext.c\" -c -o $@ $<

mod-gettext.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'gettext' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-gettext.lst: pre-gettext.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 gettext/' > $@
else
def-gettext.lst: pre-gettext.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 gettext/' > $@
endif

und-gettext.lst: pre-gettext.o
	echo 'gettext' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

gettext_mod-gettext_gettext.o: gettext/gettext.c $(gettext/gettext.c_DEPENDENCIES)
	$(TARGET_CC) -Igettext -I$(srcdir)/gettext $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gettext_mod_CFLAGS) -DGRUB_FILE=\"gettext/gettext.c\" -MD -c -o $@ $<
-include gettext_mod-gettext_gettext.d

clean-module-gettext_mod-gettext_gettext-extra.1:
	rm -f cmd-gettext_mod-gettext_gettext.lst fs-gettext_mod-gettext_gettext.lst partmap-gettext_mod-gettext_gettext.lst handler-gettext_mod-gettext_gettext.lst parttool-gettext_mod-gettext_gettext.lst video-gettext_mod-gettext_gettext.lst terminal-gettext_mod-gettext_gettext.lst

CLEAN_MODULE_TARGETS += clean-module-gettext_mod-gettext_gettext-extra.1

COMMANDFILES += cmd-gettext_mod-gettext_gettext.lst
FSFILES += fs-gettext_mod-gettext_gettext.lst
PARTTOOLFILES += parttool-gettext_mod-gettext_gettext.lst
PARTMAPFILES += partmap-gettext_mod-gettext_gettext.lst
HANDLERFILES += handler-gettext_mod-gettext_gettext.lst
TERMINALFILES += terminal-gettext_mod-gettext_gettext.lst
VIDEOFILES += video-gettext_mod-gettext_gettext.lst

cmd-gettext_mod-gettext_gettext.lst: gettext/gettext.c $(gettext/gettext.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Igettext -I$(srcdir)/gettext $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gettext_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh gettext > $@ || (rm -f $@; exit 1)

fs-gettext_mod-gettext_gettext.lst: gettext/gettext.c $(gettext/gettext.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Igettext -I$(srcdir)/gettext $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gettext_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh gettext > $@ || (rm -f $@; exit 1)

parttool-gettext_mod-gettext_gettext.lst: gettext/gettext.c $(gettext/gettext.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Igettext -I$(srcdir)/gettext $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gettext_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh gettext > $@ || (rm -f $@; exit 1)

partmap-gettext_mod-gettext_gettext.lst: gettext/gettext.c $(gettext/gettext.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Igettext -I$(srcdir)/gettext $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gettext_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh gettext > $@ || (rm -f $@; exit 1)

handler-gettext_mod-gettext_gettext.lst: gettext/gettext.c $(gettext/gettext.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Igettext -I$(srcdir)/gettext $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gettext_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh gettext > $@ || (rm -f $@; exit 1)

terminal-gettext_mod-gettext_gettext.lst: gettext/gettext.c $(gettext/gettext.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Igettext -I$(srcdir)/gettext $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(gettext_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh gettext > $@ || (rm -f $@; exit 1)

video-gettext_mod-gettext_gettext.lst: gettext/gettext.c $(gettext/gettext.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Igettext -I$(srcdir)/gettext $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(gettext_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh gettext > $@ || (rm -f $@; exit 1)

gettext_mod_CFLAGS = $(COMMON_CFLAGS)
gettext_mod_LDFLAGS = $(COMMON_LDFLAGS)

# Misc.
pkglib_MODULES += xnu_uuid.mod

# For elf.mod.
xnu_uuid_mod_SOURCES = commands/xnu_uuid.c

clean-module-xnu_uuid.mod.1:
	rm -f xnu_uuid.mod mod-xnu_uuid.o mod-xnu_uuid.c pre-xnu_uuid.o xnu_uuid_mod-commands_xnu_uuid.o und-xnu_uuid.lst

CLEAN_MODULE_TARGETS += clean-module-xnu_uuid.mod.1

clean-module-xnu_uuid.mod-symbol.1:
	rm -f def-xnu_uuid.lst

CLEAN_MODULE_TARGETS += clean-module-xnu_uuid.mod-symbol.1
DEFSYMFILES += def-xnu_uuid.lst
mostlyclean-module-xnu_uuid.mod.1:
	rm -f xnu_uuid_mod-commands_xnu_uuid.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-xnu_uuid.mod.1
UNDSYMFILES += und-xnu_uuid.lst

ifeq ($(TARGET_NO_MODULES), yes)
xnu_uuid.mod: pre-xnu_uuid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(xnu_uuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-xnu_uuid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
xnu_uuid.mod: pre-xnu_uuid.o mod-xnu_uuid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(xnu_uuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-xnu_uuid.o mod-xnu_uuid.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
xnu_uuid.mod: pre-xnu_uuid.o mod-xnu_uuid.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(xnu_uuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-xnu_uuid.o mod-xnu_uuid.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-xnu_uuid.o: $(xnu_uuid_mod_DEPENDENCIES) xnu_uuid_mod-commands_xnu_uuid.o
	-rm -f $@
	$(TARGET_CC) $(xnu_uuid_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ xnu_uuid_mod-commands_xnu_uuid.o

mod-xnu_uuid.o: mod-xnu_uuid.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(xnu_uuid_mod_CFLAGS) -DGRUB_FILE=\"mod-xnu_uuid.c\" -c -o $@ $<

mod-xnu_uuid.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'xnu_uuid' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-xnu_uuid.lst: pre-xnu_uuid.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 xnu_uuid/' > $@
else
def-xnu_uuid.lst: pre-xnu_uuid.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 xnu_uuid/' > $@
endif

und-xnu_uuid.lst: pre-xnu_uuid.o
	echo 'xnu_uuid' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

xnu_uuid_mod-commands_xnu_uuid.o: commands/xnu_uuid.c $(commands/xnu_uuid.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_uuid_mod_CFLAGS) -DGRUB_FILE=\"commands/xnu_uuid.c\" -MD -c -o $@ $<
-include xnu_uuid_mod-commands_xnu_uuid.d

clean-module-xnu_uuid_mod-commands_xnu_uuid-extra.1:
	rm -f cmd-xnu_uuid_mod-commands_xnu_uuid.lst fs-xnu_uuid_mod-commands_xnu_uuid.lst partmap-xnu_uuid_mod-commands_xnu_uuid.lst handler-xnu_uuid_mod-commands_xnu_uuid.lst parttool-xnu_uuid_mod-commands_xnu_uuid.lst video-xnu_uuid_mod-commands_xnu_uuid.lst terminal-xnu_uuid_mod-commands_xnu_uuid.lst

CLEAN_MODULE_TARGETS += clean-module-xnu_uuid_mod-commands_xnu_uuid-extra.1

COMMANDFILES += cmd-xnu_uuid_mod-commands_xnu_uuid.lst
FSFILES += fs-xnu_uuid_mod-commands_xnu_uuid.lst
PARTTOOLFILES += parttool-xnu_uuid_mod-commands_xnu_uuid.lst
PARTMAPFILES += partmap-xnu_uuid_mod-commands_xnu_uuid.lst
HANDLERFILES += handler-xnu_uuid_mod-commands_xnu_uuid.lst
TERMINALFILES += terminal-xnu_uuid_mod-commands_xnu_uuid.lst
VIDEOFILES += video-xnu_uuid_mod-commands_xnu_uuid.lst

cmd-xnu_uuid_mod-commands_xnu_uuid.lst: commands/xnu_uuid.c $(commands/xnu_uuid.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh xnu_uuid > $@ || (rm -f $@; exit 1)

fs-xnu_uuid_mod-commands_xnu_uuid.lst: commands/xnu_uuid.c $(commands/xnu_uuid.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh xnu_uuid > $@ || (rm -f $@; exit 1)

parttool-xnu_uuid_mod-commands_xnu_uuid.lst: commands/xnu_uuid.c $(commands/xnu_uuid.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh xnu_uuid > $@ || (rm -f $@; exit 1)

partmap-xnu_uuid_mod-commands_xnu_uuid.lst: commands/xnu_uuid.c $(commands/xnu_uuid.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh xnu_uuid > $@ || (rm -f $@; exit 1)

handler-xnu_uuid_mod-commands_xnu_uuid.lst: commands/xnu_uuid.c $(commands/xnu_uuid.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh xnu_uuid > $@ || (rm -f $@; exit 1)

terminal-xnu_uuid_mod-commands_xnu_uuid.lst: commands/xnu_uuid.c $(commands/xnu_uuid.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(xnu_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh xnu_uuid > $@ || (rm -f $@; exit 1)

video-xnu_uuid_mod-commands_xnu_uuid.lst: commands/xnu_uuid.c $(commands/xnu_uuid.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(xnu_uuid_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh xnu_uuid > $@ || (rm -f $@; exit 1)

xnu_uuid_mod_CFLAGS = $(COMMON_CFLAGS)
xnu_uuid_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += trig.mod
trig_mod_SOURCES = trigtables.c

clean-module-trig.mod.1:
	rm -f trig.mod mod-trig.o mod-trig.c pre-trig.o trig_mod-trigtables.o und-trig.lst

CLEAN_MODULE_TARGETS += clean-module-trig.mod.1

clean-module-trig.mod-symbol.1:
	rm -f def-trig.lst

CLEAN_MODULE_TARGETS += clean-module-trig.mod-symbol.1
DEFSYMFILES += def-trig.lst
mostlyclean-module-trig.mod.1:
	rm -f trig_mod-trigtables.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-trig.mod.1
UNDSYMFILES += und-trig.lst

ifeq ($(TARGET_NO_MODULES), yes)
trig.mod: pre-trig.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(trig_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-trig.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
trig.mod: pre-trig.o mod-trig.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(trig_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-trig.o mod-trig.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
trig.mod: pre-trig.o mod-trig.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(trig_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-trig.o mod-trig.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-trig.o: $(trig_mod_DEPENDENCIES) trig_mod-trigtables.o
	-rm -f $@
	$(TARGET_CC) $(trig_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ trig_mod-trigtables.o

mod-trig.o: mod-trig.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(trig_mod_CFLAGS) -DGRUB_FILE=\"mod-trig.c\" -c -o $@ $<

mod-trig.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'trig' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-trig.lst: pre-trig.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 trig/' > $@
else
def-trig.lst: pre-trig.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 trig/' > $@
endif

und-trig.lst: pre-trig.o
	echo 'trig' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

trig_mod-trigtables.o: trigtables.c $(trigtables.c_DEPENDENCIES)
	$(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(trig_mod_CFLAGS) -DGRUB_FILE=\"trigtables.c\" -MD -c -o $@ $<
-include trig_mod-trigtables.d

clean-module-trig_mod-trigtables-extra.1:
	rm -f cmd-trig_mod-trigtables.lst fs-trig_mod-trigtables.lst partmap-trig_mod-trigtables.lst handler-trig_mod-trigtables.lst parttool-trig_mod-trigtables.lst video-trig_mod-trigtables.lst terminal-trig_mod-trigtables.lst

CLEAN_MODULE_TARGETS += clean-module-trig_mod-trigtables-extra.1

COMMANDFILES += cmd-trig_mod-trigtables.lst
FSFILES += fs-trig_mod-trigtables.lst
PARTTOOLFILES += parttool-trig_mod-trigtables.lst
PARTMAPFILES += partmap-trig_mod-trigtables.lst
HANDLERFILES += handler-trig_mod-trigtables.lst
TERMINALFILES += terminal-trig_mod-trigtables.lst
VIDEOFILES += video-trig_mod-trigtables.lst

cmd-trig_mod-trigtables.lst: trigtables.c $(trigtables.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(trig_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh trig > $@ || (rm -f $@; exit 1)

fs-trig_mod-trigtables.lst: trigtables.c $(trigtables.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(trig_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh trig > $@ || (rm -f $@; exit 1)

parttool-trig_mod-trigtables.lst: trigtables.c $(trigtables.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(trig_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh trig > $@ || (rm -f $@; exit 1)

partmap-trig_mod-trigtables.lst: trigtables.c $(trigtables.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(trig_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh trig > $@ || (rm -f $@; exit 1)

handler-trig_mod-trigtables.lst: trigtables.c $(trigtables.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(trig_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh trig > $@ || (rm -f $@; exit 1)

terminal-trig_mod-trigtables.lst: trigtables.c $(trigtables.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(trig_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh trig > $@ || (rm -f $@; exit 1)

video-trig_mod-trigtables.lst: trigtables.c $(trigtables.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -I. -I$(srcdir)/. $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(trig_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh trig > $@ || (rm -f $@; exit 1)

trig_mod_CFLAGS = $(COMMON_CFLAGS)
trig_mod_LDFLAGS = $(COMMON_LDFLAGS)

trigtables.c: gentrigtables
	./gentrigtables > $@
DISTCLEANFILES += trigtables.c
gentrigtables: gentrigtables.c
	$(CC) -o $@ $^ $(CPPFLAGS) -lm
DISTCLEANFILES += gentrigtables

pkglib_MODULES += setjmp.mod
setjmp_mod_SOURCES = lib/$(target_cpu)/setjmp.S

clean-module-setjmp.mod.1:
	rm -f setjmp.mod mod-setjmp.o mod-setjmp.c pre-setjmp.o setjmp_mod-lib___target_cpu__setjmp.o und-setjmp.lst

CLEAN_MODULE_TARGETS += clean-module-setjmp.mod.1

clean-module-setjmp.mod-symbol.1:
	rm -f def-setjmp.lst

CLEAN_MODULE_TARGETS += clean-module-setjmp.mod-symbol.1
DEFSYMFILES += def-setjmp.lst
mostlyclean-module-setjmp.mod.1:
	rm -f setjmp_mod-lib___target_cpu__setjmp.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-setjmp.mod.1
UNDSYMFILES += und-setjmp.lst

ifeq ($(TARGET_NO_MODULES), yes)
setjmp.mod: pre-setjmp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(setjmp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-setjmp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
setjmp.mod: pre-setjmp.o mod-setjmp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(setjmp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-setjmp.o mod-setjmp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
setjmp.mod: pre-setjmp.o mod-setjmp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(setjmp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-setjmp.o mod-setjmp.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-setjmp.o: $(setjmp_mod_DEPENDENCIES) setjmp_mod-lib___target_cpu__setjmp.o
	-rm -f $@
	$(TARGET_CC) $(setjmp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ setjmp_mod-lib___target_cpu__setjmp.o

mod-setjmp.o: mod-setjmp.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(setjmp_mod_CFLAGS) -DGRUB_FILE=\"mod-setjmp.c\" -c -o $@ $<

mod-setjmp.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'setjmp' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-setjmp.lst: pre-setjmp.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 setjmp/' > $@
else
def-setjmp.lst: pre-setjmp.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 setjmp/' > $@
endif

und-setjmp.lst: pre-setjmp.o
	echo 'setjmp' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

setjmp_mod-lib___target_cpu__setjmp.o: lib/$(target_cpu)/setjmp.S $(lib/$(target_cpu)/setjmp.S_DEPENDENCIES)
	$(TARGET_CC) -Ilib/$(target_cpu) -I$(srcdir)/lib/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(setjmp_mod_ASFLAGS) -DGRUB_FILE=\"lib/$(target_cpu)/setjmp.S\" -MD -c -o $@ $<
-include setjmp_mod-lib___target_cpu__setjmp.d

clean-module-setjmp_mod-lib___target_cpu__setjmp-extra.1:
	rm -f cmd-setjmp_mod-lib___target_cpu__setjmp.lst fs-setjmp_mod-lib___target_cpu__setjmp.lst partmap-setjmp_mod-lib___target_cpu__setjmp.lst handler-setjmp_mod-lib___target_cpu__setjmp.lst parttool-setjmp_mod-lib___target_cpu__setjmp.lst video-setjmp_mod-lib___target_cpu__setjmp.lst terminal-setjmp_mod-lib___target_cpu__setjmp.lst

CLEAN_MODULE_TARGETS += clean-module-setjmp_mod-lib___target_cpu__setjmp-extra.1

COMMANDFILES += cmd-setjmp_mod-lib___target_cpu__setjmp.lst
FSFILES += fs-setjmp_mod-lib___target_cpu__setjmp.lst
PARTTOOLFILES += parttool-setjmp_mod-lib___target_cpu__setjmp.lst
PARTMAPFILES += partmap-setjmp_mod-lib___target_cpu__setjmp.lst
HANDLERFILES += handler-setjmp_mod-lib___target_cpu__setjmp.lst
TERMINALFILES += terminal-setjmp_mod-lib___target_cpu__setjmp.lst
VIDEOFILES += video-setjmp_mod-lib___target_cpu__setjmp.lst

cmd-setjmp_mod-lib___target_cpu__setjmp.lst: lib/$(target_cpu)/setjmp.S $(lib/$(target_cpu)/setjmp.S_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib/$(target_cpu) -I$(srcdir)/lib/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(setjmp_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh setjmp > $@ || (rm -f $@; exit 1)

fs-setjmp_mod-lib___target_cpu__setjmp.lst: lib/$(target_cpu)/setjmp.S $(lib/$(target_cpu)/setjmp.S_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib/$(target_cpu) -I$(srcdir)/lib/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(setjmp_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh setjmp > $@ || (rm -f $@; exit 1)

parttool-setjmp_mod-lib___target_cpu__setjmp.lst: lib/$(target_cpu)/setjmp.S $(lib/$(target_cpu)/setjmp.S_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib/$(target_cpu) -I$(srcdir)/lib/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(setjmp_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh setjmp > $@ || (rm -f $@; exit 1)

partmap-setjmp_mod-lib___target_cpu__setjmp.lst: lib/$(target_cpu)/setjmp.S $(lib/$(target_cpu)/setjmp.S_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib/$(target_cpu) -I$(srcdir)/lib/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(setjmp_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh setjmp > $@ || (rm -f $@; exit 1)

handler-setjmp_mod-lib___target_cpu__setjmp.lst: lib/$(target_cpu)/setjmp.S $(lib/$(target_cpu)/setjmp.S_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib/$(target_cpu) -I$(srcdir)/lib/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(setjmp_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh setjmp > $@ || (rm -f $@; exit 1)

terminal-setjmp_mod-lib___target_cpu__setjmp.lst: lib/$(target_cpu)/setjmp.S $(lib/$(target_cpu)/setjmp.S_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib/$(target_cpu) -I$(srcdir)/lib/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 $(TARGET_ASFLAGS) $(setjmp_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh setjmp > $@ || (rm -f $@; exit 1)

video-setjmp_mod-lib___target_cpu__setjmp.lst: lib/$(target_cpu)/setjmp.S $(lib/$(target_cpu)/setjmp.S_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib/$(target_cpu) -I$(srcdir)/lib/$(target_cpu) $(TARGET_CPPFLAGS) -DASM_FILE=1 -DGRUB_LST_GENERATOR $(TARGET_ASFLAGS) $(setjmp_mod_ASFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh setjmp > $@ || (rm -f $@; exit 1)

setjmp_mod_ASFLAGS = $(COMMON_ASFLAGS)
setjmp_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += regexp.mod
regexp_mod_SOURCES = gnulib/regex.c commands/regexp.c

clean-module-regexp.mod.1:
	rm -f regexp.mod mod-regexp.o mod-regexp.c pre-regexp.o regexp_mod-gnulib_regex.o regexp_mod-commands_regexp.o und-regexp.lst

CLEAN_MODULE_TARGETS += clean-module-regexp.mod.1

clean-module-regexp.mod-symbol.1:
	rm -f def-regexp.lst

CLEAN_MODULE_TARGETS += clean-module-regexp.mod-symbol.1
DEFSYMFILES += def-regexp.lst
mostlyclean-module-regexp.mod.1:
	rm -f regexp_mod-gnulib_regex.d regexp_mod-commands_regexp.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-regexp.mod.1
UNDSYMFILES += und-regexp.lst

ifeq ($(TARGET_NO_MODULES), yes)
regexp.mod: pre-regexp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(regexp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-regexp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
regexp.mod: pre-regexp.o mod-regexp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(regexp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-regexp.o mod-regexp.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
regexp.mod: pre-regexp.o mod-regexp.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(regexp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-regexp.o mod-regexp.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-regexp.o: $(regexp_mod_DEPENDENCIES) regexp_mod-gnulib_regex.o regexp_mod-commands_regexp.o
	-rm -f $@
	$(TARGET_CC) $(regexp_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ regexp_mod-gnulib_regex.o regexp_mod-commands_regexp.o

mod-regexp.o: mod-regexp.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -DGRUB_FILE=\"mod-regexp.c\" -c -o $@ $<

mod-regexp.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'regexp' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-regexp.lst: pre-regexp.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 regexp/' > $@
else
def-regexp.lst: pre-regexp.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 regexp/' > $@
endif

und-regexp.lst: pre-regexp.o
	echo 'regexp' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

regexp_mod-gnulib_regex.o: gnulib/regex.c $(gnulib/regex.c_DEPENDENCIES)
	$(TARGET_CC) -Ignulib -I$(srcdir)/gnulib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -DGRUB_FILE=\"gnulib/regex.c\" -MD -c -o $@ $<
-include regexp_mod-gnulib_regex.d

clean-module-regexp_mod-gnulib_regex-extra.1:
	rm -f cmd-regexp_mod-gnulib_regex.lst fs-regexp_mod-gnulib_regex.lst partmap-regexp_mod-gnulib_regex.lst handler-regexp_mod-gnulib_regex.lst parttool-regexp_mod-gnulib_regex.lst video-regexp_mod-gnulib_regex.lst terminal-regexp_mod-gnulib_regex.lst

CLEAN_MODULE_TARGETS += clean-module-regexp_mod-gnulib_regex-extra.1

COMMANDFILES += cmd-regexp_mod-gnulib_regex.lst
FSFILES += fs-regexp_mod-gnulib_regex.lst
PARTTOOLFILES += parttool-regexp_mod-gnulib_regex.lst
PARTMAPFILES += partmap-regexp_mod-gnulib_regex.lst
HANDLERFILES += handler-regexp_mod-gnulib_regex.lst
TERMINALFILES += terminal-regexp_mod-gnulib_regex.lst
VIDEOFILES += video-regexp_mod-gnulib_regex.lst

cmd-regexp_mod-gnulib_regex.lst: gnulib/regex.c $(gnulib/regex.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ignulib -I$(srcdir)/gnulib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh regexp > $@ || (rm -f $@; exit 1)

fs-regexp_mod-gnulib_regex.lst: gnulib/regex.c $(gnulib/regex.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ignulib -I$(srcdir)/gnulib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh regexp > $@ || (rm -f $@; exit 1)

parttool-regexp_mod-gnulib_regex.lst: gnulib/regex.c $(gnulib/regex.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ignulib -I$(srcdir)/gnulib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh regexp > $@ || (rm -f $@; exit 1)

partmap-regexp_mod-gnulib_regex.lst: gnulib/regex.c $(gnulib/regex.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ignulib -I$(srcdir)/gnulib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh regexp > $@ || (rm -f $@; exit 1)

handler-regexp_mod-gnulib_regex.lst: gnulib/regex.c $(gnulib/regex.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ignulib -I$(srcdir)/gnulib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh regexp > $@ || (rm -f $@; exit 1)

terminal-regexp_mod-gnulib_regex.lst: gnulib/regex.c $(gnulib/regex.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ignulib -I$(srcdir)/gnulib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh regexp > $@ || (rm -f $@; exit 1)

video-regexp_mod-gnulib_regex.lst: gnulib/regex.c $(gnulib/regex.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ignulib -I$(srcdir)/gnulib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh regexp > $@ || (rm -f $@; exit 1)

regexp_mod-commands_regexp.o: commands/regexp.c $(commands/regexp.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -DGRUB_FILE=\"commands/regexp.c\" -MD -c -o $@ $<
-include regexp_mod-commands_regexp.d

clean-module-regexp_mod-commands_regexp-extra.1:
	rm -f cmd-regexp_mod-commands_regexp.lst fs-regexp_mod-commands_regexp.lst partmap-regexp_mod-commands_regexp.lst handler-regexp_mod-commands_regexp.lst parttool-regexp_mod-commands_regexp.lst video-regexp_mod-commands_regexp.lst terminal-regexp_mod-commands_regexp.lst

CLEAN_MODULE_TARGETS += clean-module-regexp_mod-commands_regexp-extra.1

COMMANDFILES += cmd-regexp_mod-commands_regexp.lst
FSFILES += fs-regexp_mod-commands_regexp.lst
PARTTOOLFILES += parttool-regexp_mod-commands_regexp.lst
PARTMAPFILES += partmap-regexp_mod-commands_regexp.lst
HANDLERFILES += handler-regexp_mod-commands_regexp.lst
TERMINALFILES += terminal-regexp_mod-commands_regexp.lst
VIDEOFILES += video-regexp_mod-commands_regexp.lst

cmd-regexp_mod-commands_regexp.lst: commands/regexp.c $(commands/regexp.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh regexp > $@ || (rm -f $@; exit 1)

fs-regexp_mod-commands_regexp.lst: commands/regexp.c $(commands/regexp.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh regexp > $@ || (rm -f $@; exit 1)

parttool-regexp_mod-commands_regexp.lst: commands/regexp.c $(commands/regexp.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh regexp > $@ || (rm -f $@; exit 1)

partmap-regexp_mod-commands_regexp.lst: commands/regexp.c $(commands/regexp.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh regexp > $@ || (rm -f $@; exit 1)

handler-regexp_mod-commands_regexp.lst: commands/regexp.c $(commands/regexp.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh regexp > $@ || (rm -f $@; exit 1)

terminal-regexp_mod-commands_regexp.lst: commands/regexp.c $(commands/regexp.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh regexp > $@ || (rm -f $@; exit 1)

video-regexp_mod-commands_regexp.lst: commands/regexp.c $(commands/regexp.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(regexp_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh regexp > $@ || (rm -f $@; exit 1)

regexp_mod_CFLAGS = $(COMMON_CFLAGS) $(GNULIB_CFLAGS)
regexp_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += terminal.mod
terminal_mod_SOURCES = commands/terminal.c

clean-module-terminal.mod.1:
	rm -f terminal.mod mod-terminal.o mod-terminal.c pre-terminal.o terminal_mod-commands_terminal.o und-terminal.lst

CLEAN_MODULE_TARGETS += clean-module-terminal.mod.1

clean-module-terminal.mod-symbol.1:
	rm -f def-terminal.lst

CLEAN_MODULE_TARGETS += clean-module-terminal.mod-symbol.1
DEFSYMFILES += def-terminal.lst
mostlyclean-module-terminal.mod.1:
	rm -f terminal_mod-commands_terminal.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-terminal.mod.1
UNDSYMFILES += und-terminal.lst

ifeq ($(TARGET_NO_MODULES), yes)
terminal.mod: pre-terminal.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(terminal_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-terminal.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
terminal.mod: pre-terminal.o mod-terminal.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(terminal_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-terminal.o mod-terminal.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
terminal.mod: pre-terminal.o mod-terminal.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(terminal_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-terminal.o mod-terminal.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-terminal.o: $(terminal_mod_DEPENDENCIES) terminal_mod-commands_terminal.o
	-rm -f $@
	$(TARGET_CC) $(terminal_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ terminal_mod-commands_terminal.o

mod-terminal.o: mod-terminal.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(terminal_mod_CFLAGS) -DGRUB_FILE=\"mod-terminal.c\" -c -o $@ $<

mod-terminal.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'terminal' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-terminal.lst: pre-terminal.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 terminal/' > $@
else
def-terminal.lst: pre-terminal.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 terminal/' > $@
endif

und-terminal.lst: pre-terminal.o
	echo 'terminal' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

terminal_mod-commands_terminal.o: commands/terminal.c $(commands/terminal.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminal_mod_CFLAGS) -DGRUB_FILE=\"commands/terminal.c\" -MD -c -o $@ $<
-include terminal_mod-commands_terminal.d

clean-module-terminal_mod-commands_terminal-extra.1:
	rm -f cmd-terminal_mod-commands_terminal.lst fs-terminal_mod-commands_terminal.lst partmap-terminal_mod-commands_terminal.lst handler-terminal_mod-commands_terminal.lst parttool-terminal_mod-commands_terminal.lst video-terminal_mod-commands_terminal.lst terminal-terminal_mod-commands_terminal.lst

CLEAN_MODULE_TARGETS += clean-module-terminal_mod-commands_terminal-extra.1

COMMANDFILES += cmd-terminal_mod-commands_terminal.lst
FSFILES += fs-terminal_mod-commands_terminal.lst
PARTTOOLFILES += parttool-terminal_mod-commands_terminal.lst
PARTMAPFILES += partmap-terminal_mod-commands_terminal.lst
HANDLERFILES += handler-terminal_mod-commands_terminal.lst
TERMINALFILES += terminal-terminal_mod-commands_terminal.lst
VIDEOFILES += video-terminal_mod-commands_terminal.lst

cmd-terminal_mod-commands_terminal.lst: commands/terminal.c $(commands/terminal.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh terminal > $@ || (rm -f $@; exit 1)

fs-terminal_mod-commands_terminal.lst: commands/terminal.c $(commands/terminal.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(terminal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh terminal > $@ || (rm -f $@; exit 1)

parttool-terminal_mod-commands_terminal.lst: commands/terminal.c $(commands/terminal.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh terminal > $@ || (rm -f $@; exit 1)

partmap-terminal_mod-commands_terminal.lst: commands/terminal.c $(commands/terminal.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(terminal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh terminal > $@ || (rm -f $@; exit 1)

handler-terminal_mod-commands_terminal.lst: commands/terminal.c $(commands/terminal.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh terminal > $@ || (rm -f $@; exit 1)

terminal-terminal_mod-commands_terminal.lst: commands/terminal.c $(commands/terminal.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(terminal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh terminal > $@ || (rm -f $@; exit 1)

video-terminal_mod-commands_terminal.lst: commands/terminal.c $(commands/terminal.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(terminal_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh terminal > $@ || (rm -f $@; exit 1)

terminal_mod_CFLAGS = $(COMMON_CFLAGS)
terminal_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += crypto.mod
crypto_mod_SOURCES = lib/crypto.c

clean-module-crypto.mod.1:
	rm -f crypto.mod mod-crypto.o mod-crypto.c pre-crypto.o crypto_mod-lib_crypto.o und-crypto.lst

CLEAN_MODULE_TARGETS += clean-module-crypto.mod.1

clean-module-crypto.mod-symbol.1:
	rm -f def-crypto.lst

CLEAN_MODULE_TARGETS += clean-module-crypto.mod-symbol.1
DEFSYMFILES += def-crypto.lst
mostlyclean-module-crypto.mod.1:
	rm -f crypto_mod-lib_crypto.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-crypto.mod.1
UNDSYMFILES += und-crypto.lst

ifeq ($(TARGET_NO_MODULES), yes)
crypto.mod: pre-crypto.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(crypto_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-crypto.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
crypto.mod: pre-crypto.o mod-crypto.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(crypto_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-crypto.o mod-crypto.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
crypto.mod: pre-crypto.o mod-crypto.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(crypto_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-crypto.o mod-crypto.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-crypto.o: $(crypto_mod_DEPENDENCIES) crypto_mod-lib_crypto.o
	-rm -f $@
	$(TARGET_CC) $(crypto_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ crypto_mod-lib_crypto.o

mod-crypto.o: mod-crypto.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(crypto_mod_CFLAGS) -DGRUB_FILE=\"mod-crypto.c\" -c -o $@ $<

mod-crypto.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'crypto' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-crypto.lst: pre-crypto.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 crypto/' > $@
else
def-crypto.lst: pre-crypto.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 crypto/' > $@
endif

und-crypto.lst: pre-crypto.o
	echo 'crypto' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

crypto_mod-lib_crypto.o: lib/crypto.c $(lib/crypto.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crypto_mod_CFLAGS) -DGRUB_FILE=\"lib/crypto.c\" -MD -c -o $@ $<
-include crypto_mod-lib_crypto.d

clean-module-crypto_mod-lib_crypto-extra.1:
	rm -f cmd-crypto_mod-lib_crypto.lst fs-crypto_mod-lib_crypto.lst partmap-crypto_mod-lib_crypto.lst handler-crypto_mod-lib_crypto.lst parttool-crypto_mod-lib_crypto.lst video-crypto_mod-lib_crypto.lst terminal-crypto_mod-lib_crypto.lst

CLEAN_MODULE_TARGETS += clean-module-crypto_mod-lib_crypto-extra.1

COMMANDFILES += cmd-crypto_mod-lib_crypto.lst
FSFILES += fs-crypto_mod-lib_crypto.lst
PARTTOOLFILES += parttool-crypto_mod-lib_crypto.lst
PARTMAPFILES += partmap-crypto_mod-lib_crypto.lst
HANDLERFILES += handler-crypto_mod-lib_crypto.lst
TERMINALFILES += terminal-crypto_mod-lib_crypto.lst
VIDEOFILES += video-crypto_mod-lib_crypto.lst

cmd-crypto_mod-lib_crypto.lst: lib/crypto.c $(lib/crypto.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crypto_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh crypto > $@ || (rm -f $@; exit 1)

fs-crypto_mod-lib_crypto.lst: lib/crypto.c $(lib/crypto.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(crypto_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh crypto > $@ || (rm -f $@; exit 1)

parttool-crypto_mod-lib_crypto.lst: lib/crypto.c $(lib/crypto.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crypto_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh crypto > $@ || (rm -f $@; exit 1)

partmap-crypto_mod-lib_crypto.lst: lib/crypto.c $(lib/crypto.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(crypto_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh crypto > $@ || (rm -f $@; exit 1)

handler-crypto_mod-lib_crypto.lst: lib/crypto.c $(lib/crypto.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crypto_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh crypto > $@ || (rm -f $@; exit 1)

terminal-crypto_mod-lib_crypto.lst: lib/crypto.c $(lib/crypto.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(crypto_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh crypto > $@ || (rm -f $@; exit 1)

video-crypto_mod-lib_crypto.lst: lib/crypto.c $(lib/crypto.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(crypto_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh crypto > $@ || (rm -f $@; exit 1)

crypto_mod_CFLAGS = $(COMMON_CFLAGS)
crypto_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += hashsum.mod
hashsum_mod_SOURCES = commands/hashsum.c

clean-module-hashsum.mod.1:
	rm -f hashsum.mod mod-hashsum.o mod-hashsum.c pre-hashsum.o hashsum_mod-commands_hashsum.o und-hashsum.lst

CLEAN_MODULE_TARGETS += clean-module-hashsum.mod.1

clean-module-hashsum.mod-symbol.1:
	rm -f def-hashsum.lst

CLEAN_MODULE_TARGETS += clean-module-hashsum.mod-symbol.1
DEFSYMFILES += def-hashsum.lst
mostlyclean-module-hashsum.mod.1:
	rm -f hashsum_mod-commands_hashsum.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-hashsum.mod.1
UNDSYMFILES += und-hashsum.lst

ifeq ($(TARGET_NO_MODULES), yes)
hashsum.mod: pre-hashsum.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hashsum_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hashsum.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
hashsum.mod: pre-hashsum.o mod-hashsum.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(hashsum_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-hashsum.o mod-hashsum.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
hashsum.mod: pre-hashsum.o mod-hashsum.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(hashsum_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-hashsum.o mod-hashsum.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-hashsum.o: $(hashsum_mod_DEPENDENCIES) hashsum_mod-commands_hashsum.o
	-rm -f $@
	$(TARGET_CC) $(hashsum_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ hashsum_mod-commands_hashsum.o

mod-hashsum.o: mod-hashsum.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(hashsum_mod_CFLAGS) -DGRUB_FILE=\"mod-hashsum.c\" -c -o $@ $<

mod-hashsum.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'hashsum' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-hashsum.lst: pre-hashsum.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 hashsum/' > $@
else
def-hashsum.lst: pre-hashsum.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 hashsum/' > $@
endif

und-hashsum.lst: pre-hashsum.o
	echo 'hashsum' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

hashsum_mod-commands_hashsum.o: commands/hashsum.c $(commands/hashsum.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hashsum_mod_CFLAGS) -DGRUB_FILE=\"commands/hashsum.c\" -MD -c -o $@ $<
-include hashsum_mod-commands_hashsum.d

clean-module-hashsum_mod-commands_hashsum-extra.1:
	rm -f cmd-hashsum_mod-commands_hashsum.lst fs-hashsum_mod-commands_hashsum.lst partmap-hashsum_mod-commands_hashsum.lst handler-hashsum_mod-commands_hashsum.lst parttool-hashsum_mod-commands_hashsum.lst video-hashsum_mod-commands_hashsum.lst terminal-hashsum_mod-commands_hashsum.lst

CLEAN_MODULE_TARGETS += clean-module-hashsum_mod-commands_hashsum-extra.1

COMMANDFILES += cmd-hashsum_mod-commands_hashsum.lst
FSFILES += fs-hashsum_mod-commands_hashsum.lst
PARTTOOLFILES += parttool-hashsum_mod-commands_hashsum.lst
PARTMAPFILES += partmap-hashsum_mod-commands_hashsum.lst
HANDLERFILES += handler-hashsum_mod-commands_hashsum.lst
TERMINALFILES += terminal-hashsum_mod-commands_hashsum.lst
VIDEOFILES += video-hashsum_mod-commands_hashsum.lst

cmd-hashsum_mod-commands_hashsum.lst: commands/hashsum.c $(commands/hashsum.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hashsum_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh hashsum > $@ || (rm -f $@; exit 1)

fs-hashsum_mod-commands_hashsum.lst: commands/hashsum.c $(commands/hashsum.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hashsum_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh hashsum > $@ || (rm -f $@; exit 1)

parttool-hashsum_mod-commands_hashsum.lst: commands/hashsum.c $(commands/hashsum.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hashsum_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh hashsum > $@ || (rm -f $@; exit 1)

partmap-hashsum_mod-commands_hashsum.lst: commands/hashsum.c $(commands/hashsum.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hashsum_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh hashsum > $@ || (rm -f $@; exit 1)

handler-hashsum_mod-commands_hashsum.lst: commands/hashsum.c $(commands/hashsum.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hashsum_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh hashsum > $@ || (rm -f $@; exit 1)

terminal-hashsum_mod-commands_hashsum.lst: commands/hashsum.c $(commands/hashsum.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(hashsum_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh hashsum > $@ || (rm -f $@; exit 1)

video-hashsum_mod-commands_hashsum.lst: commands/hashsum.c $(commands/hashsum.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(hashsum_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh hashsum > $@ || (rm -f $@; exit 1)

hashsum_mod_CFLAGS = $(COMMON_CFLAGS)
hashsum_mod_LDFLAGS = $(COMMON_LDFLAGS)

pkglib_MODULES += pbkdf2.mod
pbkdf2_mod_SOURCES = lib/pbkdf2.c

clean-module-pbkdf2.mod.1:
	rm -f pbkdf2.mod mod-pbkdf2.o mod-pbkdf2.c pre-pbkdf2.o pbkdf2_mod-lib_pbkdf2.o und-pbkdf2.lst

CLEAN_MODULE_TARGETS += clean-module-pbkdf2.mod.1

clean-module-pbkdf2.mod-symbol.1:
	rm -f def-pbkdf2.lst

CLEAN_MODULE_TARGETS += clean-module-pbkdf2.mod-symbol.1
DEFSYMFILES += def-pbkdf2.lst
mostlyclean-module-pbkdf2.mod.1:
	rm -f pbkdf2_mod-lib_pbkdf2.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-pbkdf2.mod.1
UNDSYMFILES += und-pbkdf2.lst

ifeq ($(TARGET_NO_MODULES), yes)
pbkdf2.mod: pre-pbkdf2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(pbkdf2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-pbkdf2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
pbkdf2.mod: pre-pbkdf2.o mod-pbkdf2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(pbkdf2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-pbkdf2.o mod-pbkdf2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
pbkdf2.mod: pre-pbkdf2.o mod-pbkdf2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(pbkdf2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-pbkdf2.o mod-pbkdf2.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-pbkdf2.o: $(pbkdf2_mod_DEPENDENCIES) pbkdf2_mod-lib_pbkdf2.o
	-rm -f $@
	$(TARGET_CC) $(pbkdf2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pbkdf2_mod-lib_pbkdf2.o

mod-pbkdf2.o: mod-pbkdf2.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(pbkdf2_mod_CFLAGS) -DGRUB_FILE=\"mod-pbkdf2.c\" -c -o $@ $<

mod-pbkdf2.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'pbkdf2' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-pbkdf2.lst: pre-pbkdf2.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 pbkdf2/' > $@
else
def-pbkdf2.lst: pre-pbkdf2.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 pbkdf2/' > $@
endif

und-pbkdf2.lst: pre-pbkdf2.o
	echo 'pbkdf2' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

pbkdf2_mod-lib_pbkdf2.o: lib/pbkdf2.c $(lib/pbkdf2.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pbkdf2_mod_CFLAGS) -DGRUB_FILE=\"lib/pbkdf2.c\" -MD -c -o $@ $<
-include pbkdf2_mod-lib_pbkdf2.d

clean-module-pbkdf2_mod-lib_pbkdf2-extra.1:
	rm -f cmd-pbkdf2_mod-lib_pbkdf2.lst fs-pbkdf2_mod-lib_pbkdf2.lst partmap-pbkdf2_mod-lib_pbkdf2.lst handler-pbkdf2_mod-lib_pbkdf2.lst parttool-pbkdf2_mod-lib_pbkdf2.lst video-pbkdf2_mod-lib_pbkdf2.lst terminal-pbkdf2_mod-lib_pbkdf2.lst

CLEAN_MODULE_TARGETS += clean-module-pbkdf2_mod-lib_pbkdf2-extra.1

COMMANDFILES += cmd-pbkdf2_mod-lib_pbkdf2.lst
FSFILES += fs-pbkdf2_mod-lib_pbkdf2.lst
PARTTOOLFILES += parttool-pbkdf2_mod-lib_pbkdf2.lst
PARTMAPFILES += partmap-pbkdf2_mod-lib_pbkdf2.lst
HANDLERFILES += handler-pbkdf2_mod-lib_pbkdf2.lst
TERMINALFILES += terminal-pbkdf2_mod-lib_pbkdf2.lst
VIDEOFILES += video-pbkdf2_mod-lib_pbkdf2.lst

cmd-pbkdf2_mod-lib_pbkdf2.lst: lib/pbkdf2.c $(lib/pbkdf2.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh pbkdf2 > $@ || (rm -f $@; exit 1)

fs-pbkdf2_mod-lib_pbkdf2.lst: lib/pbkdf2.c $(lib/pbkdf2.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh pbkdf2 > $@ || (rm -f $@; exit 1)

parttool-pbkdf2_mod-lib_pbkdf2.lst: lib/pbkdf2.c $(lib/pbkdf2.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh pbkdf2 > $@ || (rm -f $@; exit 1)

partmap-pbkdf2_mod-lib_pbkdf2.lst: lib/pbkdf2.c $(lib/pbkdf2.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh pbkdf2 > $@ || (rm -f $@; exit 1)

handler-pbkdf2_mod-lib_pbkdf2.lst: lib/pbkdf2.c $(lib/pbkdf2.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh pbkdf2 > $@ || (rm -f $@; exit 1)

terminal-pbkdf2_mod-lib_pbkdf2.lst: lib/pbkdf2.c $(lib/pbkdf2.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh pbkdf2 > $@ || (rm -f $@; exit 1)

video-pbkdf2_mod-lib_pbkdf2.lst: lib/pbkdf2.c $(lib/pbkdf2.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib -I$(srcdir)/lib $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh pbkdf2 > $@ || (rm -f $@; exit 1)

pbkdf2_mod_CFLAGS = $(COMMON_CFLAGS)
pbkdf2_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For password_pbkdf2.mod.
pkglib_MODULES += password_pbkdf2.mod
password_pbkdf2_mod_SOURCES = commands/password_pbkdf2.c

clean-module-password_pbkdf2.mod.1:
	rm -f password_pbkdf2.mod mod-password_pbkdf2.o mod-password_pbkdf2.c pre-password_pbkdf2.o password_pbkdf2_mod-commands_password_pbkdf2.o und-password_pbkdf2.lst

CLEAN_MODULE_TARGETS += clean-module-password_pbkdf2.mod.1

clean-module-password_pbkdf2.mod-symbol.1:
	rm -f def-password_pbkdf2.lst

CLEAN_MODULE_TARGETS += clean-module-password_pbkdf2.mod-symbol.1
DEFSYMFILES += def-password_pbkdf2.lst
mostlyclean-module-password_pbkdf2.mod.1:
	rm -f password_pbkdf2_mod-commands_password_pbkdf2.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-password_pbkdf2.mod.1
UNDSYMFILES += und-password_pbkdf2.lst

ifeq ($(TARGET_NO_MODULES), yes)
password_pbkdf2.mod: pre-password_pbkdf2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(password_pbkdf2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-password_pbkdf2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
password_pbkdf2.mod: pre-password_pbkdf2.o mod-password_pbkdf2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(password_pbkdf2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-password_pbkdf2.o mod-password_pbkdf2.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
password_pbkdf2.mod: pre-password_pbkdf2.o mod-password_pbkdf2.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(password_pbkdf2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-password_pbkdf2.o mod-password_pbkdf2.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-password_pbkdf2.o: $(password_pbkdf2_mod_DEPENDENCIES) password_pbkdf2_mod-commands_password_pbkdf2.o
	-rm -f $@
	$(TARGET_CC) $(password_pbkdf2_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ password_pbkdf2_mod-commands_password_pbkdf2.o

mod-password_pbkdf2.o: mod-password_pbkdf2.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(password_pbkdf2_mod_CFLAGS) -DGRUB_FILE=\"mod-password_pbkdf2.c\" -c -o $@ $<

mod-password_pbkdf2.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'password_pbkdf2' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-password_pbkdf2.lst: pre-password_pbkdf2.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 password_pbkdf2/' > $@
else
def-password_pbkdf2.lst: pre-password_pbkdf2.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 password_pbkdf2/' > $@
endif

und-password_pbkdf2.lst: pre-password_pbkdf2.o
	echo 'password_pbkdf2' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

password_pbkdf2_mod-commands_password_pbkdf2.o: commands/password_pbkdf2.c $(commands/password_pbkdf2.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_pbkdf2_mod_CFLAGS) -DGRUB_FILE=\"commands/password_pbkdf2.c\" -MD -c -o $@ $<
-include password_pbkdf2_mod-commands_password_pbkdf2.d

clean-module-password_pbkdf2_mod-commands_password_pbkdf2-extra.1:
	rm -f cmd-password_pbkdf2_mod-commands_password_pbkdf2.lst fs-password_pbkdf2_mod-commands_password_pbkdf2.lst partmap-password_pbkdf2_mod-commands_password_pbkdf2.lst handler-password_pbkdf2_mod-commands_password_pbkdf2.lst parttool-password_pbkdf2_mod-commands_password_pbkdf2.lst video-password_pbkdf2_mod-commands_password_pbkdf2.lst terminal-password_pbkdf2_mod-commands_password_pbkdf2.lst

CLEAN_MODULE_TARGETS += clean-module-password_pbkdf2_mod-commands_password_pbkdf2-extra.1

COMMANDFILES += cmd-password_pbkdf2_mod-commands_password_pbkdf2.lst
FSFILES += fs-password_pbkdf2_mod-commands_password_pbkdf2.lst
PARTTOOLFILES += parttool-password_pbkdf2_mod-commands_password_pbkdf2.lst
PARTMAPFILES += partmap-password_pbkdf2_mod-commands_password_pbkdf2.lst
HANDLERFILES += handler-password_pbkdf2_mod-commands_password_pbkdf2.lst
TERMINALFILES += terminal-password_pbkdf2_mod-commands_password_pbkdf2.lst
VIDEOFILES += video-password_pbkdf2_mod-commands_password_pbkdf2.lst

cmd-password_pbkdf2_mod-commands_password_pbkdf2.lst: commands/password_pbkdf2.c $(commands/password_pbkdf2.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh password_pbkdf2 > $@ || (rm -f $@; exit 1)

fs-password_pbkdf2_mod-commands_password_pbkdf2.lst: commands/password_pbkdf2.c $(commands/password_pbkdf2.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(password_pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh password_pbkdf2 > $@ || (rm -f $@; exit 1)

parttool-password_pbkdf2_mod-commands_password_pbkdf2.lst: commands/password_pbkdf2.c $(commands/password_pbkdf2.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh password_pbkdf2 > $@ || (rm -f $@; exit 1)

partmap-password_pbkdf2_mod-commands_password_pbkdf2.lst: commands/password_pbkdf2.c $(commands/password_pbkdf2.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(password_pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh password_pbkdf2 > $@ || (rm -f $@; exit 1)

handler-password_pbkdf2_mod-commands_password_pbkdf2.lst: commands/password_pbkdf2.c $(commands/password_pbkdf2.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh password_pbkdf2 > $@ || (rm -f $@; exit 1)

terminal-password_pbkdf2_mod-commands_password_pbkdf2.lst: commands/password_pbkdf2.c $(commands/password_pbkdf2.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(password_pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh password_pbkdf2 > $@ || (rm -f $@; exit 1)

video-password_pbkdf2_mod-commands_password_pbkdf2.lst: commands/password_pbkdf2.c $(commands/password_pbkdf2.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(password_pbkdf2_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh password_pbkdf2 > $@ || (rm -f $@; exit 1)

password_pbkdf2_mod_CFLAGS = $(COMMON_CFLAGS)
password_pbkdf2_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For memdisk.mod.
pkglib_MODULES += memdisk.mod
memdisk_mod_SOURCES = disk/memdisk.c

clean-module-memdisk.mod.1:
	rm -f memdisk.mod mod-memdisk.o mod-memdisk.c pre-memdisk.o memdisk_mod-disk_memdisk.o und-memdisk.lst

CLEAN_MODULE_TARGETS += clean-module-memdisk.mod.1

clean-module-memdisk.mod-symbol.1:
	rm -f def-memdisk.lst

CLEAN_MODULE_TARGETS += clean-module-memdisk.mod-symbol.1
DEFSYMFILES += def-memdisk.lst
mostlyclean-module-memdisk.mod.1:
	rm -f memdisk_mod-disk_memdisk.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-memdisk.mod.1
UNDSYMFILES += und-memdisk.lst

ifeq ($(TARGET_NO_MODULES), yes)
memdisk.mod: pre-memdisk.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(memdisk_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-memdisk.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
memdisk.mod: pre-memdisk.o mod-memdisk.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(memdisk_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-memdisk.o mod-memdisk.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
memdisk.mod: pre-memdisk.o mod-memdisk.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(memdisk_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-memdisk.o mod-memdisk.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-memdisk.o: $(memdisk_mod_DEPENDENCIES) memdisk_mod-disk_memdisk.o
	-rm -f $@
	$(TARGET_CC) $(memdisk_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ memdisk_mod-disk_memdisk.o

mod-memdisk.o: mod-memdisk.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(memdisk_mod_CFLAGS) -DGRUB_FILE=\"mod-memdisk.c\" -c -o $@ $<

mod-memdisk.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'memdisk' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-memdisk.lst: pre-memdisk.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 memdisk/' > $@
else
def-memdisk.lst: pre-memdisk.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 memdisk/' > $@
endif

und-memdisk.lst: pre-memdisk.o
	echo 'memdisk' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

memdisk_mod-disk_memdisk.o: disk/memdisk.c $(disk/memdisk.c_DEPENDENCIES)
	$(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memdisk_mod_CFLAGS) -DGRUB_FILE=\"disk/memdisk.c\" -MD -c -o $@ $<
-include memdisk_mod-disk_memdisk.d

clean-module-memdisk_mod-disk_memdisk-extra.1:
	rm -f cmd-memdisk_mod-disk_memdisk.lst fs-memdisk_mod-disk_memdisk.lst partmap-memdisk_mod-disk_memdisk.lst handler-memdisk_mod-disk_memdisk.lst parttool-memdisk_mod-disk_memdisk.lst video-memdisk_mod-disk_memdisk.lst terminal-memdisk_mod-disk_memdisk.lst

CLEAN_MODULE_TARGETS += clean-module-memdisk_mod-disk_memdisk-extra.1

COMMANDFILES += cmd-memdisk_mod-disk_memdisk.lst
FSFILES += fs-memdisk_mod-disk_memdisk.lst
PARTTOOLFILES += parttool-memdisk_mod-disk_memdisk.lst
PARTMAPFILES += partmap-memdisk_mod-disk_memdisk.lst
HANDLERFILES += handler-memdisk_mod-disk_memdisk.lst
TERMINALFILES += terminal-memdisk_mod-disk_memdisk.lst
VIDEOFILES += video-memdisk_mod-disk_memdisk.lst

cmd-memdisk_mod-disk_memdisk.lst: disk/memdisk.c $(disk/memdisk.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memdisk_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh memdisk > $@ || (rm -f $@; exit 1)

fs-memdisk_mod-disk_memdisk.lst: disk/memdisk.c $(disk/memdisk.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(memdisk_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh memdisk > $@ || (rm -f $@; exit 1)

parttool-memdisk_mod-disk_memdisk.lst: disk/memdisk.c $(disk/memdisk.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memdisk_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh memdisk > $@ || (rm -f $@; exit 1)

partmap-memdisk_mod-disk_memdisk.lst: disk/memdisk.c $(disk/memdisk.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(memdisk_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh memdisk > $@ || (rm -f $@; exit 1)

handler-memdisk_mod-disk_memdisk.lst: disk/memdisk.c $(disk/memdisk.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memdisk_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh memdisk > $@ || (rm -f $@; exit 1)

terminal-memdisk_mod-disk_memdisk.lst: disk/memdisk.c $(disk/memdisk.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(memdisk_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh memdisk > $@ || (rm -f $@; exit 1)

video-memdisk_mod-disk_memdisk.lst: disk/memdisk.c $(disk/memdisk.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Idisk -I$(srcdir)/disk $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(memdisk_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh memdisk > $@ || (rm -f $@; exit 1)

memdisk_mod_CFLAGS = $(COMMON_CFLAGS)
memdisk_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For reboot.mod.
pkglib_MODULES += reboot.mod
reboot_mod_SOURCES = commands/reboot.c

clean-module-reboot.mod.1:
	rm -f reboot.mod mod-reboot.o mod-reboot.c pre-reboot.o reboot_mod-commands_reboot.o und-reboot.lst

CLEAN_MODULE_TARGETS += clean-module-reboot.mod.1

clean-module-reboot.mod-symbol.1:
	rm -f def-reboot.lst

CLEAN_MODULE_TARGETS += clean-module-reboot.mod-symbol.1
DEFSYMFILES += def-reboot.lst
mostlyclean-module-reboot.mod.1:
	rm -f reboot_mod-commands_reboot.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-reboot.mod.1
UNDSYMFILES += und-reboot.lst

ifeq ($(TARGET_NO_MODULES), yes)
reboot.mod: pre-reboot.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(reboot_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-reboot.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
reboot.mod: pre-reboot.o mod-reboot.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(reboot_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-reboot.o mod-reboot.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
reboot.mod: pre-reboot.o mod-reboot.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(reboot_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-reboot.o mod-reboot.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-reboot.o: $(reboot_mod_DEPENDENCIES) reboot_mod-commands_reboot.o
	-rm -f $@
	$(TARGET_CC) $(reboot_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ reboot_mod-commands_reboot.o

mod-reboot.o: mod-reboot.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(reboot_mod_CFLAGS) -DGRUB_FILE=\"mod-reboot.c\" -c -o $@ $<

mod-reboot.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'reboot' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-reboot.lst: pre-reboot.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 reboot/' > $@
else
def-reboot.lst: pre-reboot.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 reboot/' > $@
endif

und-reboot.lst: pre-reboot.o
	echo 'reboot' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

reboot_mod-commands_reboot.o: commands/reboot.c $(commands/reboot.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reboot_mod_CFLAGS) -DGRUB_FILE=\"commands/reboot.c\" -MD -c -o $@ $<
-include reboot_mod-commands_reboot.d

clean-module-reboot_mod-commands_reboot-extra.1:
	rm -f cmd-reboot_mod-commands_reboot.lst fs-reboot_mod-commands_reboot.lst partmap-reboot_mod-commands_reboot.lst handler-reboot_mod-commands_reboot.lst parttool-reboot_mod-commands_reboot.lst video-reboot_mod-commands_reboot.lst terminal-reboot_mod-commands_reboot.lst

CLEAN_MODULE_TARGETS += clean-module-reboot_mod-commands_reboot-extra.1

COMMANDFILES += cmd-reboot_mod-commands_reboot.lst
FSFILES += fs-reboot_mod-commands_reboot.lst
PARTTOOLFILES += parttool-reboot_mod-commands_reboot.lst
PARTMAPFILES += partmap-reboot_mod-commands_reboot.lst
HANDLERFILES += handler-reboot_mod-commands_reboot.lst
TERMINALFILES += terminal-reboot_mod-commands_reboot.lst
VIDEOFILES += video-reboot_mod-commands_reboot.lst

cmd-reboot_mod-commands_reboot.lst: commands/reboot.c $(commands/reboot.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reboot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh reboot > $@ || (rm -f $@; exit 1)

fs-reboot_mod-commands_reboot.lst: commands/reboot.c $(commands/reboot.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(reboot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh reboot > $@ || (rm -f $@; exit 1)

parttool-reboot_mod-commands_reboot.lst: commands/reboot.c $(commands/reboot.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reboot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh reboot > $@ || (rm -f $@; exit 1)

partmap-reboot_mod-commands_reboot.lst: commands/reboot.c $(commands/reboot.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(reboot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh reboot > $@ || (rm -f $@; exit 1)

handler-reboot_mod-commands_reboot.lst: commands/reboot.c $(commands/reboot.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reboot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh reboot > $@ || (rm -f $@; exit 1)

terminal-reboot_mod-commands_reboot.lst: commands/reboot.c $(commands/reboot.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(reboot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh reboot > $@ || (rm -f $@; exit 1)

video-reboot_mod-commands_reboot.lst: commands/reboot.c $(commands/reboot.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(reboot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh reboot > $@ || (rm -f $@; exit 1)

reboot_mod_CFLAGS = $(COMMON_CFLAGS)
reboot_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For date.mod
pkglib_MODULES += date.mod
date_mod_SOURCES = commands/date.c

clean-module-date.mod.1:
	rm -f date.mod mod-date.o mod-date.c pre-date.o date_mod-commands_date.o und-date.lst

CLEAN_MODULE_TARGETS += clean-module-date.mod.1

clean-module-date.mod-symbol.1:
	rm -f def-date.lst

CLEAN_MODULE_TARGETS += clean-module-date.mod-symbol.1
DEFSYMFILES += def-date.lst
mostlyclean-module-date.mod.1:
	rm -f date_mod-commands_date.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-date.mod.1
UNDSYMFILES += und-date.lst

ifeq ($(TARGET_NO_MODULES), yes)
date.mod: pre-date.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(date_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-date.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
date.mod: pre-date.o mod-date.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(date_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-date.o mod-date.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
date.mod: pre-date.o mod-date.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(date_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-date.o mod-date.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-date.o: $(date_mod_DEPENDENCIES) date_mod-commands_date.o
	-rm -f $@
	$(TARGET_CC) $(date_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ date_mod-commands_date.o

mod-date.o: mod-date.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(date_mod_CFLAGS) -DGRUB_FILE=\"mod-date.c\" -c -o $@ $<

mod-date.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'date' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-date.lst: pre-date.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 date/' > $@
else
def-date.lst: pre-date.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 date/' > $@
endif

und-date.lst: pre-date.o
	echo 'date' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

date_mod-commands_date.o: commands/date.c $(commands/date.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(date_mod_CFLAGS) -DGRUB_FILE=\"commands/date.c\" -MD -c -o $@ $<
-include date_mod-commands_date.d

clean-module-date_mod-commands_date-extra.1:
	rm -f cmd-date_mod-commands_date.lst fs-date_mod-commands_date.lst partmap-date_mod-commands_date.lst handler-date_mod-commands_date.lst parttool-date_mod-commands_date.lst video-date_mod-commands_date.lst terminal-date_mod-commands_date.lst

CLEAN_MODULE_TARGETS += clean-module-date_mod-commands_date-extra.1

COMMANDFILES += cmd-date_mod-commands_date.lst
FSFILES += fs-date_mod-commands_date.lst
PARTTOOLFILES += parttool-date_mod-commands_date.lst
PARTMAPFILES += partmap-date_mod-commands_date.lst
HANDLERFILES += handler-date_mod-commands_date.lst
TERMINALFILES += terminal-date_mod-commands_date.lst
VIDEOFILES += video-date_mod-commands_date.lst

cmd-date_mod-commands_date.lst: commands/date.c $(commands/date.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(date_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh date > $@ || (rm -f $@; exit 1)

fs-date_mod-commands_date.lst: commands/date.c $(commands/date.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(date_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh date > $@ || (rm -f $@; exit 1)

parttool-date_mod-commands_date.lst: commands/date.c $(commands/date.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(date_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh date > $@ || (rm -f $@; exit 1)

partmap-date_mod-commands_date.lst: commands/date.c $(commands/date.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(date_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh date > $@ || (rm -f $@; exit 1)

handler-date_mod-commands_date.lst: commands/date.c $(commands/date.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(date_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh date > $@ || (rm -f $@; exit 1)

terminal-date_mod-commands_date.lst: commands/date.c $(commands/date.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(date_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh date > $@ || (rm -f $@; exit 1)

video-date_mod-commands_date.lst: commands/date.c $(commands/date.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(date_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh date > $@ || (rm -f $@; exit 1)

date_mod_CFLAGS = $(COMMON_CFLAGS)
date_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For datehook.mod
pkglib_MODULES += datehook.mod
datehook_mod_SOURCES = hook/datehook.c

clean-module-datehook.mod.1:
	rm -f datehook.mod mod-datehook.o mod-datehook.c pre-datehook.o datehook_mod-hook_datehook.o und-datehook.lst

CLEAN_MODULE_TARGETS += clean-module-datehook.mod.1

clean-module-datehook.mod-symbol.1:
	rm -f def-datehook.lst

CLEAN_MODULE_TARGETS += clean-module-datehook.mod-symbol.1
DEFSYMFILES += def-datehook.lst
mostlyclean-module-datehook.mod.1:
	rm -f datehook_mod-hook_datehook.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-datehook.mod.1
UNDSYMFILES += und-datehook.lst

ifeq ($(TARGET_NO_MODULES), yes)
datehook.mod: pre-datehook.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(datehook_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-datehook.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
datehook.mod: pre-datehook.o mod-datehook.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(datehook_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-datehook.o mod-datehook.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
datehook.mod: pre-datehook.o mod-datehook.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(datehook_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-datehook.o mod-datehook.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-datehook.o: $(datehook_mod_DEPENDENCIES) datehook_mod-hook_datehook.o
	-rm -f $@
	$(TARGET_CC) $(datehook_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ datehook_mod-hook_datehook.o

mod-datehook.o: mod-datehook.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(datehook_mod_CFLAGS) -DGRUB_FILE=\"mod-datehook.c\" -c -o $@ $<

mod-datehook.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'datehook' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-datehook.lst: pre-datehook.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 datehook/' > $@
else
def-datehook.lst: pre-datehook.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 datehook/' > $@
endif

und-datehook.lst: pre-datehook.o
	echo 'datehook' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

datehook_mod-hook_datehook.o: hook/datehook.c $(hook/datehook.c_DEPENDENCIES)
	$(TARGET_CC) -Ihook -I$(srcdir)/hook $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datehook_mod_CFLAGS) -DGRUB_FILE=\"hook/datehook.c\" -MD -c -o $@ $<
-include datehook_mod-hook_datehook.d

clean-module-datehook_mod-hook_datehook-extra.1:
	rm -f cmd-datehook_mod-hook_datehook.lst fs-datehook_mod-hook_datehook.lst partmap-datehook_mod-hook_datehook.lst handler-datehook_mod-hook_datehook.lst parttool-datehook_mod-hook_datehook.lst video-datehook_mod-hook_datehook.lst terminal-datehook_mod-hook_datehook.lst

CLEAN_MODULE_TARGETS += clean-module-datehook_mod-hook_datehook-extra.1

COMMANDFILES += cmd-datehook_mod-hook_datehook.lst
FSFILES += fs-datehook_mod-hook_datehook.lst
PARTTOOLFILES += parttool-datehook_mod-hook_datehook.lst
PARTMAPFILES += partmap-datehook_mod-hook_datehook.lst
HANDLERFILES += handler-datehook_mod-hook_datehook.lst
TERMINALFILES += terminal-datehook_mod-hook_datehook.lst
VIDEOFILES += video-datehook_mod-hook_datehook.lst

cmd-datehook_mod-hook_datehook.lst: hook/datehook.c $(hook/datehook.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ihook -I$(srcdir)/hook $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datehook_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh datehook > $@ || (rm -f $@; exit 1)

fs-datehook_mod-hook_datehook.lst: hook/datehook.c $(hook/datehook.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ihook -I$(srcdir)/hook $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datehook_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh datehook > $@ || (rm -f $@; exit 1)

parttool-datehook_mod-hook_datehook.lst: hook/datehook.c $(hook/datehook.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ihook -I$(srcdir)/hook $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datehook_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh datehook > $@ || (rm -f $@; exit 1)

partmap-datehook_mod-hook_datehook.lst: hook/datehook.c $(hook/datehook.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ihook -I$(srcdir)/hook $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datehook_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh datehook > $@ || (rm -f $@; exit 1)

handler-datehook_mod-hook_datehook.lst: hook/datehook.c $(hook/datehook.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ihook -I$(srcdir)/hook $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datehook_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh datehook > $@ || (rm -f $@; exit 1)

terminal-datehook_mod-hook_datehook.lst: hook/datehook.c $(hook/datehook.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ihook -I$(srcdir)/hook $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(datehook_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh datehook > $@ || (rm -f $@; exit 1)

video-datehook_mod-hook_datehook.lst: hook/datehook.c $(hook/datehook.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ihook -I$(srcdir)/hook $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(datehook_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh datehook > $@ || (rm -f $@; exit 1)

datehook_mod_CFLAGS = $(COMMON_CFLAGS)
datehook_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For lsmmap.mod
pkglib_MODULES += lsmmap.mod
lsmmap_mod_SOURCES = commands/lsmmap.c

clean-module-lsmmap.mod.1:
	rm -f lsmmap.mod mod-lsmmap.o mod-lsmmap.c pre-lsmmap.o lsmmap_mod-commands_lsmmap.o und-lsmmap.lst

CLEAN_MODULE_TARGETS += clean-module-lsmmap.mod.1

clean-module-lsmmap.mod-symbol.1:
	rm -f def-lsmmap.lst

CLEAN_MODULE_TARGETS += clean-module-lsmmap.mod-symbol.1
DEFSYMFILES += def-lsmmap.lst
mostlyclean-module-lsmmap.mod.1:
	rm -f lsmmap_mod-commands_lsmmap.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-lsmmap.mod.1
UNDSYMFILES += und-lsmmap.lst

ifeq ($(TARGET_NO_MODULES), yes)
lsmmap.mod: pre-lsmmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(lsmmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-lsmmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
lsmmap.mod: pre-lsmmap.o mod-lsmmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(lsmmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-lsmmap.o mod-lsmmap.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
lsmmap.mod: pre-lsmmap.o mod-lsmmap.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(lsmmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-lsmmap.o mod-lsmmap.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-lsmmap.o: $(lsmmap_mod_DEPENDENCIES) lsmmap_mod-commands_lsmmap.o
	-rm -f $@
	$(TARGET_CC) $(lsmmap_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ lsmmap_mod-commands_lsmmap.o

mod-lsmmap.o: mod-lsmmap.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(lsmmap_mod_CFLAGS) -DGRUB_FILE=\"mod-lsmmap.c\" -c -o $@ $<

mod-lsmmap.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'lsmmap' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-lsmmap.lst: pre-lsmmap.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 lsmmap/' > $@
else
def-lsmmap.lst: pre-lsmmap.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 lsmmap/' > $@
endif

und-lsmmap.lst: pre-lsmmap.o
	echo 'lsmmap' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

lsmmap_mod-commands_lsmmap.o: commands/lsmmap.c $(commands/lsmmap.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsmmap_mod_CFLAGS) -DGRUB_FILE=\"commands/lsmmap.c\" -MD -c -o $@ $<
-include lsmmap_mod-commands_lsmmap.d

clean-module-lsmmap_mod-commands_lsmmap-extra.1:
	rm -f cmd-lsmmap_mod-commands_lsmmap.lst fs-lsmmap_mod-commands_lsmmap.lst partmap-lsmmap_mod-commands_lsmmap.lst handler-lsmmap_mod-commands_lsmmap.lst parttool-lsmmap_mod-commands_lsmmap.lst video-lsmmap_mod-commands_lsmmap.lst terminal-lsmmap_mod-commands_lsmmap.lst

CLEAN_MODULE_TARGETS += clean-module-lsmmap_mod-commands_lsmmap-extra.1

COMMANDFILES += cmd-lsmmap_mod-commands_lsmmap.lst
FSFILES += fs-lsmmap_mod-commands_lsmmap.lst
PARTTOOLFILES += parttool-lsmmap_mod-commands_lsmmap.lst
PARTMAPFILES += partmap-lsmmap_mod-commands_lsmmap.lst
HANDLERFILES += handler-lsmmap_mod-commands_lsmmap.lst
TERMINALFILES += terminal-lsmmap_mod-commands_lsmmap.lst
VIDEOFILES += video-lsmmap_mod-commands_lsmmap.lst

cmd-lsmmap_mod-commands_lsmmap.lst: commands/lsmmap.c $(commands/lsmmap.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsmmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh lsmmap > $@ || (rm -f $@; exit 1)

fs-lsmmap_mod-commands_lsmmap.lst: commands/lsmmap.c $(commands/lsmmap.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lsmmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh lsmmap > $@ || (rm -f $@; exit 1)

parttool-lsmmap_mod-commands_lsmmap.lst: commands/lsmmap.c $(commands/lsmmap.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsmmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh lsmmap > $@ || (rm -f $@; exit 1)

partmap-lsmmap_mod-commands_lsmmap.lst: commands/lsmmap.c $(commands/lsmmap.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lsmmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh lsmmap > $@ || (rm -f $@; exit 1)

handler-lsmmap_mod-commands_lsmmap.lst: commands/lsmmap.c $(commands/lsmmap.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsmmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh lsmmap > $@ || (rm -f $@; exit 1)

terminal-lsmmap_mod-commands_lsmmap.lst: commands/lsmmap.c $(commands/lsmmap.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(lsmmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh lsmmap > $@ || (rm -f $@; exit 1)

video-lsmmap_mod-commands_lsmmap.lst: commands/lsmmap.c $(commands/lsmmap.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(lsmmap_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh lsmmap > $@ || (rm -f $@; exit 1)

lsmmap_mod_CFLAGS = $(COMMON_CFLAGS)
lsmmap_mod_LDFLAGS = $(COMMON_LDFLAGS)

# For boot.mod.
pkglib_MODULES += boot.mod
boot_mod_SOURCES = commands/boot.c lib/i386/pc/biosnum.c

clean-module-boot.mod.1:
	rm -f boot.mod mod-boot.o mod-boot.c pre-boot.o boot_mod-commands_boot.o boot_mod-lib_i386_pc_biosnum.o und-boot.lst

CLEAN_MODULE_TARGETS += clean-module-boot.mod.1

clean-module-boot.mod-symbol.1:
	rm -f def-boot.lst

CLEAN_MODULE_TARGETS += clean-module-boot.mod-symbol.1
DEFSYMFILES += def-boot.lst
mostlyclean-module-boot.mod.1:
	rm -f boot_mod-commands_boot.d boot_mod-lib_i386_pc_biosnum.d

MOSTLYCLEAN_MODULE_TARGETS += mostlyclean-module-boot.mod.1
UNDSYMFILES += und-boot.lst

ifeq ($(TARGET_NO_MODULES), yes)
boot.mod: pre-boot.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(boot_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-boot.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
ifneq ($(TARGET_APPLE_CC),1)
boot.mod: pre-boot.o mod-boot.o $(TARGET_OBJ2ELF)
	-rm -f $@
	$(TARGET_CC) $(boot_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ pre-boot.o mod-boot.o
	if test ! -z "$(TARGET_OBJ2ELF)"; then ./$(TARGET_OBJ2ELF) $@ || (rm -f $@; exit 1); fi
	if test x$(TARGET_NO_STRIP) != xyes ; then $(STRIP) --strip-unneeded -K grub_mod_init -K grub_mod_fini -K _grub_mod_init -K _grub_mod_fini -R .note -R .comment $@; fi
else
boot.mod: pre-boot.o mod-boot.o $(TARGET_OBJ2ELF)
	-rm -f $@
	-rm -f $@.bin
	$(TARGET_CC) $(boot_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@.bin pre-boot.o mod-boot.o
	$(OBJCONV) -f$(TARGET_MODULE_FORMAT) -nr:_grub_mod_init:grub_mod_init -nr:_grub_mod_fini:grub_mod_fini -wd1106 -ew2030 -ew2050 -nu -nd $@.bin $@
	-rm -f $@.bin
endif
endif

pre-boot.o: $(boot_mod_DEPENDENCIES) boot_mod-commands_boot.o boot_mod-lib_i386_pc_biosnum.o
	-rm -f $@
	$(TARGET_CC) $(boot_mod_LDFLAGS) $(TARGET_LDFLAGS) -Wl,-r,-d -o $@ boot_mod-commands_boot.o boot_mod-lib_i386_pc_biosnum.o

mod-boot.o: mod-boot.c
	$(TARGET_CC) $(TARGET_CPPFLAGS) $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -DGRUB_FILE=\"mod-boot.c\" -c -o $@ $<

mod-boot.c: $(builddir)/moddep.lst $(srcdir)/genmodsrc.sh
	sh $(srcdir)/genmodsrc.sh 'boot' $< > $@ || (rm -f $@; exit 1)

ifneq ($(TARGET_APPLE_CC),1)
def-boot.lst: pre-boot.o
	$(NM) -g --defined-only -P -p $< | sed 's/^\([^ ]*\).*/\1 boot/' > $@
else
def-boot.lst: pre-boot.o
	$(NM) -g -P -p $< | grep -E '^[a-zA-Z0-9_]* [TDS]'  | sed 's/^\([^ ]*\).*/\1 boot/' > $@
endif

und-boot.lst: pre-boot.o
	echo 'boot' > $@
	$(NM) -u -P -p $< | cut -f1 -d' ' >> $@

boot_mod-commands_boot.o: commands/boot.c $(commands/boot.c_DEPENDENCIES)
	$(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -DGRUB_FILE=\"commands/boot.c\" -MD -c -o $@ $<
-include boot_mod-commands_boot.d

clean-module-boot_mod-commands_boot-extra.1:
	rm -f cmd-boot_mod-commands_boot.lst fs-boot_mod-commands_boot.lst partmap-boot_mod-commands_boot.lst handler-boot_mod-commands_boot.lst parttool-boot_mod-commands_boot.lst video-boot_mod-commands_boot.lst terminal-boot_mod-commands_boot.lst

CLEAN_MODULE_TARGETS += clean-module-boot_mod-commands_boot-extra.1

COMMANDFILES += cmd-boot_mod-commands_boot.lst
FSFILES += fs-boot_mod-commands_boot.lst
PARTTOOLFILES += parttool-boot_mod-commands_boot.lst
PARTMAPFILES += partmap-boot_mod-commands_boot.lst
HANDLERFILES += handler-boot_mod-commands_boot.lst
TERMINALFILES += terminal-boot_mod-commands_boot.lst
VIDEOFILES += video-boot_mod-commands_boot.lst

cmd-boot_mod-commands_boot.lst: commands/boot.c $(commands/boot.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh boot > $@ || (rm -f $@; exit 1)

fs-boot_mod-commands_boot.lst: commands/boot.c $(commands/boot.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh boot > $@ || (rm -f $@; exit 1)

parttool-boot_mod-commands_boot.lst: commands/boot.c $(commands/boot.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh boot > $@ || (rm -f $@; exit 1)

partmap-boot_mod-commands_boot.lst: commands/boot.c $(commands/boot.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh boot > $@ || (rm -f $@; exit 1)

handler-boot_mod-commands_boot.lst: commands/boot.c $(commands/boot.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh boot > $@ || (rm -f $@; exit 1)

terminal-boot_mod-commands_boot.lst: commands/boot.c $(commands/boot.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh boot > $@ || (rm -f $@; exit 1)

video-boot_mod-commands_boot.lst: commands/boot.c $(commands/boot.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Icommands -I$(srcdir)/commands $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh boot > $@ || (rm -f $@; exit 1)

boot_mod-lib_i386_pc_biosnum.o: lib/i386/pc/biosnum.c $(lib/i386/pc/biosnum.c_DEPENDENCIES)
	$(TARGET_CC) -Ilib/i386/pc -I$(srcdir)/lib/i386/pc $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -DGRUB_FILE=\"lib/i386/pc/biosnum.c\" -MD -c -o $@ $<
-include boot_mod-lib_i386_pc_biosnum.d

clean-module-boot_mod-lib_i386_pc_biosnum-extra.1:
	rm -f cmd-boot_mod-lib_i386_pc_biosnum.lst fs-boot_mod-lib_i386_pc_biosnum.lst partmap-boot_mod-lib_i386_pc_biosnum.lst handler-boot_mod-lib_i386_pc_biosnum.lst parttool-boot_mod-lib_i386_pc_biosnum.lst video-boot_mod-lib_i386_pc_biosnum.lst terminal-boot_mod-lib_i386_pc_biosnum.lst

CLEAN_MODULE_TARGETS += clean-module-boot_mod-lib_i386_pc_biosnum-extra.1

COMMANDFILES += cmd-boot_mod-lib_i386_pc_biosnum.lst
FSFILES += fs-boot_mod-lib_i386_pc_biosnum.lst
PARTTOOLFILES += parttool-boot_mod-lib_i386_pc_biosnum.lst
PARTMAPFILES += partmap-boot_mod-lib_i386_pc_biosnum.lst
HANDLERFILES += handler-boot_mod-lib_i386_pc_biosnum.lst
TERMINALFILES += terminal-boot_mod-lib_i386_pc_biosnum.lst
VIDEOFILES += video-boot_mod-lib_i386_pc_biosnum.lst

cmd-boot_mod-lib_i386_pc_biosnum.lst: lib/i386/pc/biosnum.c $(lib/i386/pc/biosnum.c_DEPENDENCIES) gencmdlist.sh
	set -e; 	  $(TARGET_CC) -Ilib/i386/pc -I$(srcdir)/lib/i386/pc $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/gencmdlist.sh boot > $@ || (rm -f $@; exit 1)

fs-boot_mod-lib_i386_pc_biosnum.lst: lib/i386/pc/biosnum.c $(lib/i386/pc/biosnum.c_DEPENDENCIES) genfslist.sh
	set -e; 	  $(TARGET_CC) -Ilib/i386/pc -I$(srcdir)/lib/i386/pc $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genfslist.sh boot > $@ || (rm -f $@; exit 1)

parttool-boot_mod-lib_i386_pc_biosnum.lst: lib/i386/pc/biosnum.c $(lib/i386/pc/biosnum.c_DEPENDENCIES) genparttoollist.sh
	set -e; 	  $(TARGET_CC) -Ilib/i386/pc -I$(srcdir)/lib/i386/pc $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genparttoollist.sh boot > $@ || (rm -f $@; exit 1)

partmap-boot_mod-lib_i386_pc_biosnum.lst: lib/i386/pc/biosnum.c $(lib/i386/pc/biosnum.c_DEPENDENCIES) genpartmaplist.sh
	set -e; 	  $(TARGET_CC) -Ilib/i386/pc -I$(srcdir)/lib/i386/pc $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genpartmaplist.sh boot > $@ || (rm -f $@; exit 1)

handler-boot_mod-lib_i386_pc_biosnum.lst: lib/i386/pc/biosnum.c $(lib/i386/pc/biosnum.c_DEPENDENCIES) genhandlerlist.sh
	set -e; 	  $(TARGET_CC) -Ilib/i386/pc -I$(srcdir)/lib/i386/pc $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genhandlerlist.sh boot > $@ || (rm -f $@; exit 1)

terminal-boot_mod-lib_i386_pc_biosnum.lst: lib/i386/pc/biosnum.c $(lib/i386/pc/biosnum.c_DEPENDENCIES) genterminallist.sh
	set -e; 	  $(TARGET_CC) -Ilib/i386/pc -I$(srcdir)/lib/i386/pc $(TARGET_CPPFLAGS)  $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genterminallist.sh boot > $@ || (rm -f $@; exit 1)

video-boot_mod-lib_i386_pc_biosnum.lst: lib/i386/pc/biosnum.c $(lib/i386/pc/biosnum.c_DEPENDENCIES) genvideolist.sh
	set -e; 	  $(TARGET_CC) -Ilib/i386/pc -I$(srcdir)/lib/i386/pc $(TARGET_CPPFLAGS)  -DGRUB_LST_GENERATOR $(TARGET_CFLAGS) $(boot_mod_CFLAGS) -E $< 	  | sh $(srcdir)/genvideolist.sh boot > $@ || (rm -f $@; exit 1)

boot_mod_CFLAGS = $(COMMON_CFLAGS)
boot_mod_LDFLAGS = $(COMMON_LDFLAGS)

bin_UTILITIES += grub-mkpasswd-pbkdf2
grub_mkpasswd_pbkdf2_SOURCES = gnulib/progname.c gnulib/getdelim.c gnulib/getline.c util/grub-mkpasswd-pbkdf2.c lib/crypto.c lib/libgcrypt-grub/cipher/sha512.c lib/pbkdf2.c util/misc.c kern/emu/misc.c kern/emu/mm.c kern/err.c

clean-utility-grub-mkpasswd-pbkdf2.1:
	rm -f grub-mkpasswd-pbkdf2$(EXEEXT) grub_mkpasswd_pbkdf2-gnulib_progname.o grub_mkpasswd_pbkdf2-gnulib_getdelim.o grub_mkpasswd_pbkdf2-gnulib_getline.o grub_mkpasswd_pbkdf2-util_grub_mkpasswd_pbkdf2.o grub_mkpasswd_pbkdf2-lib_crypto.o grub_mkpasswd_pbkdf2-lib_libgcrypt_grub_cipher_sha512.o grub_mkpasswd_pbkdf2-lib_pbkdf2.o grub_mkpasswd_pbkdf2-util_misc.o grub_mkpasswd_pbkdf2-kern_emu_misc.o grub_mkpasswd_pbkdf2-kern_emu_mm.o grub_mkpasswd_pbkdf2-kern_err.o

CLEAN_UTILITY_TARGETS += clean-utility-grub-mkpasswd-pbkdf2.1

mostlyclean-utility-grub-mkpasswd-pbkdf2.1:
	rm -f grub_mkpasswd_pbkdf2-gnulib_progname.d grub_mkpasswd_pbkdf2-gnulib_getdelim.d grub_mkpasswd_pbkdf2-gnulib_getline.d grub_mkpasswd_pbkdf2-util_grub_mkpasswd_pbkdf2.d grub_mkpasswd_pbkdf2-lib_crypto.d grub_mkpasswd_pbkdf2-lib_libgcrypt_grub_cipher_sha512.d grub_mkpasswd_pbkdf2-lib_pbkdf2.d grub_mkpasswd_pbkdf2-util_misc.d grub_mkpasswd_pbkdf2-kern_emu_misc.d grub_mkpasswd_pbkdf2-kern_emu_mm.d grub_mkpasswd_pbkdf2-kern_err.d

MOSTLYCLEAN_UTILITY_TARGETS += mostlyclean-utility-grub-mkpasswd-pbkdf2.1

grub_mkpasswd_pbkdf2_OBJECTS += grub_mkpasswd_pbkdf2-gnulib_progname.o grub_mkpasswd_pbkdf2-gnulib_getdelim.o grub_mkpasswd_pbkdf2-gnulib_getline.o grub_mkpasswd_pbkdf2-util_grub_mkpasswd_pbkdf2.o grub_mkpasswd_pbkdf2-lib_crypto.o grub_mkpasswd_pbkdf2-lib_libgcrypt_grub_cipher_sha512.o grub_mkpasswd_pbkdf2-lib_pbkdf2.o grub_mkpasswd_pbkdf2-util_misc.o grub_mkpasswd_pbkdf2-kern_emu_misc.o grub_mkpasswd_pbkdf2-kern_emu_mm.o grub_mkpasswd_pbkdf2-kern_err.o

grub_mkpasswd_pbkdf2-gnulib_progname.o: gnulib/progname.c $(gnulib/progname.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"gnulib/progname.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-gnulib_progname.d

grub_mkpasswd_pbkdf2-gnulib_getdelim.o: gnulib/getdelim.c $(gnulib/getdelim.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"gnulib/getdelim.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-gnulib_getdelim.d

grub_mkpasswd_pbkdf2-gnulib_getline.o: gnulib/getline.c $(gnulib/getline.c_DEPENDENCIES)
	$(CC) -Ignulib -I$(srcdir)/gnulib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"gnulib/getline.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-gnulib_getline.d

grub_mkpasswd_pbkdf2-util_grub_mkpasswd_pbkdf2.o: util/grub-mkpasswd-pbkdf2.c $(util/grub-mkpasswd-pbkdf2.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"util/grub-mkpasswd-pbkdf2.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-util_grub_mkpasswd_pbkdf2.d

grub_mkpasswd_pbkdf2-lib_crypto.o: lib/crypto.c $(lib/crypto.c_DEPENDENCIES)
	$(CC) -Ilib -I$(srcdir)/lib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"lib/crypto.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-lib_crypto.d

grub_mkpasswd_pbkdf2-lib_libgcrypt_grub_cipher_sha512.o: lib/libgcrypt-grub/cipher/sha512.c $(lib/libgcrypt-grub/cipher/sha512.c_DEPENDENCIES)
	$(CC) -Ilib/libgcrypt-grub/cipher -I$(srcdir)/lib/libgcrypt-grub/cipher $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"lib/libgcrypt-grub/cipher/sha512.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-lib_libgcrypt_grub_cipher_sha512.d

grub_mkpasswd_pbkdf2-lib_pbkdf2.o: lib/pbkdf2.c $(lib/pbkdf2.c_DEPENDENCIES)
	$(CC) -Ilib -I$(srcdir)/lib $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"lib/pbkdf2.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-lib_pbkdf2.d

grub_mkpasswd_pbkdf2-util_misc.o: util/misc.c $(util/misc.c_DEPENDENCIES)
	$(CC) -Iutil -I$(srcdir)/util $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"util/misc.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-util_misc.d

grub_mkpasswd_pbkdf2-kern_emu_misc.o: kern/emu/misc.c $(kern/emu/misc.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"kern/emu/misc.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-kern_emu_misc.d

grub_mkpasswd_pbkdf2-kern_emu_mm.o: kern/emu/mm.c $(kern/emu/mm.c_DEPENDENCIES)
	$(CC) -Ikern/emu -I$(srcdir)/kern/emu $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"kern/emu/mm.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-kern_emu_mm.d

grub_mkpasswd_pbkdf2-kern_err.o: kern/err.c $(kern/err.c_DEPENDENCIES)
	$(CC) -Ikern -I$(srcdir)/kern $(CPPFLAGS) $(CFLAGS) -DGRUB_UTIL=1 $(grub_mkpasswd_pbkdf2_CFLAGS) -DGRUB_FILE=\"kern/err.c\" -MD -c -o $@ $<
-include grub_mkpasswd_pbkdf2-kern_err.d

grub_mkpasswd_pbkdf2_CFLAGS += -Wno-missing-field-initializers -Wno-error -I$(srcdir)/lib/libgcrypt_wrap -DGRUB_MKPASSWD=1

include $(srcdir)/conf/gcry.mk
grub-mkdevicemap: $(grub_mkdevicemap_DEPENDENCIES) $(grub_mkdevicemap_OBJECTS)
	$(CC) -o $@ $(grub_mkdevicemap_OBJECTS) $(LDFLAGS) $(grub_mkdevicemap_LDFLAGS)

grub-mkimage: $(grub_mkimage_DEPENDENCIES) $(grub_mkimage_OBJECTS)
	$(CC) -o $@ $(grub_mkimage_OBJECTS) $(LDFLAGS) $(grub_mkimage_LDFLAGS)

grub-probe: $(grub_probe_DEPENDENCIES) $(grub_probe_OBJECTS)
	$(CC) -o $@ $(grub_probe_OBJECTS) $(LDFLAGS) $(grub_probe_LDFLAGS)

grub-fstest: $(grub_fstest_DEPENDENCIES) $(grub_fstest_OBJECTS)
	$(CC) -o $@ $(grub_fstest_OBJECTS) $(LDFLAGS) $(grub_fstest_LDFLAGS)

grub-mkfont: $(grub_mkfont_DEPENDENCIES) $(grub_mkfont_OBJECTS)
	$(CC) -o $@ $(grub_mkfont_OBJECTS) $(LDFLAGS) $(grub_mkfont_LDFLAGS)

grub-mkrelpath: $(grub_mkrelpath_DEPENDENCIES) $(grub_mkrelpath_OBJECTS)
	$(CC) -o $@ $(grub_mkrelpath_OBJECTS) $(LDFLAGS) $(grub_mkrelpath_LDFLAGS)

grub-bin2h: $(grub_bin2h_DEPENDENCIES) $(grub_bin2h_OBJECTS)
	$(CC) -o $@ $(grub_bin2h_OBJECTS) $(LDFLAGS) $(grub_bin2h_LDFLAGS)

grub-script-check: $(grub_script_check_DEPENDENCIES) $(grub_script_check_OBJECTS)
	$(CC) -o $@ $(grub_script_check_OBJECTS) $(LDFLAGS) $(grub_script_check_LDFLAGS)

grub-editenv: $(grub_editenv_DEPENDENCIES) $(grub_editenv_OBJECTS)
	$(CC) -o $@ $(grub_editenv_OBJECTS) $(LDFLAGS) $(grub_editenv_LDFLAGS)

grub-macho2img: $(grub_macho2img_DEPENDENCIES) $(grub_macho2img_OBJECTS)
	$(CC) -o $@ $(grub_macho2img_OBJECTS) $(LDFLAGS) $(grub_macho2img_LDFLAGS)

grub-pe2elf: $(grub_pe2elf_DEPENDENCIES) $(grub_pe2elf_OBJECTS)
	$(CC) -o $@ $(grub_pe2elf_OBJECTS) $(LDFLAGS) $(grub_pe2elf_LDFLAGS)

grub-mkpasswd-pbkdf2: $(grub_mkpasswd_pbkdf2_DEPENDENCIES) $(grub_mkpasswd_pbkdf2_OBJECTS)
	$(CC) -o $@ $(grub_mkpasswd_pbkdf2_OBJECTS) $(LDFLAGS) $(grub_mkpasswd_pbkdf2_LDFLAGS)

